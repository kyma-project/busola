worker_processes 1; # setting this to 'auto' will result in creating as many worker processes as the number of CPU threads available
pid  /var/run/nginx.pid;

events {
  worker_connections  256; 
  multi_accept        on;
  use                epoll;
}

http {
  access_log off;
  error_log /dev/stderr;

  default_type application/octet-stream;
  include /etc/nginx/mime.types;
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  gzip on;
  gzip_types    text/plain application/javascript application/x-javascript text/javascript text/xml text/css;
  keepalive_timeout 5;
  keepalive_requests 200;
  reset_timedout_connection on;
  server_tokens off;

  #limit_req_zone $binary_remote_addr zone=mylimit:1m rate=10r/s;

  map $status $nonSuccessful {
      ~^2  0;
      default 1;
  }

  server {
    server_name localhost3;
    listen 6080;
    port_in_redirect off;

    location /healthz {
      stub_status;
    }
  }

  server {
    server_name localhost;
    listen 8080;
    root /var/public;
    port_in_redirect off;
    access_log /dev/stdout;

    location / {
        access_log /dev/stdout combined if=$nonSuccessful;
        #limit_req zone=mylimit burst=30; # we might consider using this feature; for now it destroys the performance completely
        try_files $uri$args $uri$args/ $uri $uri/ /;

        add_header 'Cache-Control' 'public, max-age=300';
        add_header Access-Control-Allow-Origin *;
        add_header X-Content-Type-Options 'nosniff';
        add_header Strict-Transport-Security 'max-age=31536000; includeSubDomains';
        add_header X-XSS-Protection '1; mode=block';
        add_header X-Frame-Options 'SAMEORIGIN';
        add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-eval' 'sha256-bjOtDHhqB+wVlyFDAxz9e0RvTn+EEec/Z4mpjUjNvAs=' data: blob:; style-src 'self' 'unsafe-inline'; connect-src 'self' * https://* wss://*; font-src 'self' data:; frame-ancestors https://*; object-src 'none'; media-src 'self'; form-action 'self'; img-src * data:; child-src * blob:; worker-src 'self' blob: data:;";
        # allow unsafe-eval scripts because of "ajv" module - https://github.com/ajv-validator/ajv/issues/406    
    }

    location /status {
        stub_status;
        add_header Access-Control-Allow-Origin *;
    }

  }
}