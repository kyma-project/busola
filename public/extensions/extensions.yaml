dataSources:
  moduleTemplates:
    resource:
      kind: ModuleTemplate
      namespace: kyma-system
      group: operator.kyma-project.io
      version: v1alpha1
details:
  header: []
  body:
    - name: Summary
      widget: Panel
      children:
        - name: channel
          source: spec.channel
        - name: State
          widget: Badge
          source: status.state
          description: 'status.state!="Ready" ? status.lastOperation.operation : ""'
        - name: Age
          source: metadata.creationTimestamp
    - widget: Alert
      severity: warning
      source: '"alert.beta"'
      visibility: '"beta" in $item.spec.modules.channel'
    - widget: Table
      source: 'spec.modules[]'
      name: Modules
      visibility: $exists(*)
      children:
        - source: $item.name
          name: Module Name
        - source: $item.channel
          name: Channel
        - name: Version
          source: '$parent.status.modules ? $filter($parent.status.modules, function($p){$p.name=$item.name}).version : "-"'
          widget: Text
        - name: State
          widget: Badge
          source: '$filter($parent.status.modules, function($p){$p.name=name}).state'
form:
  - simple: true
    path: spec.channel
    required: true
  - widget: GenericList
    path: spec.modules
    children:
      - path: "[].name"
        required: true
        enum: '$distinct($moduleTemplates().items.metadata.labels."operator.kyma-project.io/module-name")'
      - path: "[].channel"
        required: true
        visibility: "$boolean($item.name)"
        enum: |
          $filter($moduleTemplates().items, function($v) {
            $v.metadata.labels."operator.kyma-project.io/module-name" = $item.name
          }).spec.channel
  - widget: Alert
    severity: warning
    alert: '"alert.beta"'
    visibility: '"beta" in $item.spec.modules.channel'
general:
  resource:
    kind: Kyma
    group: operator.kyma-project.io
    version: v1alpha1
  name: AK Kyma
  category: AK
  urlPath: ak-kymas
  scope: namespace
list:
  - name: Channel
    widget: Labels
    source: spec.channel
  - name: State
    widget: Badge
    source: status.state
    tooltip: status.state
  - name: Age
    source: metadata.creationTimestamp
translations:
  en:
    metadata.annotations: Annotations
    metadata.labels: Labels
    metadata.creationTimestamp: Created at
    alert.beta: "CAUTION: The Service Level Agreements (SLA) and Support obligations do not apply to Beta modules and functionalities. If Beta modules or functionalities directly or indirectly affect other modules, the Service Level Agreements (SLA) and Support for these modules are limited to priority levels P3 (Medium) or P4 (Low). Thus, Beta releases are not intended for use in customer production environments."
injections:
  - name: Kyma
    widget: Panel
    source: $
    targets:
      - slot: top
        location: ClusterOverview
    order: 1 
    children: 
      - name: Name
        source: metadata.name
        widget: ResourceLink
        resource:
          name: metadata.name
          namespace: metadata.namespace
          kind: '"Kyma"'
      - name: State
        widget: Badge
        source: status.state
        description: 'status.state!="Ready" ? status.lastOperation.operation : ""'
      - widget: Alert
        severity: warning
        source: '"alert.beta"'
        visibility: '"beta" in $item.spec.modules.channel'
      - name: Installed Modules
        source: $item.spec.modules
        widget: Table
        disablePadding: true
        extraHeaderContent: 
          - name: ''
            source: '"Modify"'
            widget: ResourceButton
            resource:
              name: $parent.metadata.name
              namespace: $parent.metadata.namespace
              kind: '"Kyma"'
        children: 
          - name: Name
            source: name
          - name: Namespace
            source: $parent.metadata.namespace
          - name: Channel
            source: channel
            widget: Text
          - name: Version
            source: '$parent.status.modules ? $filter($parent.status.modules, function($p){$p.name=name}).version : "-"'
            widget: Text
          - name: State
            widget: Badge
            source: '$filter($parent.status.modules, function($p){$p.name=name}).state'
        