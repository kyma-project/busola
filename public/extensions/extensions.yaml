dataSources:
  relatedGateways:
    resource:
      kind: Gateway
      group: networking.istio.io
      version: v1beta1
      namespace: null
  relatedServices:
    resource:
      kind: Service
      version: v1
      namespace: null
  virtualServices:
    resource:
      kind: VirtualService
      group: networking.istio.io
      version: v1beta1
      namespace: null
    filter: >-
      $contains($item.metadata.ownerReferences[0].name, $root.metadata.name) and
      $contains($item.metadata.ownerReferences[0].kind, $root.kind)
details:
  header:
    - name: status
      widget: Badge
      highlights:
        success:
          - OK
        error:
          - ERROR
          - SKIPPED
      source: 'status.APIRuleStatus.code ? status.APIRuleStatus.code : "UNKNOWN"'
      description: status.APIRuleStatus.desc
    - name: host
      source: spec
      widget: APIRuleHost
  body:
    - name: general
      source: spec.timeout
    - name: service
      source: spec.service
      widget: Panel
      children:
        - name: service.name
          source: name
          widget: ResourceLink
          resource:
            name: $root.spec.service.name
            namespace: $root.metadata.namespace
            kind: '"Service"'
        - name: service.port
          source: port
    - source: spec.rules
      widget: Table
      name: rules
      children:
        - source: $item.path
          name: rules.path
        - source: $item.methods
          name: rules.methods
          widget: Badge
      collapsible:
        - name: general
          source: $item
          widget: Panel
          visibility: $exists($item.timeout)
          children:
            - source: $item.timeout
              name: timeout
        - source: $item.accessStrategies
          widget: Table
          disablePadding: true
          name: accessStrategies
          children:
            - source: $item.handler
              name: accessStrategies.handlers
              widget: Badge
            - source: $item.config.required_scope
              name: accessStrategies.required_scope
              widget: JoinedArray
            - source: $item.config.jwks_urls
              name: accessStrategies.jwks_urls
              widget: JoinedArray
            - source: $item.config.trusted_issuers
              name: accessStrategies.trusted_issuers
              widget: JoinedArray
            - source: $item.config.introspection_url
              name: accessStrategies.introspection_url
              widget: Text
            - source: $item.config.introspection_request_headers
              name: accessStrategies.introspection_request_headers
              widget: Labels
        - source: $item.mutators
          widget: Table
          disablePadding: true
          name: mutators
          visibility: $exists($item.mutators)
          children:
            - source: $item.handler
              name: mutators.handlers
              widget: Badge
            - source: $item.config
              name: mutators.config
        - name: service
          source: $item.service
          widget: Panel
          visibility: $exists($item.service)
          children:
            - name: service.name
              source: $item.service.name
              widget: ResourceLink
              resource:
                name: $item.service.name
                namespace: $root.metadata.namespace
                kind: '"Service"'
            - name: service.port
              source: $item.service.port
    - widget: ResourceList
      source: $virtualServices()
      name: virtualService
      disableCreate: true
form:
  - simple: true
    required: false
    path: spec.timeout
    name: timeout
    inputInfo: inputInfo.timeout
  - simple: true
    required: false
    path: spec.service
    name: service
    widget: FormGroup
    defaultExpanded: true
    children:
      - simple: true
        required: false
        path: name
        name: service-name
        widget: Resource
        resource:
          kind: Service
          version: v1
          scope: namespace
        trigger:
          - port
      - simple: true
        required: false
        path: port
        name: service.port
        subscribe:
          port: >-
            $filter($relatedServices().items, function ($v) { $v.metadata.name =
            $root.spec.service.name and $v.metadata.namespace =
            $root.metadata.namespace }).spec.ports[0].port
  - simple: true
    required: true
    path: spec.gateway
    name: gateway
    widget: ResourceRef
    defaultExpanded: true
    visibility: $canI('networking.istio.io/v1beta1', 'Gateway')
    resource:
      kind: Gateway
      group: networking.istio.io
      version: v1beta1
    overwrite: false
    toInternal: >-
      ($values := $split($, "."); { "namespace": $values[1], "name": $values[0]
      })
    toExternal: name & "." & namespace & ".svc.cluster.local"
    trigger:
      - host
  - simple: true
    var: separator
    value: ''
  - simple: true
    required: true
    path: spec.gateway
    name: gateway
    visibility: $not($canI('networking.istio.io/v1beta1', 'Gateway'))
    inputInfo: inputInfo.gateway
    overwrite: false
    trigger:
      - host
  - simple: true
    required: true
    path: spec.host
    name: host
    enum: >-
      $distinct($filter($relatedGateways().items, function ($v) {
      $v.metadata.name = $substringBefore($root.spec.gateway, '.') and
      $v.metadata.namespace =
      $substringBefore($substringAfter($root.spec.gateway, '.'),
      '.')}).spec.servers.hosts)
    subscribe:
      host: >-
        $string($filter($relatedGateways().items, function ($v) { 
        $v.metadata.name = $substringBefore($root.spec.gateway, '.') and
        $v.metadata.namespace =
        $substringBefore($substringAfter($root.spec.gateway, '.'),
        '.')}).spec.servers[0].hosts[0])
  - simple: true
    widget: Alert
    severity: error
    alert: '"alert.spec.host"'
    visibility: $substring(spec.host, 0, 1)="*"
  - simple: true
    required: true
    path: spec.rules
    name: rules
    widget: GenericList
    defaultExpanded: true
    template:
      path: /.*
      methods:
        - GET
      accessStrategies:
        - handler: allow
    children:
      - simple: true
        required: false
        path: '[].timeout'
        name: timeout
        inputInfo: inputInfo.timeout
        value:
          type: number
      - simple: true
        required: true
        path: '[].path'
        name: path
        inputInfo: inputInfo.path
      - required: true
        simple: true
        path: '[].accessStrategies'
        name: accessStrategies
        widget: GenericList
        defaultExpanded: true
        template:
          handler: allow
        children:
          - required: true
            simple: true
            path: '[].handler'
            name: accessStrategies.handler
            enum:
              - allow
              - noop
              - jwt
              - oauth2_introspection
          - path: '[].config'
            simple: true
            name: accessStrategies.config
            type: object
            properties:
              jwks_urls:
                type: array
                items:
                  type: string
                  pattern: ^(https://|file://).*$
              trusted_issuers:
                type: array
                items:
                  type: string
                  pattern: ^(https://|file://).*$
              required_scope:
                type: array
                items:
                  type: string
              introspection_url:
                type: string
                pattern: ^(https://|http://).*$
              introspection_request_headers:
                type: map
            children:
              - path: jwks_urls
                name: accessStrategies.jwks_urls
                inputInfo: inputInfo.jwks_urls
                simple: true
                widget: SimpleList
                visibility: $item.handler="jwt"
                children:
                  - path: '[]'
                    simple: true
              - path: trusted_issuers
                name: accessStrategies.trusted_issuers
                inputInfo: inputInfo.trusted_issuers
                simple: true
                widget: SimpleList
                visibility: $item.handler="jwt"
                children:
                  - path: '[]'
                    simple: true
              - path: introspection_url
                name: accessStrategies.introspection_url
                inputInfo: inputInfo.introspection_url
                simple: true
                visibility: $item.handler="oauth2_introspection"
              - path: introspection_request_headers
                name: accessStrategies.introspection_request_headers
                simple: true
                inputInfo: inputInfo.introspection_request_headers
                widget: KeyValuePair
                visibility: $item.handler="oauth2_introspection"
              - path: required_scope
                name: accessStrategies.required_scope
                simple: true
                widget: SimpleList
                visibility: >-
                  $item.handler="oauth2_introspection" or
                  $item.handler="oauth2_client_credentials" or
                  $item.handler="jwt"
                children:
                  - path: '[]'
                    simple: true
      - required: true
        simple: true
        path: '[].methods'
        name: rules.methods
        widget: MultiCheckbox
        options:
          - key: GET
          - key: POST
          - key: PUT
          - key: DELETE
          - key: PATCH
          - key: HEAD
      - path: '[].mutators'
        name: mutators
        widget: GenericList
        children:
          - path: '[].config'
            name: accessStrategies.config
            widget: KeyValuePair
          - required: true
            path: '[].handler'
            name: accessStrategies.handler
      - path: '[].service'
        simple: true
        name: service
        widget: FormGroup
        children:
          - simple: true
            required: false
            path: name
            name: service-name
            widget: Resource
            resource:
              kind: Service
              version: v1
              scope: namespace
            trigger:
              - accessStrategyPort
          - simple: true
            required: false
            path: port
            name: service.port
            subscribe:
              accessStrategyPort: >-
                $filter($relatedServices().items, function ($v) {
                $v.metadata.name = $item.service.name and $v.metadata.namespace
                = $root.metadata.namespace }).spec.ports[0].port
general:
  resource:
    kind: APIRule
    group: gateway.kyma-project.io
    version: v1beta1
  name: API Rules
  category: Discovery and Network
  scope: namespace
  description: >-
    {{[APIRule](https://kyma-project.io/docs/kyma/latest/05-technical-reference/00-custom-resources/apix-01-apirule/#documentation-content)}}
    allows for exposing a service externally.
  urlPath: apirules
list:
  - name: host
    source: spec
    widget: APIRuleHost
  - name: service-name
    source: >-
      $string(spec.service.name) ? ($string(spec.service.name) & " (port: " &
      $string(spec.service.port) & ")") : ""
    widget: ResourceLink
    resource:
      name: $root.spec.service.name
      namespace: $root.metadata.namespace
      kind: '"Service"'
  - name: status
    widget: Badge
    highlights:
      positive:
        - OK
      negative:
        - ERROR
      critical:
        - SKIPPED
    source: 'status.APIRuleStatus.code ? status.APIRuleStatus.code : "UNKNOWN"'
    description: status.APIRuleStatus.desc
presets:
  - name: Default gateway
    default: true
    value:
      spec:
        gateway: kyma-gateway.kyma-system.svc.cluster.local
        rules:
          - path: /.*
            methods:
              - GET
            accessStrategies:
              - handler: allow
translations:
  en:
    accessStrategies: Access Strategies
    accessStrategies.config: Config
    accessStrategies.handler: Handler
    accessStrategies.handlers: Handlers
    accessStrategies.jwks_urls: JWKS URLs
    accessStrategies.trusted_issuers: Trusted Issuers
    accessStrategies.required_scope: Required Scope
    accessStrategies.introspection_url: Introspection URL
    accessStrategies.introspection_request_headers: Introspection Request Headers
    gateway: Gateway
    host: Host
    inputInfo.gateway: Gateway structure, '{GATEWAY}.{NAMESPACE}.svc.cluster.local'
    inputInfo.path: >-
      Path can contain alphanumeric characters and '/', '.', '*', '?', '!', '-',
      '(', and ')'.
    inputInfo.jwks_urls: JWKS URLs must start with 'https://' or 'file://'
    inputInfo.trusted_issuers: Trusted Issuers must start with 'https://' or 'file://'
    inputInfo.introspection_url: >-
      URL endpoint used for validating the Bearer token. Should start with
      'http://' or 'https://'
    inputInfo.introspection_request_headers: Headers sent alongside the introspection request
    inputInfo.timeout: >-
      Timeout for HTTP requests in seconds. The timeout can be configured up to
      3900 seconds (65 minutes).
    mutators: Mutators
    mutators.config: Config
    mutators.handlers: Handlers
    path: Path
    rules: Rules
    rules.methods: Methods
    rules.path: Path
    service: Service
    service.name: Name
    service.port: Port
    service-name: Service Name
    status: Status
    general: General
    timeout: HTTP Request Timeout
    virtualService: Virtual Service
    alert.spec.host: Host can not be a wildcard, replace * with subdomain name
---
general:
  resource:
    kind: Application
    group: applicationconnector.kyma-project.io
    version: v1alpha1
  urlPath: applications
  scope: cluster
  name: Applications
  category: Integration
  description: description
details:
  header:
    - name: headers.description
      source: spec.description
    - name: headers.access-label
      source: spec.accessLabel
  body:
    - widget: Table
      source: spec.services
      name: headers.services-and-events
      children:
        - source: $count($item.entries[type='API'])
          name: headers.apis
        - source: $count($item.entries[type='Events'])
          name: headers.events
        - source: $item.providerDisplayName
          name: headers.provider
      collapsibleTitle: $item.displayName
      collapsible:
        - widget: Plain
          children:
            - source: $item.longDescription
        - widget: Table
          name: headers.apis
          source: $item.entries[type = 'API']
          children:
            - source: $item.name
              name: headers.name
            - source: $item.accessLabel
              name: headers.access-label
            - widget: ExternalLink
              source: $item.centralGatewayUrl
              name: headers.gateway-url
              copyable: true
        - widget: Table
          name: headers.events
          source: $item.entries[type = 'Events']
          children:
            - source: $item.name
              name: headers.name
            - source: $item.accessLabel
              name: headers.access-label
            - widget: ExternalLink
              source: $item.centralGatewayUrl
              name: headers.gateway-url
              copyable: true
form:
  - path: metadata.name
    extraPaths:
      - spec.accessLabel
      - metadata.labels['app.kubernetes.io/name']
  - path: spec.description
    placeholder: placeholders.description
  - path: spec.accessLabel
translations:
  en:
    description: >-
      {{[Application](https://kyma-project.io/docs/kyma/latest/05-technical-reference/00-custom-resources/ac-01-application)}}
      represents an external solution connected to Kyma.
    headers:
      access-label: Access Label
      apis: APIs
      description: Description
      events: Events
      gateway-url: Central Gateway URL
      name: Name
      provider: Provider
      services-and-events: Provided Services and Events
    placeholders:
      description: Provide a description for your Application
---
dataSources:
  podSelector:
    resource:
      kind: Pod
      version: v1
    filter: $matchByLabelSelector($item, $root.spec.selector.matchLabels)
details:
  header:
    - source: spec.action
      name: spec.action
    - source: spec.provider
      widget: Labels
      name: spec.provider
  resourceGraph:
    colorVariant: 3
    dataSources:
      - source: podSelector
  body:
    - widget: Table
      name: spec.rules
      source: spec.rules
      disablePadding: true
      showHeader: false
      visibility: $exists($value)
      collapsibleTitle: '"Rule #" & $string($index + 1) & (" " & $join($keys($item), " "))'
      collapsible:
        - source: $item.from
          widget: Table
          name: spec.rules.from
          disablePadding: true
          showHeader: false
          visibility: $exists($value)
          collapsibleTitle: >-
            "From #" & $string($index + 1) & (" " & $join($keys($item.source), "
            "))
          collapsible:
            - source: source
              widget: Panel
              name: spec.rules.from.source
              children:
                - source: principals
                  name: spec.rules.from.source.principals
                  widget: JoinedArray
                  visibility: $exists($value)
                - source: notPrincipals
                  name: spec.rules.from.source.notPrincipals
                  widget: Labels
                  visibility: $exists($value)
                - source: requestPrincipals
                  name: spec.rules.from.source.requestPrincipals
                  widget: Labels
                  visibility: $exists($value)
                - source: notRequestPrincipals
                  name: spec.rules.from.source.notRequestPrincipals
                  widget: Labels
                  visibility: $exists($value)
                - source: namespaces
                  name: spec.rules.from.source.namespaces
                  widget: Labels
                  visibility: $exists($value)
                - source: notNamespaces
                  name: spec.rules.from.source.notNamespaces
                  widget: Labels
                  visibility: $exists($value)
                - source: ipBlocks
                  name: spec.rules.from.source.ipBlocks
                  widget: Labels
                  visibility: $exists($value)
                - source: notIpBlocks
                  name: spec.rules.from.source.notIpBlocks
                  widget: Labels
                  visibility: $exists($value)
                - source: remoteIpBlocks
                  name: spec.rules.from.source.remoteIpBlocks
                  widget: Labels
                  visibility: $exists($value)
                - source: notRemoteIpBlocks
                  name: spec.rules.from.source.notRemoteIpBlocks
                  widget: Labels
                  visibility: $exists($value)
        - source: $item.to
          widget: Table
          name: spec.rules.to
          disablePadding: true
          showHeader: false
          visibility: $exists($value)
          collapsibleTitle: >-
            "To #" & $string($index + 1) & (" " & $join($keys($item.operation),
            " "))
          collapsible:
            - source: operation
              widget: Panel
              name: spec.rules.to.operation
              children:
                - source: Hosts
                  name: spec.rules.to.operation.hosts
                  widget: Labels
                  visibility: $exists($value)
                - source: notHosts
                  name: spec.rules.to.operation.notHosts
                  widget: Labels
                  visibility: $exists($value)
                - source: ports
                  name: spec.rules.to.operation.ports
                  widget: Labels
                  visibility: $exists($value)
                - source: notPorts
                  name: spec.rules.to.operation.notPorts
                  widget: Labels
                  visibility: $exists($value)
                - source: methods
                  name: spec.rules.to.operation.methods
                  widget: Labels
                  visibility: $exists($value)
                - source: notMethods
                  name: spec.rules.to.operation.notMethods
                  widget: Labels
                  visibility: $exists($value)
                - source: paths
                  name: spec.rules.to.operation.paths
                  widget: Labels
                  visibility: $exists($value)
                - source: notPaths
                  name: spec.rules.to.operation.notPaths
                  widget: Labels
                  visibility: $exists($value)
        - source: when
          widget: Table
          name: spec.rules.when
          visibility: $exists($value)
          children:
            - source: key
              name: spec.rules.when.key
              visibility: $exists($value)
            - source: values
              name: spec.rules.when.values
              widget: JoinedArray
              separator: break
              visibility: $exists($value)
            - source: notValues
              name: spec.rules.when.notValues
              widget: JoinedArray
              separator: break
              visibility: $exists($value)
    - widget: Panel
      name: spec.selector.matchLabels
      disablePadding: true
      children:
        - source: $podSelector()
          widget: ResourceList
          disableCreate: true
          visibility: >-
            $exists($root.spec.selector.matchLabels) and
            $boolean($root.spec.selector.matchLabels)
        - source: spec.selector
          widget: Panel
          name: selector.matchesAllPods
          visibility: $not($exists($value)) or $not($boolean($value))
      header:
        - source: spec.selector.matchLabels
          widget: Labels
          name: spec.selector.matchLabels
          visibility: $exists($value) and $boolean($value)
form:
  - path: spec.selector.matchLabels
    widget: KeyValuePair
    defaultExpanded: true
  - path: spec.action
    placeholder: placeholders.dropdown
    simple: true
    description: description.action
  - path: spec.provider
    widget: FormGroup
    children:
      - path: name
  - path: spec.rules
    widget: GenericList
    simple: true
    children:
      - path: '[].from'
        simple: true
        widget: GenericList
        children:
          - path: '[].source'
            simple: true
            widget: FormGroup
            defaultExpanded: true
            children:
              - path: principals
                simple: true
                widget: SimpleList
                description: description.rules.from.principals
                children:
                  - path: '[]'
                    simple: true
              - path: notPrincipals
                simple: true
                widget: SimpleList
                description: description.rules.from.notPrincipals
                children:
                  - path: '[]'
                    simple: true
              - path: requestPrincipals
                simple: true
                widget: SimpleList
                description: description.rules.from.requestPrincipals
                children:
                  - path: '[]'
                    simple: true
              - path: notRequestPrincipals
                simple: true
                widget: SimpleList
                description: description.rules.from.notRequestPrincipals
                children:
                  - path: '[]'
                    simple: true
              - path: namespaces
                simple: true
                widget: SimpleList
                description: description.rules.from.namespaces
                children:
                  - path: '[]'
                    simple: true
              - path: notNamespaces
                simple: true
                widget: SimpleList
                description: description.rules.from.notNamespaces
                children:
                  - path: '[]'
                    simple: true
              - path: ipBlocks
                simple: true
                widget: SimpleList
                description: description.rules.from.ipBlocks
                children:
                  - path: '[]'
                    simple: true
              - path: notIpBlocks
                simple: true
                widget: SimpleList
                description: description.rules.from.notIpBlocks
                children:
                  - path: '[]'
                    simple: true
              - path: remoteIpBlocks
                simple: true
                widget: SimpleList
                description: description.rules.from.remoteIpBlocks
                children:
                  - path: '[]'
                    simple: true
              - path: notRemoteIpBlocks
                simple: true
                widget: SimpleList
                description: description.rules.from.notRemoteIpBlocks
                children:
                  - path: '[]'
                    simple: true
      - path: '[].to'
        simple: true
        widget: GenericList
        children:
          - path: '[].operation'
            simple: true
            widget: FormGroup
            defaultExpanded: true
            children:
              - path: hosts
                simple: true
                widget: SimpleList
                description: description.rules.to.hosts
                children:
                  - path: '[]'
                    simple: true
              - path: notHosts
                simple: true
                widget: SimpleList
                description: description.rules.to.notHosts
                children:
                  - path: '[]'
                    simple: true
              - path: ports
                simple: true
                widget: SimpleList
                description: description.rules.to.ports
                children:
                  - path: '[]'
                    simple: true
              - path: notPorts
                simple: true
                widget: SimpleList
                description: description.rules.to.notPorts
                children:
                  - path: '[]'
                    simple: true
              - path: methods
                simple: true
                widget: SimpleList
                description: description.rules.to.methods
                children:
                  - path: '[]'
                    simple: true
              - path: notMethods
                simple: true
                widget: SimpleList
                description: description.rules.to.notMethods
                children:
                  - path: '[]'
                    simple: true
              - path: paths
                simple: true
                widget: SimpleList
                description: description.rules.to.paths
                children:
                  - path: '[]'
                    simple: true
              - path: notPaths
                simple: true
                widget: SimpleList
                description: description.rules.to.notPaths
                children:
                  - path: '[]'
                    simple: true
      - path: '[].when'
        simple: true
        widget: GenericList
        children:
          - path: '[].key'
            simple: true
            widget: Text
            description: description.rules.when.key
          - path: '[].values'
            simple: true
            widget: SimpleList
            description: description.rules.when.values
            children:
              - path: '[]'
                simple: true
          - path: '[].notValues'
            simple: true
            widget: SimpleList
            description: description.rules.when.notValues
            children:
              - path: '[]'
                simple: true
general:
  resource:
    kind: AuthorizationPolicy
    group: security.istio.io
    version: v1beta1
  name: Authorization Policies
  category: Istio
  urlPath: authorizationpolicies
  scope: namespace
  description: >-
    {{[Istio Authorization
    Policy](https://istio.io/latest/docs/reference/config/security/authorization-policy/)}}
    allows for workload access management in the mesh.
list:
  - name: action
    source: spec.action
translations:
  en:
    description.action: >-
      Optional. The action to take if the request is matched with the rules.
      Default is ALLOW if not specified.
    description.rules.from.principals: >-
      Optional. A list of peer identities derived from the peer certificate. The
      peer identity is in the format of '<TRUSTDOMAIN> /ns/ <NAMESPACE> /sa/
      <SERVICEACCOUNT>', for example, 'cluster.local/ns/default/sa/productpage'.
      If not set, any principal is allowed.
    description.rules.from.notPrincipals: Optional. A list of negative match of peer identities.
    description.rules.from.requestPrincipals: >-
      Optional. A list of request identities derived from the JWT. The request
      identity is in the format of '<ISS>/<SUB>', for example,
      'example.com/sub-1'. If not set, any request principal is allowed.
    description.rules.from.notRequestPrincipals: Optional. A list of negative match of request identities.
    description.rules.from.namespaces: >-
      Optional. A list of namespaces derived from the peer certificate. If not
      set, any namespace is allowed.
    description.rules.from.notNamespaces: Optional. A list of negative match of namespaces.
    description.rules.from.ipBlocks: >-
      Optional. A list of IP blocks, populated from the source address of the IP
      packet. Single IP (e.g. '1.2.3.4') and CIDR (e.g. '1.2.3.0/24') are
      supported. If not set, any IP is allowed.
    description.rules.from.notIpBlocks: Optional. A list of negative match of IP blocks.
    description.rules.from.remoteIpBlocks: >-
      Optional. A list of IP blocks, populated from X-Forwarded-For header or
      proxy protocol. To make use of this field, you must configure the
      numTrustedProxies field of the gatewayTopology under the meshConfig when
      you install Istio or using an annotation on the ingress gateway. If not
      set, any IP is allowed.
    description.rules.from.notRemoteIpBlocks: Optional. A list of negative match of remote IP blocks.
    description.rules.to.hosts: >-
      Optional. A list of hosts as specified in the HTTP request. The match is
      case-insensitive. If not set, any host is allowed. Must be used only with
      HTTP.
    description.rules.to.notHosts: >-
      Optional. A list of negative match of hosts as specified in the HTTP
      request. The match is case-insensitive.
    description.rules.to.ports: >-
      Optional. A list of ports as specified in the connection. If not set, any
      port is allowed.
    description.rules.to.notPorts: >-
      Optional. A list of negative match of ports as specified in the
      connection.
    description.rules.to.methods: >-
      Optional. A list of methods as specified in the HTTP request. If not set,
      any method is allowed. Must be used only with HTTP.
    description.rules.to.notMethods: >-
      Optional. A list of negative match of methods as specified in the HTTP
      request.
    description.rules.to.paths: >-
      Optional. A list of paths as specified in the HTTP request. If not set,
      any path is allowed. Must be used only with HTTP.
    description.rules.to.notPaths: Optional. A list of negative match of paths.
    description.rules.when.key: The name of an Istio attribute.
    description.rules.when.values: >-
      Optional. A list of allowed values for the attribute. At least one of
      values or notValues must be set.
    description.rules.when.notValues: >-
      Optional. A list of negative match of values for the attribute. At least
      one of values or notValues must be set.
    placeholders.dropdown: Type or choose an option.
    spec.action: Action
    spec.provider: Provider
    spec.rules: Rules
    spec.rules.from: From
    spec.rules.from.source: Source
    spec.rules.from.source.principals: Principals
    spec.rules.from.source.notPrincipals: NotPrincipals
    spec.rules.from.source.requestPrincipals: RequestPrincipals
    spec.rules.from.source.notRequestPrincipals: NotRequestPrincipals
    spec.rules.from.source.namespaces: Namespaces
    spec.rules.from.source.notNamespaces: NotNamespaces
    spec.rules.from.source.ipBlocks: IpBlocks
    spec.rules.from.source.notIpBlocks: NotIpBlocks
    spec.rules.from.source.remoteIpBlocks: RemoteIpBlocks
    spec.rules.from.source.notRemoteIpBlocks: NotRemoteIpBlocks
    spec.rules.to: To
    spec.rules.to.operation: Operation
    spec.rules.to.operation.hosts: Hosts
    spec.rules.to.operation.notHosts: NotHosts
    spec.rules.to.operation.ports: Ports
    spec.rules.to.operation.notPorts: NotPorts
    spec.rules.to.operation.methods: Methods
    spec.rules.to.operation.notMethods: NotMethods
    spec.rules.to.operation.paths: Paths
    spec.rules.to.operation.notPaths: NotPaths
    spec.rules.when: When
    spec.rules.when.key: Key
    spec.rules.when.values: Values
    spec.rules.when.notValues: NotValues
    spec.selector.matchLabels: Selector
    selector.matchesAllPods: Matches all Pods in the Namespace
---
general:
  resource:
    kind: Subscription
    group: eventing.kyma-project.io
    version: v1alpha2
  name: Subscriptions
  category: Configuration
  scope: namespace
  description: >-
    {{"{{[Subscription](https://kyma-project.io/docs/kyma/latest/05-technical-reference/00-custom-resources/evnt-01-subscription#documentation-content)}}"}}
    is used to subscribe to events.
  urlPath: subscriptions
details:
  header:
    - name: status.conditions.status
      source: 'status.ready = false ? "error" : "ready"'
      widget: Badge
      description: status.conditions.message
    - name: spec.typeMatching
      source: spec.typeMatching
    - name: spec.source
      source: spec.source
    - name: spec.sink
      source: spec.sink
      widget: ResourceLink
      resource:
        name: $substringBefore($substringAfter(spec.sink, "http://"), ".")
        namespace: $root.metadata.namespace
        kind: '''Service'''
  body:
    - source: status.conditions
      widget: Table
      name: status.conditions
      children:
        - source: $item.type
          name: status.conditions.type
        - source: $item.status
          widget: Badge
          name: status.conditions.status
        - source: $item.reason
          name: status.conditions.reason
        - source: $item.message
          name: status.conditions.message
        - source: $readableTimestamp($item.lastTransitionTime)
          name: status.conditions.lastTransitionTime
    - name: spec.types
      source: spec.types
      widget: Table
      children:
        - name: Type
          search: true
          source: $item
          sort: false
    - widget: EventList
      filter: $matchEvents($$, $root.kind, $root.metadata.name)
      name: events
      defaultType: NORMAL
      hideInvolvedObjects: true
form:
  - path: spec.config
    widget: KeyValuePair
    defaultExpanded: false
  - path: spec.types
    simple: true
    widget: SimpleList
    defaultExpanded: true
    children:
      - path: '[]'
        simple: true
  - simple: true
    type: string
    var: service
    name: Service
    widget: Resource
    resource:
      kind: Service
      version: v1
      scope: namespace
    trigger:
      - sink
  - path: spec.sink
    name: spec.sink
    simple: true
    inputInfo: inputInfo.sink
    placeholder: placeholder.sink
    subscribe:
      sink: >-
        "http://" & $service & "." & $root.metadata.namespace &
        ".svc.cluster.local"
  - path: spec.typeMatching
    simple: true
    enum:
      - standard
      - exact
    required: true
  - path: spec.source
    name: spec.source
    simple: true
    required: true
    visibility: spec.typeMatching = 'standard'
    widget: Resource
    resource:
      kind: Application
      group: applicationconnector.kyma-project.io
      version: v1alpha1
list:
  - name: status.conditions.status
    source: 'status.ready = false ? "error" : "ready"'
    widget: Badge
    description: status.conditions.message
presets:
  - name: Default Type Matching
    default: true
    value:
      spec:
        typeMatching: standard
translations:
  en:
    inputInfo.sink: Sink structure, 'http://{SERVICE}.{NAMESPACE}.svc.cluster.local'
    inputInfo.eventType: Event Type structure, 'sap.kyma.custom.{APP}.{EVENT.NAME}.{VERSION}'
    events: Events
    placeholder.eventType: >-
      Enter the event type, for example,
      sap.kyma.custom.test-app.order.cancelled.v1
    placeholder.sink: Enter the sink, for example, http://service.default.svc.cluster.local
    spec.filters: Filters
    spec.filter.eventType: Event Type
    spec.filter.eventSource: Event Source
    spec.filter.event.property: Property
    spec.filter.event.type: Type
    spec.filter.event.value: Value
    spec.types: Types
    spec.source: Source
    spec.typeMatching: Type Matching
    spec.sink: Sink
    spec.service: Service
    spec.sink.controlledBy: Controlled By
    status.cleanEventTypes: Event Types
    status.conditions: Conditions
    status.conditions.lastTransitionTime: Last Transition
    status.conditions.reason: Reason
    status.conditions.status: Status
    status.conditions.type: Type
    status.conditions.message: Message
    status.type: Type
---
details:
  header:
    - name: Replicas
      widget: Badge
      source: >-
        $string($count($filter($replicas().items, function($r){ $r.status.phase
        = 'Running'}))) & '/' & $string($count($replicas().items))
      highlights:
        negative: >-
          $count($replicas().items) != $count($filter($replicas().items,
          function($r){ $r.status.phase = 'Running'}))
        warning: >-
          $count($replicas().items) = 0 and $count($filter($replicas().items,
          function($r){ $r.status.phase = 'Running'}) = 0)
        positive: >-
          $count($replicas().items) = $count($filter($replicas().items,
          function($r){ $r.status.phase = 'Running'}))
    - name: header.status
      widget: Badge
      highlights:
        positive:
          - RUNNING
        negative:
          - FAILED
          - ERROR
        informative:
          - INITIALIZING
        critical:
          - DEPLOYING
          - BUILDING
          - PENDING
      source: >-
        ($.status = undefined or $.status.conditions = undefined or
        $count($.status.conditions) = 0) ? 'INITIALIZING' :
        $count($filter($.status.conditions, function($v) { $v.status = 'False'
        })) != 0 ? $count($filter($.status.conditions, function($v) { $v.type =
        'Running' and $v.status = 'True' })) != 0 ? 'ERROR' : 'FAILED' :
        $count($filter($.status.conditions, function($v) { $v.type =
        'ConfigurationReady' and $v.status = 'True' })) != 0 ?
        $count($filter($.status.conditions, function($v) { $v.type =
        'BuildReady' and $v.status = 'True' })) != 0 ?
        $count($filter($.status.conditions, function($v) { $v.type = 'Running'
        and $v.status = 'True' })) != 0 ? 'RUNNING' :
        $count($filter($.status.conditions, function($v) { $v.type = 'Running'
        and $v.status = 'Unknown' and $v.reason = 'MinReplicasNotAvailable' }))
        != 0 ? 'PENDING' : 'DEPLOYING' : 'BUILDING' : 'INITIALIZING' 
      description: >-
        ($.status = undefined or $.status.conditions = undefined or
        $count($.status.conditions) = 0) ? null :
        $count($filter($.status.conditions, function($v) { $v.status = 'False'
        })) != 0 ? $count($filter($.status.conditions, function($v) { $v.type =
        'Running' and $v.status = 'True' })) != 0 ? 'New revision error: ' &
        $filter($.status.conditions, function($v) { $v.status = 'False'
        })[0].message : 'Error: ' & $filter($.status.conditions, function($v) {
        $v.status = 'False' })[0].message : null 
    - name: header.sourceType
      source: 'spec.source.gitRepository ? "Git Repository" : "Inline Editor"'
    - name: header.runtime
      source: >-
        spec.runtime = 'nodejs16' ? 'Node.js 16 - deprecated' : (spec.runtime =
        'python39' ? 'Python 3.9' : (spec.runtime = 'nodejs18' ? 'Node.js 18' :
        spec.runtime))
  body:
    - widget: Tabs
      children:
        - name: tabs.code
          children:
            - source: spec.source.inline.source
              widget: CodeViewer
              name: code.source
              language: '$contains($root.spec.runtime, "python") ? "python": "javascript"'
              visibility: $exists($value)
            - source: spec.source.inline.dependencies
              widget: CodeViewer
              name: code.dependencies
              language: '"json"'
              visibility: $exists($value)
            - source: spec.source.gitRepository
              widget: Panel
              name: code.gitRepositoryConfig
              visibility: $exists($value)
              children:
                - name: code.gitRepository.url
                  source: url
                - name: code.gitRepository.reference
                  source: reference
                - name: code.gitRepository.baseDir
                  source: baseDir
                - name: code.gitRepository.auth
                  visibility: $exists($value)
                  widget: Panel
                  source: auth
                  children:
                    - name: code.gitRepository.auth.secretName
                      widget: ResourceLink
                      source: secretName
                      resource:
                        kind: '''Secret'''
                        name: secretName
                        namespace: $root.metadata.namespace
                    - name: code.gitRepository.auth.type
                      source: type
            - source: spec.env
              widget: Table
              name: code.env
              children:
                - source: $item.name
                  name: code.env.name
                - source: $item.value
                  name: code.env.value
                - name: code.env.valueFrom
                  widget: ResourceLink
                  source: >-
                    $exists($item.valueFrom.configMapKeyRef)?
                    $item.valueFrom.configMapKeyRef.name :
                    $item.valueFrom.secretKeyRef.name
                  resource:
                    name: >-
                      $exists($item.valueFrom.configMapKeyRef) ?
                      $item.valueFrom.configMapKeyRef.name :
                      $item.valueFrom.secretKeyRef.name
                    namespace: $root.metadata.namespace
                    kind: >-
                      $exists($item.valueFrom.configMapKeyRef) ? 'ConfigMap' :
                      'Secret'
                - name: code.env.source
                  widget: Badge
                  source: >-
                    $exists($item.value) ? 'CUSTOM' :
                    $exists($item.valueFrom.configMapKeyRef) ? 'CONFIG MAP' :
                    'SECRET'
                - name: code.env.key
                  source: >-
                    $exists($item.valueFrom.configMapKeyRef) ?
                    $item.valueFrom.configMapKeyRef.key :
                    $exists($item.valueFrom.secretKeyRef) ?
                    $item.valueFrom.secretKeyRef.key : 'N/A'
            - widget: ResourceList
              source: $replicas()
              name: code.replicas
              disableCreate: true
            - widget: EventList
              filter: $matchEvents($item, $root.kind, $root.metadata.name)
              name: events
              defaultType: information
              hideInvolvedObjects: true
        - name: tabs.configuration
          children:
            - widget: ResourceList
              source: $apiRules()
              name: configuration.apiRules
              disableCreate: true
            - widget: ResourceList
              source: $subscriptions()
              name: configuration.subscriptions
              disableCreate: true
        - name: tabs.resources
          children:
            - widget: Panel
              description: resources.description
              name: resources.scalingOptions
              visibility: >-
                $exists(spec.scaleConfig.minReplicas) or
                $exists(spec.scaleConfig.maxReplicas)
              children:
                - name: resources.minReplicas
                  source: spec.scaleConfig.minReplicas
                - name: resources.maxReplicas
                  source: spec.scaleConfig.maxReplicas
            - widget: Columns
              inline: false
              children:
                - name: resources.runtimeProfile
                  widget: Panel
                  children:
                    - name: resources.requests.memory
                      source: >-
                        spec.resourceConfiguration.function.resources.requests.memory
                    - name: resources.requests.cpu
                      source: >-
                        spec.resourceConfiguration.function.resources.requests.cpu
                    - name: resources.limits.memory
                      source: >-
                        spec.resourceConfiguration.function.resources.limits.memory
                    - name: resources.limits.cpu
                      source: spec.resourceConfiguration.function.resources.limits.cpu
                - name: resources.buildProfile
                  widget: Panel
                  children:
                    - name: resources.requests.memory
                      source: >-
                        spec.resourceConfiguration.build.resources.requests.memory
                    - name: resources.requests.cpu
                      source: spec.resourceConfiguration.build.resources.requests.cpu
                    - name: resources.limits.memory
                      source: spec.resourceConfiguration.build.resources.limits.memory
                    - name: resources.limits.cpu
                      source: spec.resourceConfiguration.build.resources.limits.cpu
form:
  - var: sourceType
    widget: Text
    enum:
      - Inline
      - Git Repository
    dynamicValue: '$exists(spec.source.gitRepository) ? "Git Repository" : "Inline"'
    name: header.sourceType
    trigger:
      - sourceType
  - simple: true
    type: string
    name: Language
    var: language
    required: true
    enum:
      - JavaScript
      - Python
    trigger:
      - language
    dynamicValue: |
      spec.runtime in ['nodejs16', 'nodejs18'] ? 'JavaScript' :
      spec.runtime in ['python39'] ? 'Python' :
      ''
  - simple: true
    path: spec.runtime
    placeholder: placeholders.spec.runtime
    enum: |
      $language = 'JavaScript' ? ['nodejs16', 'nodejs18'] :
      $language = 'Python' ? ['python39'] :
      []
    subscribe:
      language: >
        $language = 'JavaScript' ? ($exists($root.spec.runtime) and
        $root.spec.runtime != 'python39') ? $root.spec.runtime : 'nodejs16' :

        $language = 'Python' ? 'python39' :

        ''
  - path: spec.resourceConfiguration.function.profile
    simple: true
    enum:
      - XS
      - S
      - M
      - L
      - XL
  - path: spec.source.inline
    visibility: $sourceType = 'Inline'
    simple: true
    children:
      - path: source
        widget: CodeEditor
        simple: true
        language: '$contains($root.spec.runtime, "node") ? "javascript" : "python"'
        defaultExpanded: true
        subscribe:
          sourceType: >-
            $sourceType = 'Inline' ? $language = 'JavaScript' ?
            $exists($root.metadata.creationTimestamp) ?
            $root.spec.source.inline.source : "module.exports = {
              main: async function (event, context) {
                const message = `Hello World`
                  + ` from the Kyma Function ${context['function-name']}`
                  + ` running on ${context.runtime}!`;
                console.log(message);
                return message;
              }
            }" :

            $language = 'Python' ? $exists($root.metadata.creationTimestamp) ?
            $root.spec.source.inline.source : "def main(event, context):
                message = 'Hello World from the Kyma Function '+context['function-name']+' running on '+context['runtime']+ '!';
                print(message)
                return message" :
            '' : ''
          language: >-
            $language = 'JavaScript' ? $exists($root.metadata.creationTimestamp)
            ? $root.spec.source.inline.source : "module.exports = {
              main: async function (event, context) {
                const message = `Hello World`
                  + ` from the Kyma Function ${context['function-name']}`
                  + ` running on ${context.runtime}!`;
                console.log(message);
                return message;
              }
            }" :

            $language = 'Python' ? $exists($root.metadata.creationTimestamp) ?
            $root.spec.source.inline.source : "def main(event, context):
                message = 'Hello World from the Kyma Function '+context['function-name']+' running on '+context['runtime']+ '!';
                print(message)
                return message" :
            ''
      - path: dependencies
        widget: CodeEditor
        language: '$contains($root.spec.runtime, "node") ? "javascript" : "plaintext"'
  - path: spec.source.gitRepository
    widget: FormGroup
    visibility: $sourceType = 'Git Repository'
    defaultExpanded: true
    children:
      - path: url
      - path: baseDir
        required: true
      - path: reference
        required: true
      - var: useAuthorization
        type: boolean
        name: code.gitRepository.auth
        dynamicValue: $exists($.spec.source.gitRepository.auth)
      - widget: FormGroup
        path: auth
        visibility: $useAuthorization
        children:
          - path: secretName
            widget: Resource
            resource:
              kind: Secret
              version: v1
              scope: namespace
          - path: type
  - path: spec.scaleConfig
    widget: FormGroup
    columns: '2'
    children:
      - advanced: true
        path: minReplicas
        required: false
        min: '1'
      - advanced: true
        path: maxReplicas
        required: false
        min: '1'
  - path: spec.resourceConfiguration.function
    widget: FormGroup
    children:
      - path: resources.limits
        widget: KeyValuePair
      - visibility: $boolean($root.spec.resourceConfiguration.function.profile)
        severity: warning
        alert: '''alert.resources.limits'''
        widget: Alert
      - path: resources.requests
        widget: KeyValuePair
      - visibility: $boolean($root.spec.resourceConfiguration.function.profile)
        severity: warning
        alert: '''alert.resources.requests'''
        widget: Alert
  - path: spec.resourceConfiguration.build
    widget: FormGroup
    children:
      - path: resources.limits
        widget: KeyValuePair
      - path: resources.requests
        widget: KeyValuePair
  - path: spec.env
    widget: GenericList
    children:
      - path: '[]'
        children:
          - var: envType
            widget: Text
            name: spec.env.source
            enum:
              - Custom
              - From Config Map
              - From Secret
            dynamicValue: >-
              $exists($item.valueFrom.secretKeyRef) ? 'From Secret' :
              ($exists($item.valueFrom.configMapKeyRef) ? 'From Config Map' :
              'Custom')
          - path: name
          - path: value
            visibility: $envType = 'Custom'
          - path: valueFrom.secretKeyRef.name
            widget: Resource
            resource:
              kind: Secret
              version: v1
              scope: namespace
            provideVar: secret
            visibility: $envType = 'From Secret'
          - path: valueFrom.secretKeyRef.key
            widget: Text
            enum: $keys($secret.data)
            visibility: $envType = 'From Secret'
          - path: valueFrom.configMapKeyRef.name
            widget: Resource
            resource:
              kind: ConfigMap
              version: v1
              scope: namespace
            provideVar: configMap
            visibility: $envType = 'From Config Map'
          - path: valueFrom.configMapKeyRef.key
            widget: Text
            enum: $keys($configMap.data)
            visibility: $envType = 'From Config Map'
  - path: spec
    widget: FormGroup
    children:
      - path: labels
        widget: KeyValuePair
        defaultExpanded: false
      - path: annotations
        widget: KeyValuePair
        defaultExpanded: false
general:
  resource:
    kind: Function
    group: serverless.kyma-project.io
    version: v1alpha2
  name: Functions
  category: Workloads
  urlPath: functions
  scope: namespace
  description: >-
    {{"{{[Function](https://kyma-project.io/docs/kyma/latest/05-technical-reference/00-custom-resources/svls-01-function/#documentation-content/)}}"}}
    is a simple code snippet that you can run without provisioning or managing
    servers.
list:
  - name: header.runtime
    source: >-
      spec.runtime = 'nodejs16' ? 'Node.js 16 - deprecated' : (spec.runtime =
      'python39' ? 'Python 3.9' : (spec.runtime = 'nodejs18' ? 'Node.js 18' :
      spec.runtime))
  - name: header.sourceType
    source: 'spec.source.gitRepository ? "Git Repository" : "Inline Editor"'
  - name: header.status
    widget: Badge
    highlights:
      positive:
        - RUNNING
      negative:
        - FAILED
        - ERROR
      informative:
        - INITIALIZING
      critical:
        - DEPLOYING
        - BUILDING
        - PENDING
    source: >-
      ($.status = undefined or $.status.conditions = undefined or
      $count($.status.conditions) = 0) ? 'INITIALIZING' :
      $count($filter($.status.conditions, function($v) { $v.status = 'False' }))
      != 0 ? $count($filter($.status.conditions, function($v) { $v.type =
      'Running' and $v.status = 'True' })) != 0 ? 'ERROR' : 'FAILED' :
      $count($filter($.status.conditions, function($v) { $v.type =
      'ConfigurationReady' and $v.status = 'True' })) != 0 ?
      $count($filter($.status.conditions, function($v) { $v.type = 'BuildReady'
      and $v.status = 'True' })) != 0 ? $count($filter($.status.conditions,
      function($v) { $v.type = 'Running' and $v.status = 'True' })) != 0 ?
      'RUNNING' : $count($filter($.status.conditions, function($v) { $v.type =
      'Running' and $v.status = 'Unknown' and $v.reason =
      'MinReplicasNotAvailable' })) != 0 ? 'PENDING' : 'DEPLOYING' : 'BUILDING'
      : 'INITIALIZING' 
    description: >-
      ($.status = undefined or $.status.conditions = undefined or
      $count($.status.conditions) = 0) ? null :
      $count($filter($.status.conditions, function($v) { $v.status = 'False' }))
      != 0 ? $count($filter($.status.conditions, function($v) { $v.type =
      'Running' and $v.status = 'True' })) != 0 ? 'New revision error: ' &
      $filter($.status.conditions, function($v) { $v.status = 'False'
      })[0].message : 'Error: ' & $filter($.status.conditions, function($v) {
      $v.status = 'False' })[0].message : null
dataSources:
  replicas:
    resource:
      kind: Pod
      version: v1
    filter: >-
      ($item.metadata.labels.'serverless.kyma-project.io/function-name' =
      $root.metadata.name) and
      ($item.metadata.labels.'serverless.kyma-project.io/resource' =
      'deployment')
  apiRules:
    resource:
      kind: APIRule
      version: v1beta1
      group: gateway.kyma-project.io
    filter: $contains($item.spec.service.name, $root.metadata.name)
  subscriptions:
    resource:
      kind: Subscription
      version: v1alpha2
      group: eventing.kyma-project.io
    filter: $contains($item.spec.sink, $root.metadata.name)
translations:
  en:
    tabs.code: Code
    tabs.configuration: Configuration
    tabs.resources: Resources
    code.gitRepositoryConfig: Repository Configuration
    code.replicas: Replicas of the Function
    code.source: Source
    code.dependencies: Dependencies
    code.gitRepository.url: Url
    code.gitRepository.reference: Reference
    code.gitRepository.baseDir: Base Directory
    code.gitRepository.auth: Auth
    code.gitRepository.auth.secretName: Secret name
    code.gitRepository.auth.type: Type
    code.env: Environment Variables
    code.env.name: Name
    code.env.value: Value
    code.env.valueFrom: Value From
    code.env.source: Source
    code.env.key: Key
    events: Events
    configuration.apiRules: API Rules
    configuration.subscriptions: Subscriptions
    header.runtime: Runtime
    header.status: Status
    header.sourceType: Source Type
    resources.scalingOptions: Scaling Options
    resources.minReplicas: Minimum Replicas
    resources.maxReplicas: Maximum Replicas
    resources.description: Minimum and maximum number of running Replicas.
    resources.runtimeProfile: Runtime Profile
    resources.buildProfile: Build Job Profile
    resources.requests.memory: Memory Requests
    resources.requests.cpu: CPU Requests
    resources.limits.memory: Memory Limits
    resources.limits.cpu: CPU Limits
    spec.scaleConfig: Scale Config
    spec.scaleConfig.maxReplicas: Max Replicas
    spec.scaleConfig.minReplicas: Min Replicas
    spec.source.inline.dependencies: Dependencies
    spec.source.inline.source: Source
    spec.env: Environment Variables
    Requests: Requests
    Limits: Limits
    spec.runtime: Runtime
    Status: Status
    Runtime: Runtime
    Source Type: Source Type
    spec.runtime.nodejs16: Node.js 16 - deprecated
    spec.runtime.nodejs18: Node.js 18
    spec.runtime.python39: Python 3.9
    spec.resourceConfiguration.build: Build
    spec.resourceConfiguration.function: Function
    spec.resourceConfiguration.function.profile: Function profile
    placeholders.spec.runtime: Choose Function runtime
    spec.env.name: Variable Name
    spec.env.source: Source
    envType: Variable Type
    Node.js Function: Node.js Function
    Python Function: Python Function
    alert.resources.requests: >-
      If you want to provide your own requests configuration, leave the Function
      profile field empty.
    alert.resources.limits: >-
      If you want to provide your own limits configuration, leave the Function
      profile field empty.
    spec.labels: Runtime Labels
    spec.annotations: Runtime Annotations
presets:
  - name: Default
    default: true
    value:
      spec:
        resourceConfiguration:
          function:
            profile: XS
  - name: Node.js Function
    value:
      spec:
        runtime: nodejs18
        source:
          inline:
            source: |-
              module.exports = {
                main: async function (event, context) {
                  const message = `Hello World`
                    + ` from the Kyma Function ${context["function-name"]}`
                    + ` running on ${context.runtime}!`;
                  console.log(message);
                  return message;
                }
              }
  - name: Python Function
    value:
      spec:
        runtime: python39
        source:
          inline:
            source: |-
              def main(event, context):
                  message = "Hello World from the Kyma Function "+context['function-name']+" running on "+context['runtime']+ "!";
                  print(message)
                  return message
---
details:
  header:
    - name: status
      source: 'status.state ? status.state : "UNKNOWN"'
      highlights:
        unknown:
          - UNKNOWN
      widget: Badge
      description: status.message
    - name: status.expirationDate
      source: $readableTimestamp(status.expirationDate)
    - name: commonName
      source: spec.commonName
  body:
    - name: references
      widget: Panel
      children:
        - name: issuer
          source: status.issuerRef.name
        - name: secret
          source: spec.secretRef.name
          widget: ResourceLink
          resource:
            namespace: $root.spec.secretRef.namespace
            kind: '''Secret'''
            name: $root.spec.secretRef.name
        - name: spec.csr
          source: spec.csr
        - name: metadata.annotations
          source: metadata.annotations
          widget: Labels
        - name: spec.renew
          source: spec.renew
        - name: spec.dnsNames
          source: spec.dnsNames
          widget: Labels
form:
  - var: useCSR
    dynamicValue: $exists(spec.csr)
    simple: true
    type: boolean
    name: spec.useCSR
  - simple: true
    path: spec.commonName
    required: true
    placeholder: certificateCN
    visibility: $useCSR = false
  - simple: true
    path: spec.csr
    required: true
    placeholder: spec.certSignReq
    visibility: $useCSR
    decodable: true
    decodedPlaceholder: spec.certSignReqDecoded
  - path: spec.dnsNames
    widget: SimpleList
    children:
      - path: '[]'
    placeholder: spec.additionalDomains
  - name: issuer
    path: spec.issuerRef
    required: false
    widget: ResourceRef
    resource:
      kind: Issuer
      group: cert.gardener.cloud
      version: v1alpha1
  - path: spec.renew
  - var: useExistingSecret
    name: spec.useExisting
    dynamicValue: $exists(spec.secretRef)
    type: boolean
  - path: spec.secretName
    visibility: $useExistingSecret = false
  - path: spec.secretRef.name
    widget: Resource
    resource:
      kind: Secret
      version: v1
      scope: namespace
    filter: $item.type ='kubernetes.io/tls'
    defaultExpanded: true
    required: true
    visibility: $useExistingSecret
general:
  resource:
    kind: Certificate
    group: cert.gardener.cloud
    version: v1alpha1
  name: Certificates
  category: Configuration
  urlPath: certificates
  scope: namespace
  description: >-
    {{[Certificate](https://cert-manager.io/docs/concepts/certificate/)}}
    provides a definition of a certificate that is then processed by the
    indicated issuer.
list:
  - name: commonName
    source: status.commonName
  - name: issuer
    source: status.issuerRef.name
  - name: status.expirationDate
    source: $readableTimestamp(status.expirationDate)
  - name: status
    source: 'status.state ? status.state : "UNKNOWN"'
    highlights:
      unknown:
        - UNKNOWN
    widget: Badge
    description: status.message
translations:
  en:
    metadata.annotations: Annotations
    metadata.labels: Labels
    metadata.creationTimestamp: Created at
    status: Status
    status.expirationDate: Expiration Time
    issuer: Issuer
    commonName: Common Name
    spec.secretRef: Secret to use
    spec.useExisting: Use the existing Secret
    spec.additionalDomains: Additional domain names, one per line
    spec.dnsNames: DNS Names
    spec.csr: CSR
    spec.useCSR: Use a CSR
    spec.certSignReq: Plain text Certificate Signing Request
    spec.certSignReqDecoded: Base64-encoded Certificate Signing Request
    spec.renew: Renew
    certificateCN: Certificate CN (max 64 characters)
    references: References
    secret: Secret
---
general:
  resource:
    kind: DestinationRule
    group: networking.istio.io
    version: v1beta1
  name: Destination Rules
  category: Istio
  urlPath: destinationrules
  scope: namespace
  description: resource.description
details:
  header: []
  body:
    - name: References
      widget: Panel
      children:
        - source: spec.host
          name: Host
        - source: spec.exportTo
          widget: Labels
          name: Export To
          visibility: $exists($value)
        - source: spec.workloadSelector.matchLabels
          widget: Labels
          name: Workload Selector Match Labels
          visibility: $exists($value)
    - source: spec.trafficPolicy
      name: Traffic Policy
      disablePadding: true
      visibility: $exists($value)
      widget: Panel
      children:
        - source: loadBalancer
          name: Load Balancer
          visibility: $exists($value)
          widget: Panel
          children:
            - source: simple
              name: Simple
              visibility: $exists($value)
              widget: Badge
            - source: warmupDurationSecs
              name: Warmup Duration Secs
              visibility: $exists($value)
            - source: consistentHash
              name: Consistent Hash
              visibility: $exists($value)
              widget: Panel
              children:
                - source: httpHeaderName
                  name: HTTP Header Name
                  visibility: $exists($value)
                - source: useSourceIp
                  name: Use Source IP
                  visibility: $exists($value)
                  widget: Badge
                  highlights:
                    positive:
                      - 'true'
                    negative:
                      - 'false'
                - source: httpQueryParameterName
                  name: HTTP Query Parameter Name
                  visibility: $exists($value)
                - source: minimumRingSize
                  name: Minimum Ring Size
                  visibility: $exists($value)
                - source: httpCookie
                  name: HTTP Cookie
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: name
                      name: Name
                    - source: path
                      name: Path
                    - source: ttl
                      name: TTL
            - source: localityLbSetting
              name: Locality LB Settings
              visibility: $exists($value)
              widget: Panel
              children:
                - name: Enabled
                  source: enabled
                  widget: Badge
                  highlights:
                    positive:
                      - 'true'
                    negative:
                      - 'false'
                - widget: Table
                  disablePadding: true
                  name: Distribute
                  visibility: $exists($value)
                  source: distribute
                  children:
                    - source: $item.from
                      name: From
                    - source: $item.to
                      name: To
                      widget: Labels
                - widget: Table
                  disablePadding: true
                  name: Failover
                  visibility: $exists($value)
                  source: failover
                  children:
                    - source: $item.from
                      name: From
                    - source: $item.to
                      name: To
                - name: Failover Priority
                  source: failoverPriority
                  widget: JoinedArray
                  visibility: $exists($value)
        - source: connectionPool
          name: Connection Pool
          visibility: $exists($value)
          widget: Panel
          children:
            - source: tcp
              name: TCP
              visibility: $exists($value)
              widget: Panel
              children:
                - source: maxConnections
                  name: Max Connections
                  visibility: $exists($value)
                - source: connectTimeout
                  name: Connect Timeout
                  visibility: $exists($value)
                - source: tcpKeepalive
                  name: TCP Keep Alive
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: probes
                      name: Probes
                    - source: time
                      name: Time
                    - source: interval
                      name: Interval
            - source: http
              name: HTTP
              visibility: $exists($value)
              widget: Panel
              children:
                - source: http1MaxPendingRequests
                  name: HTTP1 Max Pending Requests
                  visibility: $exists($value)
                - source: http2MaxRequests
                  name: HTTP2 Max Requests
                  visibility: $exists($value)
                - source: maxRequestsPerConnection
                  name: Max Requests Per Connection
                  visibility: $exists($value)
                - source: maxRetries
                  name: Max Retries
                  visibility: $exists($value)
                - source: idleTimeout
                  name: Idle Timeout
                  visibility: $exists($value)
                - source: h2UpgradePolicy
                  name: H2 Upgrade Policy
                  visibility: $exists($value)
                  widget: Badge
                - source: useClientProtocol
                  name: Use Client Protocol
                  visibility: $exists($value)
                  widget: Badge
                  highlights:
                    positive:
                      - 'true'
                    negative:
                      - 'false'
        - source: outlierDetection
          name: outlierDetection
          visibility: $exists($value)
          widget: Panel
          children:
            - source: splitExternalLocalOriginErrors
              name: Split External Local Origin Errors
              visibility: $exists($value)
              widget: Badge
              highlights:
                positive:
                  - 'true'
                negative:
                  - 'false'
            - source: consecutiveLocalOriginFailures
              name: Consecutive Local Origin Failures
              visibility: $exists($value)
            - source: consecutiveGatewayErrors
              name: Consecutive Gateway Errors
              visibility: $exists($value)
              type: number
            - source: consecutive5xxErrors
              name: Consecutive 5xx Errors
              visibility: $exists($value)
            - source: interval
              name: Interval
              visibility: $exists($value)
            - source: baseEjectionTime
              name: Base Ejection Time
              visibility: $exists($value)
            - source: maxEjectionPercent
              name: Max Ejection Percent
              visibility: $exists($value)
            - source: minHealthPercent
              name: Min Health Percent
              visibility: $exists($value)
        - source: tls
          name: TLS
          visibility: $exists($value)
          widget: Panel
          children:
            - source: mode
              name: Mode
              visibility: $exists($value)
              widget: Badge
            - source: clientCertificate
              name: Client Certificate
              visibility: $exists($value)
            - source: privateKey
              name: Private Key
              visibility: $exists($value)
              type: number
            - source: caCertificates
              name: CA Certificates
              visibility: $exists($value)
            - source: credentialName
              name: Credential Name
              visibility: $exists($value)
            - source: subjectAltNames
              name: Subject Alt Names
              visibility: $exists($value)
              widget: Labels
            - source: sni
              name: SNI
              visibility: $exists($value)
            - source: insecureSkipVerify
              name: Insecure Skip Verify
              visibility: $exists($value)
              widget: Badge
        - source: portLevelSettings
          name: portLevelSettings
          widget: Table
          disablePadding: true
          children:
            - source: $item.port.number
              name: port
          visibility: $exists($value)
          collapsible:
            - source: $item.loadBalancer
              name: Load Balancer
              visibility: $exists($value)
              widget: Panel
              children:
                - source: simple
                  name: Simple
                  visibility: $exists($value)
                  widget: Badge
                - source: warmupDurationSecs
                  name: Warmup Duration Secs
                  visibility: $exists($value)
                - source: consistentHash
                  name: Consistent Hash
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: httpHeaderName
                      name: HTTP Header Name
                      visibility: $exists($value)
                    - source: useSourceIp
                      name: Use Source IP
                      visibility: $exists($value)
                      widget: Badge
                      highlights:
                        positive:
                          - 'true'
                        negative:
                          - 'false'
                    - source: httpQueryParameterName
                      name: HTTP Query Parameter Name
                      visibility: $exists($value)
                    - source: minimumRingSize
                      name: Minimum Ring Size
                      visibility: $exists($value)
                    - source: httpCookie
                      name: HTTP Cookie
                      visibility: $exists($value)
                      widget: Panel
                      children:
                        - source: name
                          name: Name
                        - source: path
                          name: Path
                        - source: ttl
                          name: TTL
                - source: localityLbSetting
                  name: Locality LB Settings
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - name: Enabled
                      source: enabled
                      widget: Badge
                      highlights:
                        positive:
                          - 'true'
                        negative:
                          - 'false'
                    - widget: Table
                      disablePadding: true
                      name: Distribute
                      visibility: $exists($value)
                      source: distribute
                      children:
                        - source: $item.from
                          name: From
                        - source: $item.to
                          name: To
                          widget: Labels
                    - widget: Table
                      disablePadding: true
                      name: Failover
                      visibility: $exists($value)
                      source: failover
                      children:
                        - source: $item.from
                          name: From
                        - source: $item.to
                          name: To
                    - name: Failover Priority
                      source: failoverPriority
                      widget: JoinedArray
                      visibility: $exists($value)
            - source: $item.connectionPool
              name: Connection Pool
              visibility: $exists($value)
              widget: Panel
              children:
                - source: tcp
                  name: TCP
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: maxConnections
                      name: Max Connections
                      visibility: $exists($value)
                    - source: connectTimeout
                      name: Connect Timeout
                      visibility: $exists($value)
                    - source: tcpKeepalive
                      name: TCP Keep Alive
                      visibility: $exists($value)
                      widget: Panel
                      children:
                        - source: probes
                          name: Probes
                        - source: time
                          name: Time
                        - source: interval
                          name: Interval
                - source: http
                  name: HTTP
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: http1MaxPendingRequests
                      name: HTTP1 Max Pending Requests
                      visibility: $exists($value)
                    - source: http2MaxRequests
                      name: HTTP2 Max Requests
                      visibility: $exists($value)
                    - source: maxRequestsPerConnection
                      name: Max Requests Per Connection
                      visibility: $exists($value)
                    - source: maxRetries
                      name: Max Retries
                      visibility: $exists($value)
                    - source: idleTimeout
                      name: Idle Timeout
                      visibility: $exists($value)
                    - source: h2UpgradePolicy
                      name: H2 Upgrade Policy
                      visibility: $exists($value)
                      widget: Badge
                    - source: useClientProtocol
                      name: Use Client Protocol
                      visibility: $exists($value)
                      widget: Badge
                      highlights:
                        positive:
                          - 'true'
                        negative:
                          - 'false'
            - source: $item.outlierDetection
              name: outlierDetection
              visibility: $exists($value)
              widget: Panel
              children:
                - source: splitExternalLocalOriginErrors
                  name: Split External Local Origin Errors
                  visibility: $exists($value)
                  widget: Badge
                  highlights:
                    positive:
                      - 'true'
                    negative:
                      - 'false'
                - source: consecutiveLocalOriginFailures
                  name: Consecutive Local Origin Failures
                  visibility: $exists($value)
                - source: consecutiveGatewayErrors
                  name: Consecutive Gateway Errors
                  visibility: $exists($value)
                  type: number
                - source: consecutive5xxErrors
                  name: Consecutive 5xx Errors
                  visibility: $exists($value)
                - source: interval
                  name: Interval
                  visibility: $exists($value)
                - source: baseEjectionTime
                  name: Base Ejection Time
                  visibility: $exists($value)
                - source: maxEjectionPercent
                  name: Max Ejection Percent
                  visibility: $exists($value)
                - source: minHealthPercent
                  name: Min Health Percent
                  visibility: $exists($value)
            - source: $item.tls
              name: TLS
              visibility: $exists($value)
              widget: Panel
              children:
                - source: mode
                  name: Mode
                  visibility: $exists($value)
                  widget: Badge
                - source: clientCertificate
                  name: Client Certificate
                  visibility: $exists($value)
                - source: privateKey
                  name: Private Key
                  visibility: $exists($value)
                  type: number
                - source: caCertificates
                  name: CA Certificates
                  visibility: $exists($value)
                - source: credentialName
                  name: Credential Name
                  visibility: $exists($value)
                - source: subjectAltNames
                  name: Subject Alt Names
                  visibility: $exists($value)
                  widget: Labels
                - source: sni
                  name: SNI
                  visibility: $exists($value)
                - source: insecureSkipVerify
                  name: Insecure Skip Verify
                  visibility: $exists($value)
                  widget: Badge
            - source: $item.tunnel
              name: Tunnel
              visibility: $exists($value)
              widget: Panel
              children:
                - source: protocol
                  name: Protocol
                  visibility: $exists($value)
                  widget: Badge
                - source: targetHost
                  name: Target Host
                  visibility: $exists($value)
                - source: targetPort
                  name: Target Port
                  visibility: $exists($value)
        - source: tunnel
          name: Tunnel
          visibility: $exists($value)
          widget: Panel
          children:
            - source: protocol
              name: Protocol
              visibility: $exists($value)
              widget: Badge
            - source: targetHost
              name: Target Host
              visibility: $exists($value)
            - source: targetPort
              name: Target Port
              visibility: $exists($value)
    - source: spec.subsets
      name: Subsets
      widget: Table
      disablePadding: true
      visibility: $exists($value)
      children:
        - source: $item.name
          name: Name
        - source: $item.labels
          name: Labels
          widget: Labels
      collapsible:
        - source: $item.trafficPolicy
          name: Traffic Policy
          disablePadding: true
          visibility: $exists($value)
          widget: Panel
          children:
            - source: loadBalancer
              name: Load Balancer
              visibility: $exists($value)
              widget: Panel
              children:
                - source: simple
                  name: Simple
                  visibility: $exists($value)
                  widget: Badge
                - source: warmupDurationSecs
                  name: Warmup Duration Secs
                  visibility: $exists($value)
                - source: consistentHash
                  name: Consistent Hash
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: httpHeaderName
                      name: HTTP Header Name
                      visibility: $exists($value)
                    - source: useSourceIp
                      name: Use Source IP
                      visibility: $exists($value)
                      widget: Badge
                      highlights:
                        positive:
                          - 'true'
                        negative:
                          - 'false'
                    - source: httpQueryParameterName
                      name: HTTP Query Parameter Name
                      visibility: $exists($value)
                    - source: minimumRingSize
                      name: Minimum Ring Size
                      visibility: $exists($value)
                    - source: httpCookie
                      name: HTTP Cookie
                      visibility: $exists($value)
                      widget: Panel
                      children:
                        - source: name
                          name: Name
                        - source: path
                          name: Path
                        - source: ttl
                          name: TTL
                - source: localityLbSetting
                  name: Locality LB Settings
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - name: Enabled
                      source: enabled
                      widget: Badge
                      highlights:
                        positive:
                          - 'true'
                        negative:
                          - 'false'
                    - widget: Table
                      disablePadding: true
                      name: Distribute
                      visibility: $exists($value)
                      source: distribute
                      children:
                        - source: $item.from
                          name: From
                        - source: $item.to
                          name: To
                          widget: Labels
                    - widget: Table
                      disablePadding: true
                      name: Failover
                      visibility: $exists($value)
                      source: failover
                      children:
                        - source: $item.from
                          name: From
                        - source: $item.to
                          name: To
                    - name: Failover Priority
                      source: failoverPriority
                      widget: JoinedArray
                      visibility: $exists($value)
            - source: connectionPool
              name: Connection Pool
              visibility: $exists($value)
              widget: Panel
              children:
                - source: tcp
                  name: TCP
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: maxConnections
                      name: Max Connections
                      visibility: $exists($value)
                    - source: connectTimeout
                      name: Connect Timeout
                      visibility: $exists($value)
                    - source: tcpKeepalive
                      name: TCP Keep Alive
                      visibility: $exists($value)
                      widget: Panel
                      children:
                        - source: probes
                          name: Probes
                        - source: time
                          name: Time
                        - source: interval
                          name: Interval
                - source: http
                  name: HTTP
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: http1MaxPendingRequests
                      name: HTTP1 Max Pending Requests
                      visibility: $exists($value)
                    - source: http2MaxRequests
                      name: HTTP2 Max Requests
                      visibility: $exists($value)
                    - source: maxRequestsPerConnection
                      name: Max Requests Per Connection
                      visibility: $exists($value)
                    - source: maxRetries
                      name: Max Retries
                      visibility: $exists($value)
                    - source: idleTimeout
                      name: Idle Timeout
                      visibility: $exists($value)
                    - source: h2UpgradePolicy
                      name: H2 Upgrade Policy
                      visibility: $exists($value)
                      widget: Badge
                    - source: useClientProtocol
                      name: Use Client Protocol
                      visibility: $exists($value)
                      widget: Badge
                      highlights:
                        positive:
                          - 'true'
                        negative:
                          - 'false'
            - source: outlierDetection
              name: outlierDetection
              visibility: $exists($value)
              widget: Panel
              children:
                - source: splitExternalLocalOriginErrors
                  name: Split External Local Origin Errors
                  visibility: $exists($value)
                  widget: Badge
                  highlights:
                    positive:
                      - 'true'
                    negative:
                      - 'false'
                - source: consecutiveLocalOriginFailures
                  name: Consecutive Local Origin Failures
                  visibility: $exists($value)
                - source: consecutiveGatewayErrors
                  name: Consecutive Gateway Errors
                  visibility: $exists($value)
                  type: number
                - source: consecutive5xxErrors
                  name: Consecutive 5xx Errors
                  visibility: $exists($value)
                - source: interval
                  name: Interval
                  visibility: $exists($value)
                - source: baseEjectionTime
                  name: Base Ejection Time
                  visibility: $exists($value)
                - source: maxEjectionPercent
                  name: Max Ejection Percent
                  visibility: $exists($value)
                - source: minHealthPercent
                  name: Min Health Percent
                  visibility: $exists($value)
            - source: tls
              name: TLS
              visibility: $exists($value)
              widget: Panel
              children:
                - source: mode
                  name: Mode
                  visibility: $exists($value)
                  widget: Badge
                - source: clientCertificate
                  name: Client Certificate
                  visibility: $exists($value)
                - source: privateKey
                  name: Private Key
                  visibility: $exists($value)
                  type: number
                - source: caCertificates
                  name: CA Certificates
                  visibility: $exists($value)
                - source: credentialName
                  name: Credential Name
                  visibility: $exists($value)
                - source: subjectAltNames
                  name: Subject Alt Names
                  visibility: $exists($value)
                  widget: Labels
                - source: sni
                  name: SNI
                  visibility: $exists($value)
                - source: insecureSkipVerify
                  name: Insecure Skip Verify
                  visibility: $exists($value)
                  widget: Badge
            - source: portLevelSettings
              name: portLevelSettings
              widget: Table
              disablePadding: true
              children:
                - source: $item.port.number
                  name: port
              visibility: $exists($value)
              collapsible:
                - source: $item.loadBalancer
                  name: Load Balancer
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: simple
                      name: Simple
                      visibility: $exists($value)
                      widget: Badge
                    - source: warmupDurationSecs
                      name: Warmup Duration Secs
                      visibility: $exists($value)
                    - source: consistentHash
                      name: Consistent Hash
                      visibility: $exists($value)
                      widget: Panel
                      children:
                        - source: httpHeaderName
                          name: HTTP Header Name
                          visibility: $exists($value)
                        - source: useSourceIp
                          name: Use Source IP
                          visibility: $exists($value)
                          widget: Badge
                          highlights:
                            positive:
                              - 'true'
                            negative:
                              - 'false'
                        - source: httpQueryParameterName
                          name: HTTP Query Parameter Name
                          visibility: $exists($value)
                        - source: minimumRingSize
                          name: Minimum Ring Size
                          visibility: $exists($value)
                        - source: httpCookie
                          name: HTTP Cookie
                          visibility: $exists($value)
                          widget: Panel
                          children:
                            - source: name
                              name: Name
                            - source: path
                              name: Path
                            - source: ttl
                              name: TTL
                    - source: localityLbSetting
                      name: Locality LB Settings
                      visibility: $exists($value)
                      widget: Panel
                      children:
                        - name: Enabled
                          source: enabled
                          widget: Badge
                          highlights:
                            positive:
                              - 'true'
                            negative:
                              - 'false'
                        - widget: Table
                          disablePadding: true
                          name: Distribute
                          visibility: $exists($value)
                          source: distribute
                          children:
                            - source: $item.from
                              name: From
                            - source: $item.to
                              name: To
                              widget: Labels
                        - widget: Table
                          disablePadding: true
                          name: Failover
                          visibility: $exists($value)
                          source: failover
                          children:
                            - source: $item.from
                              name: From
                            - source: $item.to
                              name: To
                        - name: Failover Priority
                          source: failoverPriority
                          widget: JoinedArray
                          visibility: $exists($value)
                - source: $item.connectionPool
                  name: Connection Pool
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: tcp
                      name: TCP
                      visibility: $exists($value)
                      widget: Panel
                      children:
                        - source: maxConnections
                          name: Max Connections
                          visibility: $exists($value)
                        - source: connectTimeout
                          name: Connect Timeout
                          visibility: $exists($value)
                        - source: tcpKeepalive
                          name: TCP Keep Alive
                          visibility: $exists($value)
                          widget: Panel
                          children:
                            - source: probes
                              name: Probes
                            - source: time
                              name: Time
                            - source: interval
                              name: Interval
                    - source: http
                      name: HTTP
                      visibility: $exists($value)
                      widget: Panel
                      children:
                        - source: http1MaxPendingRequests
                          name: HTTP1 Max Pending Requests
                          visibility: $exists($value)
                        - source: http2MaxRequests
                          name: HTTP2 Max Requests
                          visibility: $exists($value)
                        - source: maxRequestsPerConnection
                          name: Max Requests Per Connection
                          visibility: $exists($value)
                        - source: maxRetries
                          name: Max Retries
                          visibility: $exists($value)
                        - source: idleTimeout
                          name: Idle Timeout
                          visibility: $exists($value)
                        - source: h2UpgradePolicy
                          name: H2 Upgrade Policy
                          visibility: $exists($value)
                          widget: Badge
                        - source: useClientProtocol
                          name: Use Client Protocol
                          visibility: $exists($value)
                          widget: Badge
                          highlights:
                            positive:
                              - 'true'
                            negative:
                              - 'false'
                - source: $item.outlierDetection
                  name: outlierDetection
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: splitExternalLocalOriginErrors
                      name: Split External Local Origin Errors
                      visibility: $exists($value)
                      widget: Badge
                      highlights:
                        positive:
                          - 'true'
                        negative:
                          - 'false'
                    - source: consecutiveLocalOriginFailures
                      name: Consecutive Local Origin Failures
                      visibility: $exists($value)
                    - source: consecutiveGatewayErrors
                      name: Consecutive Gateway Errors
                      visibility: $exists($value)
                      type: number
                    - source: consecutive5xxErrors
                      name: Consecutive 5xx Errors
                      visibility: $exists($value)
                    - source: interval
                      name: Interval
                      visibility: $exists($value)
                    - source: baseEjectionTime
                      name: Base Ejection Time
                      visibility: $exists($value)
                    - source: maxEjectionPercent
                      name: Max Ejection Percent
                      visibility: $exists($value)
                    - source: minHealthPercent
                      name: Min Health Percent
                      visibility: $exists($value)
                - source: $item.tls
                  name: TLS
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: mode
                      name: Mode
                      visibility: $exists($value)
                      widget: Badge
                    - source: clientCertificate
                      name: Client Certificate
                      visibility: $exists($value)
                    - source: privateKey
                      name: Private Key
                      visibility: $exists($value)
                      type: number
                    - source: caCertificates
                      name: CA Certificates
                      visibility: $exists($value)
                    - source: credentialName
                      name: Credential Name
                      visibility: $exists($value)
                    - source: subjectAltNames
                      name: Subject Alt Names
                      visibility: $exists($value)
                      widget: Labels
                    - source: sni
                      name: SNI
                      visibility: $exists($value)
                    - source: insecureSkipVerify
                      name: Insecure Skip Verify
                      visibility: $exists($value)
                      widget: Badge
                - source: $item.tunnel
                  name: Tunnel
                  visibility: $exists($value)
                  widget: Panel
                  children:
                    - source: protocol
                      name: Protocol
                      visibility: $exists($value)
                      widget: Badge
                    - source: targetHost
                      name: Target Host
                      visibility: $exists($value)
                    - source: targetPort
                      name: Target Port
                      visibility: $exists($value)
            - source: tunnel
              name: Tunnel
              visibility: $exists($value)
              widget: Panel
              children:
                - source: protocol
                  name: Protocol
                  visibility: $exists($value)
                  widget: Badge
                - source: targetHost
                  name: Target Host
                  visibility: $exists($value)
                - source: targetPort
                  name: Target Port
                  visibility: $exists($value)
form:
  - simple: true
    path: spec.host
    name: Host
    required: true
  - widget: FormGroup
    path: spec.trafficPolicy
    name: Traffic Policy
    children:
      - widget: FormGroup
        path: loadBalancer
        name: Load Balancer
        children:
          - var: mainloadBalancerSelector
            name: ChooseLoadBalancerSelector
            type: string
            enum:
              - simple
              - consistentHash
          - path: simple
            name: Simple
            required: true
            visibility: $mainloadBalancerSelector = 'simple'
          - widget: FormGroup
            path: consistentHash
            name: Consistent Hash
            visibility: $mainloadBalancerSelector = 'consistentHash'
            children:
              - var: mainconsistentHashSelector
                name: ChooseConsistentHashSelector
                type: string
                enum:
                  - httpHeaderName
                  - httpCookie
                  - useSourceIp
                  - httpQueryParameterName
              - path: httpHeaderName
                name: HTTP Header Name
                required: true
                visibility: $mainconsistentHashSelector = 'httpHeaderName'
              - path: httpCookie
                name: HTTP Cookie
                widget: FormGroup
                visibility: $mainconsistentHashSelector  = 'httpCookie'
                children:
                  - path: name
                    name: Name
                    required: true
                  - path: path
                    name: Path
                  - path: ttl
                    name: TTL
                    required: true
              - path: useSourceIp
                name: Use Source IP
                required: true
                visibility: $mainconsistentHashSelector = 'useSourceIp'
              - path: httpQueryParameterName
                name: HTTP Query Parameter Name
                required: true
                visibility: $mainconsistentHashSelector= 'httpQueryParameterName'
              - path: minimumRingSize
                name: Minimum Ring Size
          - path: localityLbSetting
            name: Locality LB Settings
            widget: FormGroup
            children:
              - path: enabled
                name: Enabled
                type: boolean
              - var: mainLbSelector
                name: ChooseLbSelector
                type: string
                enum:
                  - distribute
                  - failover
              - path: distribute
                name: Distribute
                widget: GenericList
                visibility: $mainLbSelector  = 'distribute'
              - path: distribute[].from
                name: From
              - path: distribute[].to
                name: To
                widget: KeyValuePair
                value:
                  type: number
              - path: failover
                name: Failover
                widget: GenericList
                visibility: $mainLbSelector  = 'failover'
              - path: failover[].from
                name: From
              - path: failover[].to
                name: To
              - path: failoverPriority
                name: Failover Priority
                visibility: $mainLbSelector  = 'failover'
                widget: SimpleList
                children:
                  - path: '[]'
          - path: warmupDurationSecs
            name: Warmup Duration Secs
      - path: connectionPool
        name: Connection Pool
        widget: FormGroup
        children:
          - path: tcp
            name: TCP
            widget: FormGroup
            children:
              - path: maxConnections
                name: Max Connections
              - path: connectTimeout
                name: Connect Timeout
              - path: tcpKeepalive
                name: TCP Keep Alive
                widget: FormGroup
                children:
                  - path: probes
                    name: Probes
                  - path: time
                    name: Time
                  - path: interval
                    name: Interval
          - path: http
            name: HTTP
            widget: FormGroup
            children:
              - path: http1MaxPendingRequests
                name: HTTP1 Max Pending Requests
              - path: http2MaxRequests
                name: HTTP2 Max Requests
              - path: maxRequestsPerConnection
                name: Max Requests Per Connection
              - path: maxRetries
                name: Max Retries
              - path: idleTimeout
                name: Idle Timeout
              - path: h2UpgradePolicy
                name: H2 Upgrade Policy
              - path: useClientProtocol
                name: Use Client Protocol
      - path: outlierDetection
        widget: FormGroup
        children:
          - path: splitExternalLocalOriginErrors
            name: Split External Local Origin Errors
          - path: consecutiveLocalOriginFailures
            name: Consecutive Local Origin Failures
            type: number
          - path: consecutiveGatewayErrors
            name: Consecutive Gateway Errors
            type: number
          - path: consecutive5xxErrors
            name: Consecutive 5xx Errors
            type: number
          - path: interval
            name: Interval
          - path: baseEjectionTime
            name: Base Ejection Time
          - path: maxEjectionPercent
            name: Max Ejection Percent
          - path: minHealthPercent
            name: Min Health Percent
      - path: tls
        name: TLS
        widget: FormGroup
        children:
          - path: mode
            name: Mode
          - path: clientCertificate
            name: Client Certificate
          - path: privateKey
            name: Private Key
          - path: caCertificates
            name: CA Certificates
          - path: credentialName
            name: Credential Name
          - path: subjectAltNames
            name: Subject Alt Names
            widget: SimpleList
            children:
              - path: '[]'
          - path: sni
            name: SNI
          - path: insecureSkipVerify
            name: Insecure Skip Verify
      - path: portLevelSettings
        name: Port Level Settings
        widget: GenericList
        children:
          - path: '[].port.number'
            name: Port Number
          - widget: FormGroup
            path: '[].loadBalancer'
            name: Load Balancer
            children:
              - var: portLevelloadBalancerSelector
                name: ChooseLoadBalancerSelector
                type: string
                enum:
                  - simple
                  - consistentHash
              - path: simple
                name: Simple
                required: true
                visibility: $portLevelloadBalancerSelector = 'simple'
              - widget: FormGroup
                path: consistentHash
                name: Consistent Hash
                visibility: $portLevelloadBalancerSelector = 'consistentHash'
                children:
                  - var: portLevelconsistentHashSelector
                    name: ChooseConsistentHashSelector
                    type: string
                    enum:
                      - httpHeaderName
                      - httpCookie
                      - useSourceIp
                      - httpQueryParameterName
                  - path: httpHeaderName
                    name: HTTP Header Name
                    required: true
                    visibility: $portLevelconsistentHashSelector = 'httpHeaderName'
                  - path: httpCookie
                    name: HTTP Cookie
                    widget: FormGroup
                    visibility: $portLevelconsistentHashSelector  = 'httpCookie'
                    children:
                      - path: name
                        name: Name
                        required: true
                      - path: path
                        name: Path
                      - path: ttl
                        name: TTL
                        required: true
                  - path: useSourceIp
                    name: Use Source IP
                    required: true
                    visibility: $portLevelconsistentHashSelector = 'useSourceIp'
                  - path: httpQueryParameterName
                    name: HTTP Query Parameter Name
                    required: true
                    visibility: $portLevelconsistentHashSelector= 'httpQueryParameterName'
                  - path: minimumRingSize
                    name: Minimum Ring Size
              - path: localityLbSetting
                name: Locality LB Settings
                widget: FormGroup
                children:
                  - path: enabled
                    name: Enabled
                    type: boolean
                  - var: portLevelLbSelector
                    name: ChooseLbSelector
                    type: string
                    enum:
                      - distribute
                      - failover
                  - path: distribute
                    name: Distribute
                    widget: GenericList
                    visibility: $portLevelLbSelector  = 'distribute'
                  - path: distribute[].from
                    name: From
                  - path: distribute[].to
                    name: To
                    widget: KeyValuePair
                    value:
                      type: number
                  - path: failover
                    name: Failover
                    widget: GenericList
                    visibility: $portLevelLbSelector  = 'failover'
                  - path: failover[].from
                    name: From
                  - path: failover[].to
                    name: To
                  - path: failoverPriority
                    name: Failover Priority
                    visibility: $portLevelLbSelector  = 'failover'
                    widget: SimpleList
                    children:
                      - path: '[]'
              - path: warmupDurationSecs
                name: Warmup Duration Secs
          - path: '[].connectionPool'
            name: Connection Pool
            widget: FormGroup
            children:
              - path: tcp
                name: TCP
                widget: FormGroup
                children:
                  - path: maxConnections
                    name: Max Connections
                  - path: connectTimeout
                    name: Connect Timeout
                  - path: tcpKeepalive
                    name: TCP Keep Alive
                    widget: FormGroup
                    children:
                      - path: probes
                        name: Probes
                      - path: time
                        name: Time
                      - path: interval
                        name: Interval
              - path: http
                name: HTTP
                widget: FormGroup
                children:
                  - path: http1MaxPendingRequests
                    name: HTTP1 Max Pending Requests
                  - path: http2MaxRequests
                    name: HTTP2 Max Requests
                  - path: maxRequestsPerConnection
                    name: Max Requests Per Connection
                  - path: maxRetries
                    name: Max Retries
                  - path: idleTimeout
                    name: Idle Timeout
                  - path: h2UpgradePolicy
                    name: H2 Upgrade Policy
                  - path: useClientProtocol
                    name: Use Client Protocol
          - path: '[].outlierDetection'
            widget: FormGroup
            children:
              - path: splitExternalLocalOriginErrors
                name: Split External Local Origin Errors
              - path: consecutiveLocalOriginFailures
                name: Consecutive Local Origin Failures
                type: number
              - path: consecutiveGatewayErrors
                name: Consecutive Gateway Errors
                type: number
              - path: consecutive5xxErrors
                name: Consecutive 5xx Errors
                type: number
              - path: interval
                name: Interval
              - path: baseEjectionTime
                name: Base Ejection Time
              - path: maxEjectionPercent
                name: Max Ejection Percent
              - path: minHealthPercent
                name: Min Health Percent
          - path: '[].tls'
            name: TLS
            widget: FormGroup
            children:
              - path: mode
                name: Mode
              - path: clientCertificate
                name: Client Certificate
              - path: privateKey
                name: Private Key
              - path: caCertificates
                name: CA Certificates
              - path: credentialName
                name: Credential Name
              - path: subjectAltNames
                name: Subject Alt Names
                widget: SimpleList
                children:
                  - path: '[]'
              - path: sni
                name: SNI
              - path: insecureSkipVerify
                name: Insecure Skip Verify
      - path: tunnel
        name: Tunnel
        widget: FormGroup
        children:
          - path: protocol
            name: Protocol
          - path: targetHost
            name: Target Host
          - path: targetPort
            name: Target Port
  - path: spec.subsets
    name: Subsets
    widget: GenericList
    children:
      - path: '[].name'
        name: Name
      - path: '[].labels'
        name: Labels
        widget: KeyValuePair
      - path: '[].trafficPolicy'
        name: Traffic Policy
        children:
          - widget: FormGroup
            path: loadBalancer
            name: Load Balancer
            children:
              - var: subsetsloadBalancerSelector
                name: ChooseLoadBalancerSelector
                type: string
                enum:
                  - simple
                  - consistentHash
              - path: simple
                name: Simple
                required: true
                visibility: $subsetsloadBalancerSelector = 'simple'
              - widget: FormGroup
                path: consistentHash
                name: Consistent Hash
                visibility: $subsetsloadBalancerSelector = 'consistentHash'
                children:
                  - var: subsetsconsistentHashSelector
                    name: ChooseConsistentHashSelector
                    type: string
                    enum:
                      - httpHeaderName
                      - httpCookie
                      - useSourceIp
                      - httpQueryParameterName
                  - path: httpHeaderName
                    name: HTTP Header Name
                    required: true
                    visibility: $subsetsconsistentHashSelector = 'httpHeaderName'
                  - path: httpCookie
                    name: HTTP Cookie
                    widget: FormGroup
                    visibility: $subsetsconsistentHashSelector  = 'httpCookie'
                    children:
                      - path: name
                        name: Name
                        required: true
                      - path: path
                        name: Path
                      - path: ttl
                        name: TTL
                        required: true
                  - path: useSourceIp
                    name: Use Source IP
                    required: true
                    visibility: $subsetsconsistentHashSelector = 'useSourceIp'
                  - path: httpQueryParameterName
                    name: HTTP Query Parameter Name
                    required: true
                    visibility: $subsetsconsistentHashSelector= 'httpQueryParameterName'
                  - path: minimumRingSize
                    name: Minimum Ring Size
              - path: localityLbSetting
                name: Locality LB Settings
                widget: FormGroup
                children:
                  - path: enabled
                    name: Enabled
                    type: boolean
                  - var: subsetsLbSelector
                    name: ChooseLbSelector
                    type: string
                    enum:
                      - distribute
                      - failover
                  - path: distribute
                    name: Distribute
                    widget: GenericList
                    visibility: $subsetsLbSelector  = 'distribute'
                  - path: distribute[].from
                    name: From
                  - path: distribute[].to
                    name: To
                    widget: KeyValuePair
                    value:
                      type: number
                  - path: failover
                    name: Failover
                    widget: GenericList
                    visibility: $subsetsLbSelector  = 'failover'
                  - path: failover[].from
                    name: From
                  - path: failover[].to
                    name: To
                  - path: failoverPriority
                    name: Failover Priority
                    visibility: $subsetsLbSelector  = 'failover'
                    widget: SimpleList
                    children:
                      - path: '[]'
              - path: warmupDurationSecs
                name: Warmup Duration Secs
          - path: connectionPool
            name: Connection Pool
            widget: FormGroup
            children:
              - path: tcp
                name: TCP
                widget: FormGroup
                children:
                  - path: maxConnections
                    name: Max Connections
                  - path: connectTimeout
                    name: Connect Timeout
                  - path: tcpKeepalive
                    name: TCP Keep Alive
                    widget: FormGroup
                    children:
                      - path: probes
                        name: Probes
                      - path: time
                        name: Time
                      - path: interval
                        name: Interval
              - path: http
                name: HTTP
                widget: FormGroup
                children:
                  - path: http1MaxPendingRequests
                    name: HTTP1 Max Pending Requests
                  - path: http2MaxRequests
                    name: HTTP2 Max Requests
                  - path: maxRequestsPerConnection
                    name: Max Requests Per Connection
                  - path: maxRetries
                    name: Max Retries
                  - path: idleTimeout
                    name: Idle Timeout
                  - path: h2UpgradePolicy
                    name: H2 Upgrade Policy
                  - path: useClientProtocol
                    name: Use Client Protocol
          - path: outlierDetection
            widget: FormGroup
            children:
              - path: splitExternalLocalOriginErrors
                name: Split External Local Origin Errors
              - path: consecutiveLocalOriginFailures
                name: Consecutive Local Origin Failures
                type: number
              - path: consecutiveGatewayErrors
                name: Consecutive Gateway Errors
                type: number
              - path: consecutive5xxErrors
                name: Consecutive 5xx Errors
                type: number
              - path: interval
                name: Interval
              - path: baseEjectionTime
                name: Base Ejection Time
              - path: maxEjectionPercent
                name: Max Ejection Percent
              - path: minHealthPercent
                name: Min Health Percent
          - path: tls
            name: TLS
            widget: FormGroup
            children:
              - path: mode
                name: Mode
              - path: clientCertificate
                name: Client Certificate
              - path: privateKey
                name: Private Key
              - path: caCertificates
                name: CA Certificates
              - path: credentialName
                name: Credential Name
              - path: subjectAltNames
                name: Subject Alt Names
                widget: SimpleList
                children:
                  - path: '[]'
              - path: sni
                name: SNI
              - path: insecureSkipVerify
                name: Insecure Skip Verify
          - path: portLevelSettings
            name: Port Level Settings
            widget: GenericList
            children:
              - path: '[].port.number'
                name: Port Number
              - widget: FormGroup
                path: '[].loadBalancer'
                name: Load Balancer
                children:
                  - var: subsetPortLevelloadBalancerSelector
                    name: ChooseLoadBalancerSelector
                    type: string
                    enum:
                      - simple
                      - consistentHash
                  - path: simple
                    name: Simple
                    required: true
                    visibility: $subsetPortLevelloadBalancerSelector = 'simple'
                  - widget: FormGroup
                    path: consistentHash
                    name: Consistent Hash
                    visibility: $subsetPortLevelloadBalancerSelector = 'consistentHash'
                    children:
                      - var: subsetPortLevelconsistentHashSelector
                        name: ChooseConsistentHashSelector
                        type: string
                        enum:
                          - httpHeaderName
                          - httpCookie
                          - useSourceIp
                          - httpQueryParameterName
                      - path: httpHeaderName
                        name: HTTP Header Name
                        required: true
                        visibility: >-
                          $subsetPortLevelconsistentHashSelector =
                          'httpHeaderName'
                      - path: httpCookie
                        name: HTTP Cookie
                        widget: FormGroup
                        visibility: $subsetPortLevelconsistentHashSelector  = 'httpCookie'
                        children:
                          - path: name
                            name: Name
                            required: true
                          - path: path
                            name: Path
                          - path: ttl
                            name: TTL
                            required: true
                      - path: useSourceIp
                        name: Use Source IP
                        required: true
                        visibility: $subsetPortLevelconsistentHashSelector = 'useSourceIp'
                      - path: httpQueryParameterName
                        name: HTTP Query Parameter Name
                        required: true
                        visibility: >-
                          $subsetPortLevelconsistentHashSelector=
                          'httpQueryParameterName'
                      - path: minimumRingSize
                        name: Minimum Ring Size
                  - path: localityLbSetting
                    name: Locality LB Settings
                    widget: FormGroup
                    children:
                      - path: enabled
                        name: Enabled
                        type: boolean
                      - var: subsetPortLevelLbSelector
                        name: ChooseLbSelector
                        type: string
                        enum:
                          - distribute
                          - failover
                      - path: distribute
                        name: Distribute
                        widget: GenericList
                        visibility: $subsetPortLevelLbSelector  = 'distribute'
                      - path: distribute[].from
                        name: From
                      - path: distribute[].to
                        name: To
                        widget: KeyValuePair
                        value:
                          type: number
                      - path: failover
                        name: Failover
                        widget: GenericList
                        visibility: $subsetPortLevelLbSelector  = 'failover'
                      - path: failover[].from
                        name: From
                      - path: failover[].to
                        name: To
                      - path: failoverPriority
                        name: Failover Priority
                        visibility: $subsetPortLevelLbSelector  = 'failover'
                        widget: SimpleList
                        children:
                          - path: '[]'
                  - path: warmupDurationSecs
                    name: Warmup Duration Secs
              - path: '[].connectionPool'
                name: Connection Pool
                widget: FormGroup
                children:
                  - path: tcp
                    name: TCP
                    widget: FormGroup
                    children:
                      - path: maxConnections
                        name: Max Connections
                      - path: connectTimeout
                        name: Connect Timeout
                      - path: tcpKeepalive
                        name: TCP Keep Alive
                        widget: FormGroup
                        children:
                          - path: probes
                            name: Probes
                          - path: time
                            name: Time
                          - path: interval
                            name: Interval
                  - path: http
                    name: HTTP
                    widget: FormGroup
                    children:
                      - path: http1MaxPendingRequests
                        name: HTTP1 Max Pending Requests
                      - path: http2MaxRequests
                        name: HTTP2 Max Requests
                      - path: maxRequestsPerConnection
                        name: Max Requests Per Connection
                      - path: maxRetries
                        name: Max Retries
                      - path: idleTimeout
                        name: Idle Timeout
                      - path: h2UpgradePolicy
                        name: H2 Upgrade Policy
                      - path: useClientProtocol
                        name: Use Client Protocol
              - path: '[].outlierDetection'
                widget: FormGroup
                children:
                  - path: splitExternalLocalOriginErrors
                    name: Split External Local Origin Errors
                  - path: consecutiveLocalOriginFailures
                    name: Consecutive Local Origin Failures
                    type: number
                  - path: consecutiveGatewayErrors
                    name: Consecutive Gateway Errors
                    type: number
                  - path: consecutive5xxErrors
                    name: Consecutive 5xx Errors
                    type: number
                  - path: interval
                    name: Interval
                  - path: baseEjectionTime
                    name: Base Ejection Time
                  - path: maxEjectionPercent
                    name: Max Ejection Percent
                  - path: minHealthPercent
                    name: Min Health Percent
              - path: '[].tls'
                name: TLS
                widget: FormGroup
                children:
                  - path: mode
                    name: Mode
                  - path: clientCertificate
                    name: Client Certificate
                  - path: privateKey
                    name: Private Key
                  - path: caCertificates
                    name: CA Certificates
                  - path: credentialName
                    name: Credential Name
                  - path: subjectAltNames
                    name: Subject Alt Names
                    widget: SimpleList
                    children:
                      - path: '[]'
                  - path: sni
                    name: SNI
                  - path: insecureSkipVerify
                    name: Insecure Skip Verify
          - path: tunnel
            name: Tunnel
            widget: FormGroup
            children:
              - path: protocol
                name: Protocol
              - path: targetHost
                name: Target Host
              - path: targetPort
                name: Target Port
  - path: spec.exportTo
    name: Export To
    widget: SimpleList
    children:
      - path: '[]'
  - path: spec.workloadSelector.matchLabels
    defaultExpanded: true
    name: Workload Selector Match Labels
    widget: KeyValuePair
list:
  - source: spec.host
    name: Host
translations:
  en:
    metadata.annotations: Annotations
    metadata.labels: Labels
    metadata.creationTimestamp: Created at
    resource.description: >-
      {{[Destination
      Rule](https://istio.io/latest/docs/reference/config/networking/destination-rule)}}
      specifies rules that apply to traffic intended for a service after
      routing.
    References: References
    probes: Probes
    Export To: Export To
    Workload Selector Match Labels: Workload Selector Match Labels
    Traffic Policy: Traffic Policy
    Interval: Interval
    Name: Name
    time: Time
    interval: Interval
    Host: Host
    Connection Pool: Connection Pool
    TCP Keep Alive: TCP Keep Alive
    Probes: Probes
    Time: Time
    TCP: TCP
    HTTP: HTTP
    HTTP1 Max Pending Requests: HTTP1 Max Pending Requests
    Max Connections: Max Connections
    Connect Timeout: Connect Timeout
    HTTP2 Max Requests: HTTP2 Max Requests
    Max Requests Per Connection: Max Requests Per Connection
    Max Retries: Max Retries
    Idle Timeout: Idle Timeout
    H2 Upgrade Policy: H2 Upgrade Policy
    Use Client Protocol: Use Client Protocol
    Locality LB Settings: Locality LB Settings
    Enabled: Enabled
    Distribute: Distribute
    From: From
    To: To
    Failover: Failover
    Failover Priority: Failover Priority
    HTTP Cookie: HTTP Cookie
    Path: Path
    TTL: TTL
    Consistent Hash: Consistent Hash
    HTTP Header Name: HTTP Header Name
    Use Source IP: Use Source IP
    HTTP Query Parameter Name: HTTP Query Parameter Name
    Minimum Ring Size: Minimum Ring Size
    Load Balancer: Load Balancer
    Simple: Simple
    Warmup Duration Secs: Warmup Duration Secs
    ChooseConsistentHashSelector: Select Hash Type
    ChooseLoadBalancerSelector: Select Balancer Type
    ChooseLbSelector: Select LB Settings
    Split External Local Origin Errors: Split External Local Origin Errors
    Consecutive Local Origin Failures: Consecutive Local Origin Failures
    Consecutive Gateway Errors: Consecutive Gateway Errors
    Consecutive 5xx Errors: Consecutive 5xx Errors
    Base Ejection Time: Base Ejection Time
    Max Ejection Percent: Max Ejection Percent
    Min Health Percent: Min Health Percent
    Port Level Settings: Port Level Settings
    Port Number: Port Number
    TLS: TLS
    Mode: Mode
    Client Certificate: Client Certificate
    Private Key: Private Key
    CA Certificates: CA Certificates
    Credential Name: Credential Name
    Subject Alt Names: Subject Alt Names
    SNI: SNI
    Insecure Skip Verify: Insecure Skip Verify
    Tunnel: Tunnel
    Protocol: Protocol
    Target Host: Target Host
    Target Port: Target Port
    Subsets: Subsets
    Labels: Labels
    consistentHash: Consistent Hash
    simple: Simple
    failover: Failover
    distribute: Distribute
---
details:
  header:
    - source: 'status.state ? status.state : "UNKNOWN"'
      highlights:
        informative:
          - UNKNOWN
      type: string
      name: status
      widget: Badge
      description: status.message
  body:
    - name: Provider
      widget: Panel
      children:
        - name: Provider
          source: status.provider
    - name: Specification
      widget: Panel
      children:
        - name: spec.dnsName
          source: spec.dnsName
        - name: TTL
          source: spec.ttl
        - name: spec.targets
          widget: JoinedArray
          source: spec.targets
form:
  - simple: true
    path: spec.dnsName
    placeholder: dnsName.placeholder
    required: true
  - simple: true
    name: TTL
    placeholder: ttl.placeholder
    path: spec.ttl
    required: true
  - path: spec.targets
    widget: SimpleList
    simple: true
    defaultExpanded: true
    required: true
    name: spec.targets
    children:
      - widget: Text
        simple: true
        enum:
          - 35.204.159.60
          - 34.147.91.1
        placeholder: target.placeholder
  - path: spec.text
    name: spec.text
    widget: SimpleList
    children:
      - path: '[]'
        simple: true
    placeholder: text.placeholder
    defaultExpanded: true
general:
  resource:
    kind: DNSEntry
    group: dns.gardener.cloud
    version: v1alpha1
  name: DNS Entries
  category: Configuration
  urlPath: dnsentries
  scope: namespace
  description: >-
    {{[DNSEntry](https://kyma-project.io/docs/kyma/latest/03-tutorials/00-api-exposure/apix-02-setup-custom-domain-for-workload/)}}
    is an object that represents the request to create an external DNS record.
list:
  - source: 'status.state ? status.state : "UNKNOWN"'
    highlights:
      informative:
        - UNKNOWN
    type: string
    name: status
    widget: Badge
    description: status.message
presets:
  - name: template
    default: true
    value:
      metadata:
        annotations:
          dns.gardener.cloud/class: garden
      spec:
        ttl: 600
        dnsName: ''
        targets: []
        text: []
        items: []
        name: ''
        bool: false
translations:
  en:
    metadata.annotations: Annotations
    metadata.labels: Labels
    metadata.creationTimestamp: Created at
    target.placeholder: Enter the A record target or CNAME record
    spec.targets: Targets
    spec.dnsName: DNSName
    ttl.placeholder: Enter the time to live
    spec.text: Text
    dnsName.placeholder: Select the DNSName
    text.placeholder: Text record must be a string. Provide either target or text.
    status: Status
---
details:
  header:
    - source: spec.type
      name: spec.type
    - source: 'status.state ? status.state : "UNKNOWN"'
      highlights:
        informative:
          - UNKNOWN
      type: string
      name: status
      widget: Badge
      description: status.message
  body:
    - widget: Columns
      children:
        - name: included.domains
          widget: Table
          showHeader: false
          source: spec.domains.include
          children:
            - source: $item
              search: true
        - name: excluded.domains
          widget: Table
          showHeader: false
          source: spec.domains.exclude
          children:
            - source: $item
              search: true
form:
  - simple: true
    path: spec.type
    widget: Text
    placeholder: provider.choose
    enum:
      - alicloud-dns
      - aws-route53
      - azure-dns
      - google-clouddns
      - openstack-designate
      - cloudflare-dns
      - infoblox-dns
      - netlify-dns
    required: true
  - name: spec.secretRef
    simple: true
    path: spec.secretRef
    widget: ResourceRef
    provideVar: secret
    resource:
      kind: Secret
      version: v1
    defaultExpanded: true
    required: true
  - path: spec.domains.include
    simple: true
    widget: SimpleList
    children:
      - path: '[]'
        simple: true
    placeholder: domain.allowed
    defaultExpanded: true
    required: true
  - path: spec.domains.exclude
    widget: SimpleList
    children:
      - path: '[]'
    placeholder: domain.forbidden
general:
  resource:
    kind: DNSProvider
    group: dns.gardener.cloud
    version: v1alpha1
  name: DNS Providers
  category: Configuration
  urlPath: dnsproviders
  scope: namespace
  description: >-
    {{[DNSProvider](https://kyma-project.io/docs/kyma/latest/03-tutorials/00-api-exposure/apix-02-setup-custom-domain-for-workload/)}}
    is used to specify and manage the configuration for the external DNS
    services.
list:
  - name: spec.type
    source: spec.type
  - source: 'status.state ? status.state : "UNKNOWN"'
    highlights:
      informative:
        - UNKNOWN
    name: status
    widget: Badge
    description: status.message
presets:
  - name: template
    default: true
    value:
      metadata:
        annotations:
          dns.gardener.cloud/class: garden
translations:
  en:
    metadata.annotations: Annotations
    metadata.labels: Labels
    metadata.creationTimestamp: Created at
    provider.choose: Choose Provider type
    spec.type: Type
    spec.type.alicloud-dns: Alicloud DNS provider
    spec.type.aws-route53: AWS Route 53 provider
    spec.type.azure-dns: Azure DNS provider
    spec.type.google-clouddns: Google CloudDNS provider
    spec.type.openstack-designate: Openstack Designate provider
    spec.type.cloudflare-dns: Cloudflare DNS provider
    spec.type.infoblox-dns: Infoblox DNS provider
    spec.type.netlify-dns: Netlify DNS provider
    spec.domains.include: Include Domains
    spec.domains.exclude: Exclude Domains
    included.domains: Included Domains
    excluded.domains: Excluded Domains
    domain.allowed: Domain that is allowed
    domain.forbidden: Domain that is forbidden
    spec.secretRef: Secret Reference
    status: Status
---
dataSources:
  podSelector:
    resource:
      kind: Pod
      version: v1
      namespace: null
    filter: $matchByLabelSelector($item, $root.spec.selector)
  relatedVirtualServices:
    resource:
      kind: VirtualService
      group: networking.istio.io
      version: v1beta1
      namespace: null
    filter: >-
      $filter($item.spec.gateways, function($g){$contains($g,'/') ?
      ($substringBefore($g,'/') = $root.metadata.namespace and
      $substringAfter($g, '/') = $root.metadata.name) : ($substringBefore($g,
      '.') = $root.metadata.name and $substringBefore($substringAfter($g, '.'),
      '.') = $root.metadata.namespace) })
details:
  header:
    - source: spec.selector
      widget: Labels
      name: spec.selector
  body:
    - widget: Table
      source: spec.servers
      name: spec.servers
      children:
        - source: port.name
          name: spec.servers.port.name
        - widget: JoinedArray
          separator: break
          source: hosts
          name: spec.servers.hosts
        - source: port.number
          name: spec.servers.port.number
        - source: port.targetPort
          name: spec.servers.port.targetPort
        - source: port.protocol
          name: spec.servers.port.protocol
        - source: tls.mode
          name: spec.servers.tls.mode
        - widget: ResourceLink
          source: tls.credentialName
          name: spec.servers.tls.credentialName
          resource:
            name: tls.credentialName
            namespace: '"istio-system"'
            kind: '"Secret"'
    - widget: Panel
      name: spec.selector
      disablePadding: true
      children:
        - source: $podSelector()
          widget: ResourceList
          disableCreate: true
          visibility: $exists($root.spec.selector) and $boolean($root.spec.selector)
        - source: spec.selector
          widget: Panel
          name: selector.matchesAllPods
          visibility: $not($exists($value)) or $not($boolean($value))
      header:
        - source: spec.selector
          widget: Labels
          name: spec.selector
          visibility: $exists($value) and $boolean($value)
  resourceGraph:
    depth: 1
    colorVariant: 1
    dataSources:
      - source: relatedVirtualServices
form:
  - path: spec.selector
    widget: KeyValuePair
    simple: true
    required: true
    defaultExpanded: true
  - path: spec.servers
    widget: GenericList
    simple: true
    required: true
    children:
      - widget: FormGroup
        simple: true
        path: '[].port'
        defaultExpanded: true
        children:
          - path: number
            simple: true
            required: true
            inputInfo: inputInfo.spec.servers.port.number
          - path: name
            widget: Name
            inputInfo: null
            simple: true
            required: true
          - path: protocol
            simple: true
            enum:
              - HTTP
              - HTTPS
              - HTTP2
              - GRPC
              - GRPC-WEB
              - MONGO
              - REDIS
              - MYSQL
              - TCP
            required: true
            placeholder: placeholders.dropdown
          - path: targetPort
            simple: true
      - widget: FormGroup
        simple: true
        path: '[].tls'
        visibility: $item.port.protocol = 'HTTP' or $item.port.protocol = 'HTTPS'
        children:
          - path: httpsRedirect
            simple: true
            visibility: $item.port.protocol = 'HTTP'
          - path: mode
            simple: true
            visibility: $item.port.protocol = 'HTTPS'
            required: true
            placeholder: placeholders.dropdown
          - path: credentialName
            simple: true
            widget: Resource
            resource:
              kind: Secret
              version: v1
              namespace: istio-system
              scope: namespace
            filter: >-
              $item.type = 'kubernetes.io/tls' or ($item.type = 'Opaque' and
              $contains($item.data, 'key') and $contains($item.data, 'cert'))
            visibility: $item.port.protocol = 'HTTPS'
          - path: serverCertificate
            simple: true
            visibility: $item.port.protocol = 'HTTPS'
            placeholder: placeholders.serverCertificate
          - path: privateKey
            simple: true
            visibility: $item.port.protocol = 'HTTPS'
            placeholder: placeholders.privateKey
          - path: caCertificates
            simple: true
            visibility: $item.port.protocol = 'HTTPS'
            placeholder: placeholders.caCertificates
          - simple: true
            widget: Alert
            type: warning
            alert: '"alert.tls.https"'
            visibility: $item.port.protocol = 'HTTPS'
      - widget: SimpleList
        path: '[].hosts'
        required: true
        simple: true
        placeholder: placeholders.hosts
        children:
          - path: '[]'
            simple: true
general:
  resource:
    kind: Gateway
    group: networking.istio.io
    version: v1beta1
  urlPath: gateways
  category: Istio
  name: Gateways
  scope: namespace
  description: >-
    {{[Gateways](https://istio.io/latest/docs/reference/config/networking/gateway/)}}
    describes a load balancer that operates at the edge of the mesh and receives
    incoming or outgoing HTTP/TCP connections.
list:
  - name: spec.selector
    source: spec.selector
    widget: Labels
presets:
  - name: Default Gateway
    default: true
    value:
      spec:
        selector:
          istio: ingressgateway
  - name: Ingress Gateway
    value:
      metadata:
        name: httpbin-gateway
        labels:
          app.kubernetes.io/name: httpbin-gateway
      spec:
        selector:
          istio: ingressgateway
        servers:
          - port:
              number: 443
              name: https
              protocol: HTTPS
            tls:
              mode: SIMPLE
              credentialName: ''
            hosts: []
translations:
  en:
    alert.tls.https: >-
      TLS Server of mode SIMPLE or MUTUAL needs either credential name, or
      private key and server certificate pair.
    spec.selector: Selector
    spec.gateways: Gateways
    spec.servers: Servers
    spec.servers.port: Port
    spec.servers.port.name: Port Name
    spec.servers.port.protocol: Protocol
    spec.servers.port.targetPort: Target Port
    spec.servers.port.number: Port Number
    spec.servers.tls: TLS
    spec.servers.tls.mode: TLS Mode
    spec.servers.tls.httpsRedirect: HTTP Redirect
    spec.servers.tls.credentialName: Credential Name
    spec.servers.tls.serverCertificate: Server Certificate
    spec.servers.tls.privateKey: Private Key
    spec.servers.tls.caCertificates: CA Certificate
    spec.servers.hosts: Hosts
    selector.matchesAllPods: Matches all Pods in the Namespace
    placeholders.dropdown: Type or choose an option
    placeholders.serverCertificate: Enter the certificate path
    placeholders.privateKey: Enter the private key path
    placeholders.caCertificates: Enter the CA certificates path
    placeholders.hosts: For example, *.api.mydomain.com
    inputInfo.spec.servers.port.number: Must be a on-negative number.
---
details:
  header:
    - name: Status
      source: >-
        $filter(status.conditions, function($v, $i, $a) {$v.status =
        'True'}).type
      widget: Labels
  body:
    - name: Specification
      widget: Panel
      children:
        - name: Min Replicas
          source: spec.minReplicas
        - name: Current Replicas
          source: status.currentReplicas
        - name: Max Replicas
          source: spec.maxReplicas
        - name: Scale Target Reference - Kind
          source: spec.scaleTargetRef.kind
        - name: Scale Target Reference - Name
          source: spec.scaleTargetRef.name
          widget: ResourceLink
          resource:
            name: spec.scaleTargetRef.name
            namespace: $root.metadata.namespace
            kind: spec.scaleTargetRef.kind
    - widget: Columns
      children:
        - name: Scale-down behavior
          source: spec.behavior.scaleDown
          widget: Panel
          visibility: $exists(spec.behavior.scaleDown)
          children:
            - name: Stabilization window (seconds)
              source: stabilizationWindowSeconds
            - name: Select policy
              source: selectPolicy
            - name: Policies
              source: policies
              widget: Table
              showHeader: true
              children:
                - name: Type
                  source: type
                - name: Value
                  source: value
                - name: Period (seconds)
                  source: periodSeconds
        - name: Scale-up behavior
          source: spec.behavior.scaleUp
          visibility: $exists(spec.behavior.scaleUp)
          widget: Panel
          children:
            - name: Stabilization window (seconds)
              source: stabilizationWindowSeconds
            - name: Select policy
              source: selectPolicy
            - name: Policies
              source: policies
              widget: Table
              showHeader: true
              children:
                - name: Type
                  source: type
                - name: Value
                  source: value
                - name: Period (seconds)
                  source: periodSeconds
    - name: Metrics
      source: spec.metrics
      widget: Table
      showHeader: true
      children:
        - name: Type
          search: true
          source: type
        - name: Name
          search: true
          source: >-
            $item.type = "Resource" ? $item.resource.name : $item.type = "Pods"
            ? $item.pods.metric.name :  $item.type = "Object" ?
            $item.object.metric.name : $item.external.metric.name
        - name: Target Type
          source: >-
            $item.type = "Resource" ? $item.resource.target.type : $item.type =
            "Pods" ? $item.pods.target.type :  $item.type = "Object" ?
            $item.object.target.type : $item.external.target.type
        - name: Current Metric
          source: >-
            $item.type = "Resource" ? ($item.resource.target.type =
            "Utilization" ?  $join([$string($not($root.status.currentMetrics =
            null) ?  ($single($root.status.currentMetrics, function($v, $i, $a)
            {$v.resource.name =
            $item.resource.name}).resource.current.averageUtilization & "%") :
            "-"), " / ",$string($item.resource.target.averageUtilization),"%"]):
            $join([$string($not($root.status.currentMetrics = null) ? 
            $single($root.status.currentMetrics, function($v, $i, $a)
            {$v.resource.name =
            $item.resource.name}).resource.current.averageValue : "-"), " /
            ",$string($item.resource.target.averageValue)])) : $item.type =
            "Pods" ?  $join([$string($not($root.status.currentMetrics = null) ? 
            $single($root.status.currentMetrics, function($v, $i, $a)
            {$v.pods.metric.name =
            $item.pods.metric.name}).pods.current.averageValue : "-"), " /
            ",$string($item.pods.target.averageValue)]) : $item.type = "Object"
            ?  ($item.object.target.type = "AverageValue" ? 
            $join([$string($not($root.status.currentMetrics = null) ? 
            $single($root.status.currentMetrics, function($v, $i, $a)
            {$v.object.metric.name =
            $item.object.metric.name}).object.current.averageValue : "-"), " /
            ",$string($item.object.target.averageValue)]):
            $join([$string($not($root.status.currentMetrics = null) ? 
            $single($root.status.currentMetrics, function($v, $i, $a)
            {$v.object.metric.name =
            $item.object.metric.name}).object.current.value : "-"), " /
            ",$string($item.object.target.value)])) :
            ($item.external.target.type = "AverageValue" ? 
            $join([$string($not($root.status.currentMetrics = null) ? 
            $single($root.status.currentMetrics, function($v, $i, $a)
            {$v.external.metric.name =
            $item.external.metric.name}).external.current.averageValue : "-"), "
            / ",$string($item.external.target.averageValue)]):
            $join([$string($not($root.status.currentMetrics = null) ? 
            $single($root.status.currentMetrics, function($v, $i, $a)
            {$v.external.metric.name =
            $item.external.metric.name}).external.current.value : "-"), " /
            ",$string($item.external.target.value)]))
    - widget: EventList
      name: Events
      filter: $matchEvents($$, $root.kind, $root.metadata.name)
      hideInvolvedObjects: true
form:
  - name: minReplicas
    simple: true
    path: spec.minReplicas
  - name: maxReplicas
    simple: true
    required: true
    path: spec.maxReplicas
  - path: spec.behavior
    widget: FormGroup
    children:
      - path: scaleDown
        widget: FormGroup
        defaultExpanded: true
        children:
          - path: selectPolicy
            enum:
              - Min
              - Max
              - Disabled
          - path: stabilizationWindowSeconds
          - path: policies
            defaultExpanded: true
            widget: GenericList
            children:
              - path: '[].type'
                enum:
                  - Pods
                  - Percent
              - path: '[].value'
              - path: '[].periodSeconds'
      - path: scaleUp
        widget: FormGroup
        defaultExpanded: true
        children:
          - path: selectPolicy
            enum:
              - Min
              - Max
              - Disabled
          - path: stabilizationWindowSeconds
          - path: policies
            defaultExpanded: true
            widget: GenericList
            children:
              - path: '[].type'
                enum:
                  - Pods
                  - Percent
              - path: '[].value'
              - path: '[].periodSeconds'
                defaultValue: 0
  - name: Scale Target Reference
    simple: true
    path: spec.scaleTargetRef
    widget: FormGroup
    required: true
    defaultExpanded: true
    children:
      - simple: true
        required: true
        path: kind
        enum:
          - Pod
          - Deployment
          - ReplicaSet
          - StatefulSet
      - simple: true
        required: true
        path: name
        widget: Resource
        resource:
          scope: namespace
          kind: Pod
          version: v1
        visibility: spec.scaleTargetRef.kind = "Pod"
        overwrite: false
      - simple: true
        var: separator
        value: ''
      - simple: true
        required: true
        path: name
        widget: Resource
        resource:
          scope: namespace
          kind: Deployment
          group: apps
          version: v1
        visibility: spec.scaleTargetRef.kind = "Deployment"
        overwrite: false
      - simple: true
        var: separator
        value: ''
      - simple: true
        required: true
        path: name
        widget: Resource
        resource:
          scope: namespace
          kind: ReplicaSet
          group: apps
          version: v1
        visibility: spec.scaleTargetRef.kind = "ReplicaSet"
        overwrite: false
      - simple: true
        var: separator
        value: ''
      - simple: true
        required: true
        path: name
        widget: Resource
        resource:
          scope: namespace
          kind: StatefulSet
          group: apps
          version: v1
        visibility: spec.scaleTargetRef.kind = "StatefulSet"
        overwrite: false
      - simple: true
        var: separator
        value: ''
      - simple: true
        required: true
        path: name
        visibility: >-
          $not(spec.scaleTargetRef.kind = "Pod") and
          $not(spec.scaleTargetRef.kind = "Deployment") and
          $not(spec.scaleTargetRef.kind = "ReplicaSet") and
          $not(spec.scaleTargetRef.kind = "StatefulSet")
        overwrite: false
      - name: API version
        simple: true
        path: apiVersion
  - path: spec.metrics
    simple: true
    widget: GenericList
    defaultExpanded: true
    children:
      - simple: true
        path: '[].type'
        required: true
        enum:
          - Resource
          - Pods
          - Object
          - External
      - path: '[].resource.name'
        simple: true
        enum:
          - cpu
          - memory
        visibility: $item.type = 'Resource'
      - path: '[].resource.target'
        widget: FormGroup
        simple: true
        visibility: $item.type = 'Resource'
        defaultExpanded: true
        children:
          - path: type
            simple: true
            enum:
              - Utilization
              - AverageValue
          - path: averageUtilization
            simple: true
            visibility: $item.resource.target.type = 'Utilization'
          - path: averageValue
            simple: true
            visibility: $item.resource.target.type = 'AverageValue'
      - path: '[].pods.metric.name'
        simple: true
        widget: Resource
        resource:
          scope: namespace
          kind: Pod
          version: v1
        visibility: $item.type = 'Pods'
      - path: '[].pods.metric.selector.matchLabels'
        simple: true
        visibility: $item.type = 'Pods'
        widget: KeyValuePair
      - path: '[].pods.target'
        widget: FormGroup
        simple: true
        visibility: $item.type = 'Pods'
        defaultExpanded: true
        children:
          - path: type
            simple: true
            enum:
              - AverageValue
          - path: averageValue
            simple: true
            visibility: $item.pods.target.type = 'AverageValue'
          - path: value
            simple: true
            visibility: $item.pods.target.type = 'Value'
      - path: '[].object.metric.name'
        simple: true
        visibility: $item.type = 'Object'
      - path: '[].object.metric.selector.matchLabels'
        simple: true
        visibility: $item.type = 'Object'
        widget: KeyValuePair
      - path: '[].object.describedObject'
        widget: FormGroup
        simple: true
        visibility: $item.type = 'Object'
        defaultExpanded: true
        children:
          - path: kind
            simple: true
            required: true
          - path: name
            simple: true
            required: true
          - name: API version
            path: apiVersion
            simple: true
      - path: '[].object.target'
        widget: FormGroup
        simple: true
        visibility: $item.type = 'Object'
        defaultExpanded: true
        children:
          - path: type
            simple: true
            enum:
              - AverageValue
              - Value
          - path: averageValue
            simple: true
            visibility: $item.object.target.type = 'AverageValue'
          - path: value
            simple: true
            visibility: $item.object.target.type = 'Value'
      - path: '[].external.metric.name'
        simple: true
        visibility: $item.type = 'External'
      - path: '[].external.metric.selector.matchLabels'
        simple: true
        visibility: $item.type = 'External'
        widget: KeyValuePair
      - path: '[].external.target'
        widget: FormGroup
        simple: true
        visibility: $item.type = 'External'
        defaultExpanded: true
        children:
          - path: type
            simple: true
            enum:
              - AverageValue
              - Value
          - path: averageValue
            simple: true
            visibility: $item.external.target.type = 'AverageValue'
          - path: value
            simple: true
            visibility: $item.external.target.type = 'Value'
general:
  resource:
    kind: HorizontalPodAutoscaler
    group: autoscaling
    version: v2
  name: Horizontal Pod Autoscalers
  category: Discovery and Network
  urlPath: horizontalpodautoscalers
  scope: namespace
  description: >-
    {{[Horizontal Pod
    Autoscalers](https://kubernetes.io/docs/reference/kubernetes-api/workload-resources/horizontal-pod-autoscaler-v2/)}}
    automatically manages the number of Pod replicas to match the demand.
list:
  - name: Metrics
    source: $count(spec.metrics)
  - name: Min Replicas
    source: spec.minReplicas
  - name: Max Replicas
    source: spec.maxReplicas
  - name: Current Replicas
    source: status.currentReplicas
  - name: Status
    source: $filter(status.conditions, function($v, $i, $a) {$v.status = 'True'}).type
    widget: Labels
---
details:
  header:
    - name: spec.acme.email
      source: spec.acme.email
    - source: 'status.state ? status.state : "UNKNOWN"'
      highlights:
        informative:
          - UNKNOWN
      name: status
      widget: Badge
      description: status.message
    - name: spec.acme.server
      source: spec.acme.server
  body:
    - widget: Columns
      children:
        - name: Included domains
          widget: Table
          showHeader: false
          source: spec.acme.domains.include
          children:
            - source: $item
              search: true
        - name: Excluded domains
          widget: Table
          showHeader: false
          source: spec.acme.domains.exclude
          children:
            - source: $item
              search: true
form:
  - var: IssuerType
    dynamicValue: |
      $exists(spec.acme) ? 'ACME' : $exists(spec.ca) ? 'CA' : ''
    name: issuertype
    simple: true
    widget: Text
    enum:
      - CA
      - ACME
    required: true
    placeholder: selectissuertype
  - path: spec.requestsPerDayQuota
    required: true
  - simple: true
    path: spec.acme
    visibility: $IssuerType = 'ACME'
    children:
      - path: server
        simple: true
        overwrite: false
        placeholder: spec.acme.serverurl
      - path: email
        simple: true
        placeholder: email.for.registration
      - path: skipDNSChallengeValidation
      - path: privateKeySecretRef
        widget: ResourceRef
        provideVar: secret
        resource:
          kind: Secret
          version: v1
        defaultExpanded: true
      - path: autoRegistration
      - path: domains.include
        simple: true
        widget: SimpleList
        children:
          - path: '[]'
            simple: true
        placeholder: spec.acme.domainallowed
      - path: domains.exclude
        widget: SimpleList
        children:
          - path: '[]'
        placeholder: spec.acme.domainforbidden
      - path: externalAccountBinding
        widget: FormGroup
        children:
          - path: keyID
            required: false
            placeholder: spec.acme.externalAccountBinding.id
      - path: externalAccountBinding.keySecretRef
        widget: ResourceRef
        provideVar: secret
        resource:
          kind: Secret
          version: v1
        defaultExpanded: true
        visibility: $exists(spec.acme.externalAccountBinding.keyID)
  - simple: true
    path: spec.ca
    visibility: $IssuerType = 'CA'
    children:
      - simple: true
        path: privateKeySecretRef
        widget: ResourceRef
        provideVar: secret
        resource:
          kind: Secret
          version: v1
        defaultExpanded: true
        required: true
general:
  resource:
    kind: Issuer
    group: cert.gardener.cloud
    version: v1alpha1
  name: Issuers
  category: Configuration
  urlPath: issuers
  scope: namespace
  description: >-
    {{[Issuer](https://cert-manager.io/docs/concepts/issuer/)}} is a Namespace
    resource responsible for provisioning of certificates.
list:
  - name: spec.acme.email
    source: spec.acme.email
  - name: status
    source: 'status.state ? status.state : "UNKNOWN"'
    highlights:
      informative:
        - UNKNOWN
    widget: Badge
    description: status.message
presets:
  - name: Default
    default: true
    value:
      spec:
        requestsPerDayQuota: 0
  - name: Lets Encrypt stage
    value:
      metadata:
        name: lets-encrypt-stage
      spec:
        requestsPerDayQuota: 0
        acme:
          server: https://acme-staging-v02.api.letsencrypt.org/directory
          email: ''
          autoRegistration: true
  - name: Lets Encrypt Production
    value:
      metadata:
        name: lets-encrypt-prod
      spec:
        requestsPerDayQuota: 0
        acme:
          server: https://acme-v02.api.letsencrypt.org/directory
          email: ''
          autoRegistration: true
translations:
  en:
    metadata.annotations: Annotations
    metadata.labels: Labels
    metadata.creationTimestamp: Created at
    issuertype: Issuer Type
    selectissuertype: Select Issuer type
    spec.requestsPerDayQuota: Daily Requests Quota
    spec.acme.email: Email
    email.for.registration: Email address for user registration
    spec.acme.server: Server
    spec.acme.serverurl: ACME Server URL
    spec.acme.domains.include: Include Domains
    spec.acme.domains.exclude: Exclude Domains
    spec.acme.includeddomains: Included Domains
    spec.acme.excludeddomains: Excluded Domains
    spec.acme.domainallowed: Domain that is allowed
    spec.acme.domainforbidden: Domain that is forbidden
    status: Status
    spec.acme.skipDNSChallengeValidation: Skip DNS challenge validation
    spec.acme.privateKeySecretRef: Private key Secret
    spec.acme.autoRegistration: Auto registration
    spec.acme.externalAccountBinding: External account binding
    spec.acme.externalAccountBinding.keyID: CA key ID
    spec.acme.externalAccountBinding.id: ID of the CA that the external account is bound to
    spec.acme.externalAccountBinding.keySecretRef: Symmetric MAC Secret
    spec.ca.privateKeySecretRef: Private key Secret
---
dataSources:
  moduleTemplates:
    resource:
      kind: ModuleTemplate
      namespace: null
      group: operator.kyma-project.io
      version: v1beta2
details:
  header: []
  body:
    - name: Summary
      widget: Panel
      children:
        - name: channel
          source: spec.channel
        - name: State
          widget: Badge
          source: status.state
          description: 'status.state!="Ready" ? status.lastOperation.operation : ""'
        - name: Age
          source: metadata.creationTimestamp
    - widget: Alert
      severity: warning
      source: '"alert.beta"'
      visibility: >-
        ( $fullModuleTemplate := $filter($moduleTemplates().items, function($v)
        { $v.metadata.labels."operator.kyma-project.io/module-name" in
        $item.spec.modules.name and
        $v.metadata.labels."operator.kyma-project.io/beta" = "true" }); $isBeta
        := $count($fullModuleTemplate) > 0; )
    - widget: Table
      source: $sort(status.modules[], function($l, $r) {$l.name < $r.name})
      name: Modules
      visibility: $exists(*)
      children:
        - name: Name
          source: $
          widget: Plain
          children:
            - widget: ResourceLink
              visibility: $exists(resource.metadata.name)
              source: name
              resource:
                name: resource.metadata.name
                namespace: resource.metadata.namespace
                kind: resource.kind
            - widget: Text
              visibility: $not($exists(resource.metadata.name))
              source: name
        - name: ''
          source: >-
            $filter($moduleTemplates().items, function($v)
            {$v.metadata.labels."operator.kyma-project.io/module-name" in name
            and
            $v.spec.channel=channel}).metadata.labels."operator.kyma-project.io/beta"
            = "true" ? "beta" : "-"
        - name: Namespace
          source: $parent.metadata.namespace
        - name: Channel
          source: channel
          widget: Text
        - name: Version
          source: version
          widget: Text
        - name: State
          widget: Badge
          source: state
          description: 'message ? message : ""'
        - name: Documentation
          widget: ExternalLink
          copyable: false
          source: '"Documentation"'
          link: >-
            $filter($moduleTemplates().items, function($v)
            {$v.metadata.labels."operator.kyma-project.io/module-name" in name
            and
            $v.spec.channel=channel}).metadata.annotations."operator.kyma-project.io/doc-url"
          visibility: >-
            ( $docsLink := $filter($moduleTemplates().items, function($v)
            {$v.metadata.labels."operator.kyma-project.io/module-name" in name
            and
            $v.spec.channel=channel}).metadata.annotations."operator.kyma-project.io/doc-url";
            $hasDocs := $count($docsLink) > 0; )
form:
  - simple: true
    path: spec.channel
    name: Kyma Default Channel
    enum: $distinct($moduleTemplates().items.spec.channel)
    required: true
  - simple: true
    path: spec.modules
    widget: Modules
    name: Modules
    defaultExpanded: true
    options:
      name: >
        $distinct($moduleTemplates().items.metadata.labels."operator.kyma-project.io/module-name")
      moduleTemplates: $moduleTemplates().items
      betaAlert: '"alert.beta"'
general:
  resource:
    kind: Kyma
    group: operator.kyma-project.io
    version: v1beta1
  name: Kyma
  category: Kyma
  urlPath: kymas
  scope: namespace
  description: >-
    {{[Kyma Custom
    Resource](https://github.com/kyma-project/lifecycle-manager/blob/main/docs/technical-reference/api/kyma-cr.md)}}
    represents Kyma installation in a cluster.
list:
  - name: Channel
    widget: Badge
    source: spec.channel
  - name: State
    widget: Badge
    source: status.state
    tooltip: status.state
translations:
  en:
    alert.beta: >-
      CAUTION: The Service Level Agreements (SLAs) and Support obligations do
      not apply to Beta modules and functionalities. If Beta modules or
      functionalities directly or indirectly affect other modules, the Service
      Level Agreements and Support for these modules are limited to priority
      levels P3 (Medium) or P4 (Low). Thus, Beta releases are not intended for
      use in customer production environments.
injections:
  - name: Kyma Modules
    widget: Panel
    source: $
    visibility: $not($exists($item.status.modules))
    targets:
      - slot: details-top
        location: ClusterOverview
    order: 1
    children:
      - widget: MessagePanel
        source: $
        name: Kyma Modules Panel
        title: Seems that you don't have any Kyma Modules configured
        subtitle: >-
          Add at least one Kyma Module. Add your module under "kyma-system ->
          Kyma"
        children:
          - widget: Wizard
            name: Add Module
            wizard: module-wizard
            visibility: $not($exists($item.status.modules))
  - name: Kyma
    widget: Panel
    description: >-
      To check the Kyma Modularisation documentation go to the {{[Kyma
      Modularisation](https://help.sap.com/docs/btp/sap-business-technology-platform-internal/kyma-environment)}}.
    source: $
    visibility: $exists($item.status.modules)
    targets:
      - slot: details-top
        location: ClusterOverview
    order: 2
    children:
      - name: Name
        source: metadata.name
        widget: ResourceLink
        resource:
          name: metadata.name
          namespace: metadata.namespace
          kind: '"Kyma"'
      - name: State
        widget: Badge
        source: status.state
        description: 'status.state!="Ready" ? status.lastOperation.operation : ""'
      - widget: Alert
        severity: warning
        source: '"alert.beta"'
        visibility: >-
          ( $fullModuleTemplate := $filter($moduleTemplates().items,
          function($v) {
          $v.metadata.labels."operator.kyma-project.io/module-name" in
          $item.status.modules.name  and
          $v.metadata.labels."operator.kyma-project.io/beta" = "true" });
          $isBeta := $count($fullModuleTemplate) > 0; $isBeta; )
      - name: Installed Modules
        source: $sort($parent.status.modules[], function($l, $r) {$l.name < $r.name})
        widget: Table
        disablePadding: true
        extraHeaderContent:
          - name: ''
            source: '"Modify"'
            widget: ResourceButton
            resource:
              name: $parent.metadata.name
              namespace: $parent.metadata.namespace
              kind: '"Kyma"'
        children:
          - name: Name
            source: $
            widget: Plain
            children:
              - widget: ResourceLink
                visibility: $exists(resource.metadata.name)
                source: name
                resource:
                  name: resource.metadata.name
                  namespace: resource.metadata.namespace
                  kind: resource.kind
              - widget: Text
                visibility: $not($exists(resource.metadata.name))
                source: name
          - name: ''
            source: >-
              $filter($moduleTemplates().items, function($v)
              {$v.metadata.labels."operator.kyma-project.io/module-name" in name
              and
              $v.spec.channel=channel}).metadata.labels."operator.kyma-project.io/beta"
              = "true" ? "beta" : "-"
          - name: Namespace
            source: $parent.metadata.namespace
          - name: Channel
            source: channel
            widget: Text
          - name: Version
            source: version
            widget: Text
          - name: State
            widget: Badge
            source: state
            description: 'message ? message : ""'
          - name: Documentation
            widget: ExternalLink
            copyable: false
            source: '"Documentation"'
            link: >-
              $filter($moduleTemplates().items, function($v)
              {$v.metadata.labels."operator.kyma-project.io/module-name" in name
              and
              $v.spec.channel=channel}).metadata.annotations."operator.kyma-project.io/doc-url"
            visibility: >-
              ( $docsLink := $filter($moduleTemplates().items, function($v)
              {$v.metadata.labels."operator.kyma-project.io/module-name" in name
              and
              $v.spec.channel=channel}).metadata.annotations."operator.kyma-project.io/doc-url";
              $hasDocs := $count($docsLink) > 0; )
---
details:
  header:
    - source: status.conditions[-1].type
      name: Status
      widget: Badge
  body:
    - source: spec.parser
      widget: CodeViewer
      language: '''plaintext'''
form:
  - widget: CodeEditor
    path: spec.parser
    simple: true
    language: '''plaintext'''
general:
  resource:
    kind: LogParser
    group: telemetry.kyma-project.io
    version: v1alpha1
  name: Log Parsers
  category: Observability
  urlPath: logparsers
  scope: cluster
  description: >-
    {{"{{[LogParser](https://kyma-project.io/docs/kyma/latest/05-technical-reference/00-custom-resources/telemetry-02-logparser)}}"}}
    configures a custom Log Parser.
list:
  - source: status.conditions[-1].type
    name: Status
    widget: Badge
---
details:
  header:
    - source: >-
        $each(spec.output, function($v, $k) {$v.url.value or
        $v.url.valueFrom.secretKeyRef.name or $v.host.value or
        $v.host.valueFrom.secretKeyRef.name ? $k})
      placeholder: custom
      type: string
      name: Type
      isSelected: true
      widget: Text
    - name: Unsupported-Mode
      source: status.unsupportedMode
      widget: Badge
      highlights:
        positive:
          - 'false'
        negative:
          - 'true'
    - source: status.conditions[-1].type
      name: Status
      widget: Badge
  body:
    - widget: Panel
      name: Applications
      children:
        - widget: Panel
          name: Namespaces
          children:
            - name: Include
              widget: JoinedArray
              source: spec.input.application.namespaces.include
              separator: ', '
            - name: Exclude
              widget: JoinedArray
              source: spec.input.application.namespaces.exclude
              separator: ', '
            - name: System Namespaces
              source: spec.input.application.namespaces.system
        - widget: Panel
          name: Containers
          children:
            - name: Include
              widget: JoinedArray
              source: spec.input.application.containers.include
              separator: ', '
            - name: Exclude
              widget: JoinedArray
              source: spec.input.application.containers.exclude
              separator: ', '
        - widget: Panel
          name: Other Settings
          children:
            - name: Keep Annotations
              source: spec.input.application.keepAnnotations
            - name: Drop Labels
              source: spec.input.application.dropLabels
    - widget: Panel
      name: Output
      children:
        - name: Custom
          widget: CodeViewer
          language: '''plaintext'''
          source: spec.output.custom
          visibility: $exists(spec.output.custom)
        - name: Grafana-Loki
          widget: Panel
          visibility: $not($exists(spec.output.custom) or $exists(spec.output.http))
          children:
            - name: URL
              source: spec.output.`grafana-loki`.url.value
            - name: Labels
              widget: Labels
              source: spec.output.`grafana-loki`.labels
            - name: Remove keys
              widget: JoinedArray
              separator: ','
              source: spec.output.`grafana-loki`.removeKeys
        - name: HTTP
          widget: Panel
          visibility: $exists(spec.output.http)
          children:
            - name: Host
              widget: Panel
              children:
                - name: Value
                  source: spec.output.http.host.value
                  visibility: $exists(spec.output.http.host.value)
                - name: Value From Secret
                  widget: ResourceRefs
                  source: spec.output.http.host.valueFrom.secretKeyRef
                  kind: Secret
                  visibility: $exists(spec.output.http.host.valueFrom.secretKeyRef.name)
            - name: User
              widget: Panel
              children:
                - name: Value
                  source: spec.output.http.user.value
                  visibility: $exists(spec.output.http.user.value)
                - name: Value From Secret
                  widget: ResourceRefs
                  source: spec.output.http.user.valueFrom.secretKeyRef
                  kind: Secret
                  visibility: $exists(spec.output.http.user.valueFrom.secretKeyRef.name)
            - name: Password
              widget: Panel
              children:
                - name: Value
                  source: spec.output.http.password.value
                  visibility: $exists(spec.output.http.password.value)
                - name: Value From Secret
                  widget: ResourceRefs
                  source: spec.output.http.password.valueFrom.secretKeyRef
                  kind: Secret
                  visibility: >-
                    $exists(spec.output.http.password.valueFrom.secretKeyRef.name)
            - name: TLS Settings
              widget: Panel
              children:
                - name: Disabled
                  source: spec.output.http.tls.disabled
                  placeholder: 'false'
                - name: Skip certificate validation
                  source: spec.output.http.tls.skipCertificateValidation
                  placeholder: 'false'
            - name: Other Settings
              widget: Panel
              children:
                - name: Compression
                  source: spec.output.http.compress
                - name: De-dot
                  source: spec.output.http.dedot
                  placeholder: 'false'
                - name: Format
                  source: spec.output.http.format
                  placeholder: json
                - name: Port
                  source: spec.output.http.port
                  placeholder: '443'
                - name: URI
                  source: spec.output.http.uri
form:
  - path: spec.input
    widget: FormGroup
    defaultExpanded: true
    simple: true
    children:
      - name: Include Namespaces
        widget: SimpleList
        path: application.namespaces.include
        defaultExpanded: true
        inputInfo: Include container logs from selected namespaces
        children:
          - path: '[]'
            widget: Resource
            resource:
              scope: cluster
              kind: Namespace
              version: v1
      - name: Exclude Namespaces
        widget: SimpleList
        path: application.namespaces.exclude
        children:
          - path: '[]'
            widget: Resource
            resource:
              scope: cluster
              kind: Namespace
              version: v1
      - name: Include System Namespaces
        path: application.namespaces.system
      - name: Include Containers
        widget: SimpleList
        path: application.containers.include
      - name: Exclude Containers
        widget: SimpleList
        path: application.containers.exclude
      - name: Keep Annotations
        path: application.keepAnnotations
      - name: Drop Labels
        path: application.dropLabels
  - name: Filters
    widget: SimpleList
    path: spec.filters
    children:
      - widget: FormGroup
        path: '[]'
        children:
          - widget: CodeEditor
            path: custom
  - path: spec.output
    widget: FormGroup
    defaultExpanded: true
    simple: true
    children:
      - name: Custom
        path: custom
        widget: CodeEditor
        advanced: true
        inputInfo: >-
          Note: If you use a custom output, you put the LogPipeline in
          unsupported mode
          (https://kyma-project.io/docs/kyma/latest/01-overview/telemetry/telemetry-02-logs/#unsupported-mode)
      - name: HTTP
        path: http
        widget: FormGroup
        defaultExpanded: true
        simple: true
        children:
          - name: Host
            path: host
            widget: FormGroup
            children:
              - name: Value
                path: value
                widget: Text
              - name: Secret Reference
                path: valueFrom.secretKeyRef
                widget: ResourceRef
                resource:
                  kind: secret
                  version: v1
                children:
                  - path: key
                    enum: $keys($secret.data)
          - name: User
            path: user
            widget: FormGroup
            children:
              - name: Value
                path: value
                widget: Text
              - name: Secret Reference
                path: valueFrom.secretKeyRef
                widget: ResourceRef
                resource:
                  kind: secret
                  version: v1
                children:
                  - path: key
                    enum: $keys($secret.data)
          - name: Password
            path: password
            widget: FormGroup
            children:
              - name: Value
                path: value
                widget: Text
              - name: Secret Reference
                path: valueFrom.secretKeyRef
                widget: ResourceRef
                resource:
                  kind: secret
                  version: v1
                children:
                  - path: key
                    enum: $keys($secret.data)
          - name: TLS
            widget: FormGroup
            path: tls
            children:
              - name: Disabled
                path: disabled
              - name: Skip Certificate Validation
                path: skipCertificateValidation
          - name: URI
            path: uri
            widget: Text
          - name: Port
            path: port
            widget: Text
          - name: Compress
            path: compress
            widget: Text
          - name: Format
            path: format
            widget: Text
          - name: Dedot
            path: dedot
general:
  resource:
    kind: LogPipeline
    group: telemetry.kyma-project.io
    version: v1alpha1
  name: Log Pipelines
  category: Observability
  urlPath: logpipelines
  scope: cluster
  description: >-
    {{"{{[LogPipeline](https://kyma-project.io/docs/kyma/latest/05-technical-reference/00-custom-resources/telemetry-01-logpipeline)}}"}}
    configures log selection, filters, and outputs.
list:
  - source: >-
      $each(spec.output, function($v, $k) {$v.url.value or
      $v.url.valueFrom.secretKeyRef.name or $v.host.value or
      $v.host.valueFrom.secretKeyRef.name ? $k})
    placeholder: custom
    type: string
    name: Type
    isSelected: true
    widget: Text
  - name: Unsupported-Mode
    source: status.unsupportedMode
    widget: Badge
    highlights:
      positive:
        - 'false'
      negative:
        - 'true'
  - source: status.conditions[-1].type
    name: Status
    widget: Badge
---
details:
  header:
    - name: Version
      source: spec.descriptor.component.version
  body:
    - name: Summary
      widget: Panel
      visibility: $exists(metadata.annotations."operator.kyma-project.io/doc-url")
      children:
        - name: Channel
          source: spec.channel
          widget: Badge
        - name: Documentation
          widget: ExternalLink
          copyable: false
          source: '"Documentation"'
          link: metadata.annotations."operator.kyma-project.io/doc-url"
    - name: Data
      source: spec.data
      widget: CodeViewer
    - name: Descriptor
      source: spec.descriptor
      widget: CodeViewer
general:
  resource:
    kind: ModuleTemplate
    group: operator.kyma-project.io
    version: v1beta2
  name: Module Templates
  category: Kyma
  urlPath: moduletemplates
  scope: namespace
  features:
    actions:
      disableCreate: true
      disableEdit: true
  description: >-
    {{[ModuleTemplate Custom
    Resource](https://github.com/kyma-project/lifecycle-manager/blob/main/docs/technical-reference/api/moduleTemplate-cr.md)}}
    contains modules' metadata with links to their images and manifests.
list:
  - name: Channel
    source: spec.channel
    widget: Badge
  - name: Version
    source: spec.descriptor.component.version
---
dataSources:
  secret:
    resource:
      kind: Secret
      version: v1
    filter: $item.metadata.name = $root.spec.secretName
details:
  header:
    - source: 'status.state ? "error" : "ok"'
      highlights:
        positive:
          - ok
        negative:
          - error
      name: status
      widget: Badge
  body:
    - name: configuration
      widget: Panel
      children:
        - name: spec.redirectUris
          source: spec.redirectUris
          widget: Labels
          visibility: $exists(spec.redirectUris)
        - name: spec.postLogoutRedirectUris
          source: spec.postLogoutRedirectUris
          widget: Labels
          visibility: $exists(spec.postLogoutRedirectUris)
        - name: spec.clientName
          source: spec.clientName
          widget: Labels
          visibility: $exists(spec.clientName)
        - name: spec.responseTypes
          source: spec.responseTypes
          widget: Labels
        - name: spec.grantTypes
          source: spec.grantTypes
          widget: Labels
        - name: spec.scope
          source: spec.scope
          widget: Labels
        - name: spec.audience
          source: spec.audience
          widget: Labels
          visibility: $exists(spec.audience)
        - name: spec.secretName
          widget: ResourceLink
          source: spec.secretName
          resource:
            name: spec.secretName
            namespace: $root.metadata.namespace
            kind: '''Secret'''
        - name: spec.tokenEndpointAuthMethod
          source: spec.tokenEndpointAuthMethod
          widget: Labels
    - name: data
      widget: Panel
      source: $secret().items.data
      decodable: true
      children:
        - name: secret.client_id
          source: client_id
        - name: secret.client_secret
          source: client_secret
form:
  - path: metadata.name
    extraPaths:
      - spec.secretName
      - metadata.labels['app.kubernetes.io/name']
  - path: spec.responseTypes
    simple: true
    required: true
    widget: MultiCheckbox
    name: Response Types
    options:
      - key: id_token
        name: ID Token
      - key: code
        name: Code
      - key: token
        name: Token
  - path: spec.grantTypes
    simple: true
    required: true
    widget: MultiCheckbox
    options:
      - key: client_credentials
        name: Client Credentials
      - key: authorization_code
        name: Authorization Code
      - key: implicit
        name: Implicit
      - key: refresh_token
        name: Refresh Token
  - name: spec.clientName
    path: spec.clientName
    widget: Text
  - name: spec.secretName
    path: spec.secretName
    widget: Resource
    resource:
      kind: Secret
      scope: namespace
      version: v1
  - name: spec.tokenEndpointAuthMethod
    path: spec.tokenEndpointAuthMethod
    enum:
      - none
      - client_secret_basic
      - client_secret_post
      - private_key_jwt
  - name: spec.scope
    widget: Text
    simple: true
    path: spec.scope
    inputInfo: >-
      You can provide more then one Scope, but they have to be separated by a
      Space
  - widget: SimpleList
    name: spec.redirectUris
    defaultExpanded: true
    path: spec.redirectUris
    inputInfo: >-
      Input must consist of two parts, which are separated by ':' (e.g.
      'test:temp')
    children:
      - path: '[]'
  - name: spec.postLogoutRedirectUris
    path: spec.postLogoutRedirectUris
    widget: SimpleList
    defaultExpanded: true
    inputInfo: >-
      Input must consist of two parts, which are separated by ':' (e.g.
      'test:temp')
    children:
      - path: '[]'
  - path: spec.audience
    name: spec.audience
    widget: SimpleList
    defaultExpanded: true
    children:
      - path: '[]'
general:
  resource:
    kind: OAuth2Client
    group: hydra.ory.sh
    version: v1alpha1
  name: OAuth2 Clients
  category: Configuration
  urlPath: oauth2clients
  scope: namespace
  description: >-
    {{[OAuth2
    Clients](https://kyma-project.io/docs/kyma/latest/03-tutorials/00-api-exposure/apix-05-expose-and-secure-workload-oauth2#register-an-o-auth2-client-and-get-tokens)}}
    allows an application to acquire an OAuth2 token to access protected
    resources.
list:
  - name: spec.secretName
    widget: ResourceLink
    source: spec.secretName
    resource:
      name: spec.secretName
      namespace: $root.metadata.namespace
      kind: '''secret'''
  - source: 'status.state ? "error" : "ok"'
    highlights:
      positive:
        - ok
      negative:
        - error
    name: status
    widget: Badge
    description: status.message
presets:
  - name: template
    default: true
    value:
      spec:
        scope: ''
        secretName: ''
        tokenEndpointAuthMethod: client_secret_basic
        responseTypes: []
        grantTypes: []
translations:
  en:
    metadata.annotations: Annotations
    metadata.labels: Labels
    metadata.creationTimestamp: Created at
    status: Status
    spec.scope: Scope
    spec.responseTypes: Response Types
    spec.grantTypes: Grant Types
    spec.tokenEndpointAuthMethod: Token Endpoint Authentication Method
    spec.tokenEndpointAuthMethod.none: None
    spec.tokenEndpointAuthMethod.client_secret_basic: Client Secret/ Basic
    spec.tokenEndpointAuthMethod.client_secret_post: Client Secret/ POST
    spec.tokenEndpointAuthMethod.private_key_jwt: Private Key/ JWT
    spec.redirectUris: Redirect URIs
    spec.postLogoutRedirectUris: Post-Logout Redirect URIs
    spec.audience: Audience
    spec.secretName: Secret Name
    configuration: Configuration
    data: Data
    spec.clientName: Client Name
    secret.client_id: client_id
    secret.client_secret: client_secret
---
dataSources:
  podSelector:
    resource:
      kind: Pod
      version: v1
    filter: $matchByLabelSelector($item, $root.spec.workloadSelector.labels)
details:
  header:
    - source: spec.location
      name: spec.location
    - source: spec.resolution
      name: spec.resolution
  resourceGraph:
    colorVariant: 2
    dataSources:
      - source: podSelector
  body:
    - name: configuration
      widget: Panel
      source: spec
      visibility: >-
        $boolean($exists($value.hosts) or $exists($value.addresses) or
        $exists($value.subjectAltNames))
      children:
        - name: spec.hosts
          source: hosts
          widget: JoinedArray
          visibility: $exists($value)
        - name: spec.addresses
          source: addresses
          widget: JoinedArray
          visibility: $exists($value)
        - name: spec.exportTo
          source: exportTo
          widget: Labels
          placeholder: Exported to all Namespaces
        - name: spec.subjectAltNames
          source: subjectAltNames
          widget: JoinedArray
          visibility: $exists($value)
    - name: spec.ports
      widget: Table
      source: spec.ports
      visibility: $exists($value)
      children:
        - name: spec.ports.number
          source: number
          sort: true
        - name: spec.ports.protocol
          source: protocol
          sort: true
        - name: spec.ports.name
          source: name
          sort: true
        - name: spec.ports.targetPort
          source: targetPort
          sort: true
    - name: spec.endpoints
      widget: Table
      source: spec.endpoints
      visibility: $exists($value)
      children:
        - name: spec.endpoints.address
          source: address
          sort: true
        - name: spec.endpoints.ports
          source: ports
          widget: Labels
        - name: spec.endpoints.labels
          source: labels
          widget: Labels
        - name: spec.endpoints.network
          source: network
          sort: true
        - name: spec.endpoints.weight
          source: weight
        - name: spec.endpoints.serviceAccount
          source: serviceAccount
    - name: spec.workloadSelector
      widget: Panel
      source: spec.workloadSelector.labels
      visibility: $exists($value)
      disablePadding: true
      children:
        - source: $podSelector()
          widget: ResourceList
          disableCreate: true
      header:
        - widget: Labels
          source: spec.workloadSelector.labels
          visibility: $exists($value)
form:
  - path: spec.hosts
    name: spec.hosts
    widget: SimpleList
    simple: true
    required: true
    children:
      - path: '[]'
        simple: true
  - path: spec.addresses
    name: spec.addresses
    widget: SimpleList
    placeholder: placeholders.addreses
    children:
      - path: '[]'
  - path: spec.ports
    name: Ports
    widget: GenericList
    children:
      - path: '[].number'
        name: spec.ports.number
        required: true
      - path: '[].protocol'
        name: spec.ports.protocol
        required: true
        placeholder: placeholders.dropdown
        enum:
          - HTTP
          - HTTPS
          - GRPC
          - HTTP2
          - MONGO
          - TCP
          - TLS
      - path: '[].name'
        name: spec.ports.name
        required: true
      - path: '[].targetPort'
        name: spec.ports.targetPort
  - path: spec.location
    name: spec.location
    placeholder: placeholders.dropdown
  - path: spec.resolution
    name: spec.resolution
    placeholder: placeholders.dropdown
  - path: spec.endpoints
    name: spec.endpoints
    widget: GenericList
    children:
      - path: '[].address'
        name: spec.endpoints.address
      - path: '[].ports'
        name: spec.endpoints.ports
        widget: KeyValuePair
        value:
          type: number
      - path: '[].labels'
        name: spec.endpoints.labels
        widget: KeyValuePair
      - path: '[].network'
        name: spec.endpoints.network
      - path: '[].locality'
        name: spec.endpoints.locality
      - path: '[].weight'
        name: spec.endpoints.weight
      - path: '[].serviceAccount'
        name: spec.endpoints.serviceAccount
  - path: spec.workloadSelector.labels
    name: spec.workloadSelector
    widget: KeyValuePair
    defaultExpanded: true
  - path: spec.exportTo
    name: spec.exportTo
    widget: SimpleList
    children:
      - path: '[]'
  - path: spec.subjectAltNames
    name: spec.subjectAltNames
    widget: SimpleList
    children:
      - path: '[]'
general:
  resource:
    kind: ServiceEntry
    group: networking.istio.io
    version: v1beta1
  urlPath: serviceentries
  category: Istio
  name: Service Entries
  scope: namespace
  description: >-
    {{[ServiceEntry](https://istio.io/latest/docs/reference/config/networking/service-entry/)}}
    allows for adding more entries to the internal service registry of Istio.
list:
  - source: spec.location
    name: spec.location
    sort: true
  - source: spec.resolution
    name: spec.resolution
    sort: true
translations:
  en:
    configuration: Configuration
    spec.hosts: Hosts
    spec.addresses: Addresses
    spec.ports: Ports
    spec.ports.number: Number
    spec.ports.protocol: Protocol
    spec.ports.name: Name
    spec.ports.targetPort: Target Port
    spec.location: Location
    spec.resolution: Resolution
    spec.endpoints: Endpoints
    spec.endpoints.address: Address
    spec.endpoints.ports: Ports
    spec.endpoints.labels: Labels
    spec.endpoints.network: Network
    spec.endpoints.locality: Locality
    spec.endpoints.weight: Weight
    spec.endpoints.serviceAccount: Service Account
    spec.workloadSelector: Workload Selector
    spec.exportTo: Export To
    spec.subjectAltNames: Subject Alt Names
    placeholders.dropdown: Type or choose an option
    placeholders.addreses: For example, 127.0.0.1
---
details:
  header:
    - name: spec.controlledBy
      source: metadata.ownerReferences
      widget: ControlledBy
    - name: status
      source: status.conditions[$count(status.conditions)-1].reason
      description: >-
        $filter(status.conditions, function ($v, $i, $a) { $length($v.message) >
        0 })[0].message
      widget: Badge
      highlights:
        positive:
          - Provisioned
        informative:
          - NotProvisioned
        negative:
          - CreateFailed
  body:
    - name: bindingData
      widget: Panel
      children:
        - name: spec.serviceInstanceName
          source: spec.serviceInstanceName
          widget: ResourceLink
          resource:
            namespace: $root.metadata.namespace
            kind: '''ServiceInstance'''
            name: $root.spec.serviceInstanceName
        - name: spec.secretName
          source: spec.secretName
          widget: ResourceLink
          resource:
            namespace: $root.metadata.namespace
            kind: '''Secret'''
            name: $root.spec.secretName
        - name: spec.externalName
          source: spec.externalName
        - name: status.bindingID
          source: status.bindingID
        - name: status.instanceID
          source: status.instanceID
    - name: spec.parameters
      source: spec.parameters
      widget: CodeViewer
      visibility: '$exists($value) ? $boolean($value) : false'
    - name: spec.parametersFrom
      source: spec.parametersFrom
      widget: CodeViewer
      visibility: '$exists($value) ? $boolean($value) : false'
form:
  - simple: true
    path: spec.serviceInstanceName
    required: true
    widget: Resource
    resource:
      kind: ServiceInstance
      scope: namespace
      group: services.cloud.sap.com
      version: v1
  - path: spec.externalName
    placeholder: spec.externalNamePlaceholder
  - path: spec.secretName
  - path: spec.parameters
    widget: CodeEditor
    language: '''JSON'''
  - path: spec.parametersFrom
    widget: SimpleList
    defaultExpanded: true
    children:
      - path: '[].secretKeyRef.name'
        widget: Resource
        resource:
          kind: Secret
          version: v1
          scope: namespace
        provideVar: secret
        required: false
      - path: '[].secretKeyRef.key'
        enum: $keys($secret.data)
        required: false
        placeholder: chooseSecretKey
general:
  resource:
    kind: ServiceBinding
    group: services.cloud.sap.com
    version: v1
  name: Service Bindings
  category: Service Management
  urlPath: servicebindings
  scope: namespace
  description: >-
    {{[BTP Service
    Binding](https://github.com/SAP/sap-btp-service-operator#step-2-create-a-service-binding)}}
    provides access details for an existing service instance.
list:
  - name: spec.controlledBy
    source: metadata.ownerReferences
    widget: ControlledBy
  - name: spec.serviceInstanceName
    source: spec.serviceInstanceName
    widget: ResourceLink
    resource:
      namespace: $root.metadata.namespace
      kind: '''ServiceInstance'''
      name: $root.spec.serviceInstanceName
  - name: spec.externalName
    source: spec.externalName
  - name: status
    source: status.conditions[$count(status.conditions)-1].reason
    description: >-
      $filter(status.conditions, function ($v, $i, $a) { $length($v.message) > 0
      })[0].message
    highlights:
      positive:
        - Provisioned
      informative:
        - NotProvisioned
      negative:
        - CreateFailed
    widget: Badge
translations:
  en:
    metadata.annotations: Annotations
    metadata.labels: Labels
    metadata.creationTimestamp: Created at
    status: Status
    status.bindingID: Binding ID
    status.instanceID: InstanceID
    spec.secretName: Secret Name
    spec.externalName: External Name
    spec.externalNamePlaceholder: Defaults to the Service Binding name if empty
    spec.serviceInstanceName: Service Instance Name
    spec.controlledBy: Controlled By
    spec.parameters: Parameters
    spec.parametersFrom: Parameters from Secrets
    chooseSecretKey: Choose Secret Key
    bindingData: Binding Data
---
dataSources:
  myServiceBindings:
    resource:
      kind: ServiceBinding
      group: services.cloud.sap.com
      version: v1
    filter: $item.spec.serviceInstanceName = $root.metadata.name
details:
  header:
    - name: status
      source: status.conditions[$count(status.conditions)-1].reason
      description: >-
        $filter(status.conditions, function ($v, $i, $a) { $length($v.message) >
        0 })[0].message
      widget: Badge
      highlights:
        positive:
          - Provisioned
        informative:
          - NotProvisioned
        negative:
          - CreateFailed
  body:
    - name: serviceinstancedata
      widget: Panel
      children:
        - name: spec.serviceOfferingName
          source: spec.serviceOfferingName
        - name: spec.servicePlanName
          source: spec.servicePlanName
        - name: spec.externalName
          source: spec.externalName
        - name: status.instanceID
          source: status.instanceID
    - name: BTP Service Binding
      source: $myServiceBindings()
      widget: ResourceList
    - name: spec.parameters
      source: spec.parameters
      widget: CodeViewer
      visibility: '$exists($value) ? $boolean($value) : false'
form:
  - simple: true
    path: spec.serviceOfferingName
    required: true
  - simple: true
    path: spec.servicePlanName
    required: true
    placeholder: spec.servicePlanNamePlaceholder
  - path: spec.externalName
    placeholder: spec.externalNamePlaceholder
  - path: spec.parameters
    widget: CodeEditor
    language: '''JSON'''
general:
  resource:
    kind: ServiceInstance
    group: services.cloud.sap.com
    version: v1
  name: Service Instances
  category: Service Management
  urlPath: serviceinstances
  scope: namespace
  description: >-
    {{[BTP Service
    Instance](https://github.com/SAP/sap-btp-service-operator#step-1-create-a-service-instance)}}
    makes the functionality of a service available for consumption.
list:
  - name: spec.serviceOfferingName
    source: spec.serviceOfferingName
  - name: spec.servicePlanName
    source: spec.servicePlanName
  - name: spec.externalName
    source: spec.externalName
  - name: status
    source: status.conditions[$count(status.conditions)-1].reason
    description: >-
      $filter(status.conditions, function ($v, $i, $a) { $length($v.message) > 0
      })[0].message
    widget: Badge
    highlights:
      positive:
        - Provisioned
      informative:
        - NotProvisioned
      negative:
        - CreateFailed
translations:
  en:
    metadata.annotations: Annotations
    metadata.labels: Labels
    metadata.creationTimestamp: Created at
    status: Status
    spec.externalName: External Name
    spec.externalNamePlaceholder: Defaults to the instance name if empty
    spec.servicePlanName: Plan Name
    spec.servicePlanNamePlaceholder: The plan name to use for the Service Instance
    spec.serviceOfferingName: Offering Name
    spec.parameters: Instance Parameters
    status.instanceID: Instance ID
    serviceinstancedata: Service Instance Data
---
details:
  header:
    - name: Controlled by
      source: metadata.ownerReferences
      widget: ControlledBy
    - name: Service Type
      source: spec.type
    - name: Cluster IP
      source: spec.clusterIP
    - name: Ports
      source: >-
        $count(spec.ports) ? $map(spec.ports, function($value) {$value.port =
        $value.targetPort ? [$string($value.port), '/',
        $string($value.protocol)] ~> $join('') : [ $string($value.name), ' (',
        $string($value.port), ') --> (', $string($value.targetPort), ')'] ~>
        $join('') }) ~> $join(', ')  : '-'
    - name: External IPs
      source: >-
        $count(status.loadBalancer.ingress) ? $map(status.loadBalancer.ingress,
        function($value) {$value.ip ? $value.ip : $value.hostname}) ~> $join(',
        '): ($count($item.spec.externalIPs) ? $item.spec.externalIPs ~> $join(',
        '): '-')
  body:
    - widget: ResourceList
      source: $subscriptions()
      name: Subscriptions
      disableCreate: true
      children:
        - source: metadata.name
          name: Name
          sort: 'true'
          widget: ResourceLink
          resource:
            name: metadata.name
            namespace: $root.metadata.namespace
            kind: kind
        - source: spec.filter.filters[0].eventType.value
          name: Event Types
          sort:
            default: true
            compareFunction: $compareStrings($first, $second)
        - source: status.ready
          name: Ready
          sort: true
          widget: Badge
          highlights:
            positive:
              - 'true'
            negative:
              - 'false'
    - widget: ResourceList
      source: $apirules()
      name: API Rules
      disableCreate: true
      sort:
        - source: spec.service.host
          default: true
        - source: spec.service.port
          compareFunction: $first - $second
    - widget: Panel
      name: Selector
      disablePadding: true
      children:
        - source: $podSelector()
          widget: ResourceList
          disableCreate: true
          visibility: $exists($root.spec.selector) and $boolean($root.spec.selector)
        - source: spec.selector
          widget: Panel
          name: Matches all Pods in the Namespace
          visibility: $not($exists($value)) or $not($boolean($value))
      header:
        - source: spec.selector
          widget: Labels
          name: Selector
          visibility: $exists($value) and $boolean($value)
form:
  - widget: KeyValuePair
    path: spec.selector
    simple: true
    name: Selectors
    defaultExpanded: true
  - path: spec.type
    name: Type
    placeholder: Enter Type
  - widget: GenericList
    path: spec.ports
    simple: true
    children:
      - path: '[]'
        simple: true
        children:
          - path: name
            simple: true
            name: Ports Name
            placeholder: Enter Ports Name
            widget: Name
          - path: protocol
            simple: true
            name: Protocol
            placeholder: Enter Protocol
            widget: Text
            required: true
          - path: port
            simple: true
            name: Port
            placeholder: Enter Port
            required: true
          - path: targetPort
            simple: true
            name: Target Port
            placeholder: Enter Target Port
            widget: Text
            required: true
            inputInfo: >-
              Number or name of the port to access on the pods targeted by the
              service. Number must be in the range 1 to 65535.
          - path: nodePort
            simple: true
            name: Node Port
            visibility: $root.spec.type != 'ClusterIP'
            placeholder: Enter Node Port
          - path: appProtocol
            simple: true
            name: Application Protocol
            enum:
              - http
              - tcp
              - gRPC
            placeholder: Enter Application Protocol
    template:
      protocol: TCP
      port: 80
      targetPort: 9376
  - widget: SimpleList
    path: spec.ipFamilies
    name: IP Family
    enum:
      - IPv6
      - IPv4
    visibility: $root.spec.type != 'ExternalName'
    children:
      - path: '[]'
    placeholder: Enter IP Family
  - path: spec.ipFamilyPolicy
    name: IP Family Policy
    placeholder: Enter IP Family Policy
    enum:
      - SingleStack
      - PreferDualStack
      - RequireDualStack
    visibility: $root.spec.type != 'ExternalName'
  - widget: SimpleList
    path: spec.clusterIPs
    name: Cluster IPs
    defaultexpanded: true
    children:
      - path: '[]'
    placeholder: Enter IP addresses assigned to this service
    visibility: $root.spec.type != 'ExternalName'
  - path: spec.clusterIP
    name: Cluster IP
    placeholder: Enter IP address of the service
    visibility: $root.spec.type != 'ExternalName'
  - widget: SimpleList
    path: spec.externalIPs
    name: External IPs
    children:
      - path: '[]'
    placeholder: Enter external IP addresses assigned to this service
  - path: spec.sessionAffinity
    name: Session Affinity
    placeholder: Enter Session Affinity
  - path: spec.externalTrafficPolicy
    name: External Traffic Policy
    placeholder: Enter External Traffic Policy
    visibility: $root.spec.type = 'NodePort' or $root.spec.type = 'LoadBalancer'
  - path: spec.internalTrafficPolicy
    name: Internal Traffic Policy
    placeholder: Enter Internal Traffic Policy
  - widget: SimpleList
    path: spec.loadBalancerSourceRanges
    name: LoadBalancer Source Ranges
    visibility: $root.spec.type = 'LoadBalancer'
    children:
      - path: '[]'
    placeholder: Enter LoadBalancer source ranges
  - path: spec.loadBalancerClass
    name: LoadBalancer Class
    placeholder: Enter LoadBalancer Class
    visibility: $root.spec.type = 'LoadBalancer'
  - path: spec.externalName
    name: External Name
    placeholder: Enter external name
    visibility: $root.spec.type = 'ExternalName'
  - path: spec.loadBalancerIP
    name: LoadBalancer IP
    placeholder: Enter LoadBalancer IP
    visibility: $root.spec.type = 'LoadBalancer'
  - path: spec.healthCheckNodePort
    name: Health Check NodePort
    placeholder: Enter Health Check NodePort
    visibility: >-
      $root.spec.type = 'LoadBalancer' and $root.spec.externalTrafficPolicy =
      'Local'
  - path: spec.allocateLoadBalancerNodePorts
    name: Allocate LoadBalancer NodePorts
    visibility: $root.spec.type = 'LoadBalancer'
  - path: spec.publishNotReadyAddresses
    name: Publish Not Ready Addresses
  - path: spec.sessionAffinityConfig.clientIP.timeoutSeconds
    visibility: $root.spec.sessionAffinity = 'ClientIP'
    name: Timeout seconds
    placeholder: enter timeout seconds
    inputInfo: Default value is 10800(for 3 hours)
list:
  - name: Controlled By
    source: metadata.ownerReferences
    widget: ControlledBy
    kindOnly: true
  - name: Type
    source: spec.type
    sort:
      compareFunction: $compareStrings($second, $first)
  - name: Cluster IP
    source: spec.clusterIP
    sort: true
  - name: Ports
    source: >-
      $count(spec.ports) ? $map(spec.ports, function($value) {$value.port =
      $value.targetPort ? [$string($value.port), '/', $string($value.protocol)]
      ~> $join('') : [ $string($value.name), ' (', $string($value.port), ') -->
      (', $string($value.targetPort), ')'] ~> $join('') }) ~> $join(', ')  : '-'
  - name: External IPs
    source: >-
      $count(status.loadBalancer.ingress) ? $map(status.loadBalancer.ingress,
      function($value) {$value.ip ? $value.ip : $value.hostname}) ~> $join(',
      '): ($count($item.spec.externalIPs) ? $item.spec.externalIPs ~> $join(',
      '): '-')
dataSources:
  apirules:
    resource:
      kind: APIRule
      group: gateway.kyma-project.io
      version: v1alpha1
    filter: $item.spec.service.name = $root.metadata.name
  podSelector:
    resource:
      kind: Pod
      version: v1
    filter: $matchByLabelSelector($item, $root.spec.selector)
  subscriptions:
    resource:
      kind: Subscription
      group: eventing.kyma-project.io
      version: v1alpha1
    filter: >-
      $substringAfter($substringBefore($item.spec.sink, '.'), '://') =
      $root.metadata.name
general:
  resource:
    kind: Service
    version: v1
  urlPath: services
  scope: namespace
  name: Services
  category: Discovery and Network
  description: >-
    {{[Services](https://kubernetes.io/docs/concepts/services-networking/service/)}}
     enables access to an application running on a set of Pods.
presets:
  - name: template
    default: true
    value:
      spec:
        selector:
          app: ''
        type: ClusterIP
---
dataSources:
  podSelector:
    resource:
      kind: Pod
      version: v1
    filter: $matchByLabelSelector($item, $root.spec.workloadSelector.labels)
details:
  header:
    - name: Outbound Traffic Policy Mode
      source: spec.outboundTrafficPolicy.mode
  body:
    - widget: Table
      source: spec.egress
      name: Egress
      visibility: $exists($value)
      children:
        - source: port
          name: Port
          widget: Panel
          visibility: $exists($value)
          children:
            - source: number
              name: Number
            - source: name
              name: Name
            - source: protocol
              name: Protocol
            - source: targetPoint
              name: Target Point
        - source: bind
          name: Bind
        - source: captureMode
          name: Capture Mode
        - source: hosts
          name: Hosts
          widget: Labels
    - widget: Table
      source: spec.ingress
      name: Ingress
      visibility: $exists($value)
      children:
        - source: port
          name: Port
          widget: Panel
          visibility: $exists($value)
          children:
            - source: number
              name: Number
            - source: name
              name: Name
            - source: protocol
              name: Protocol
            - source: targetPoint
              name: Target Point
            - source: $parent.tls.mode
              name: TLS Mode
        - source: bind
          name: Bind
        - source: captureMode
          name: Capture Mode
        - source: defaultEndpoint
          name: Default Endpoint
          widget: Labels
    - widget: Panel
      name: Workload Selector
      disablePadding: true
      children:
        - source: $podSelector()
          widget: ResourceList
          disableCreate: true
          isCompact: true
          visibility: >-
            $exists($root.spec.workloadSelector.labels) and
            $boolean($root.spec.workloadSelector.labels)
        - source: spec.workloadSelector.labels
          widget: Panel
          name: Matches all Pods in the Namespace
          visibility: $not($exists($value)) or $not($boolean($value))
      header:
        - source: spec.workloadSelector.labels
          widget: Labels
          name: Workload Selector
          visibility: $exists($value) and $boolean($value)
  resourceGraph:
    depth: 1
    colorVariant: 1
    dataSources:
      - source: podSelector
form:
  - path: spec.workloadSelector.labels
    name: Workload Selector
    widget: KeyValuePair
  - widget: FormGroup
    path: spec.egress[].port
    simple: true
    children:
      - path: number
        simple: true
        placeholder: Enter the port number
      - path: name
        widget: Name
        inputInfo: null
        simple: true
      - path: protocol
        simple: true
        enum:
          - HTTP
          - HTTPS
          - HTTP2
          - GRPC
          - MONGO
          - TCP
          - TLS
        placeholder: Type or choose an option
      - path: targetPort
        simple: true
        placeholder: Enter the target port number
  - path: spec.egress[].bind
    placeholder: Enter the IPv4 or IPv6
    simple: true
  - path: spec.egress[].captureMode
    simple: true
    enum:
      - DEFAULT
      - IPTABLES
      - NONE
    placeholder: Type or choose an option
  - widget: SimpleList
    path: spec.egress[].hosts
    required: true
    simple: true
    placeholder: For example, *.api.mydomain.com
    children:
      - path: '[]'
        simple: true
  - widget: FormGroup
    path: spec.ingress[].port
    required: true
    simple: true
    children:
      - path: number
        simple: true
        required: true
        placeholder: Enter the port number
      - path: name
        widget: Name
        inputInfo: null
        simple: true
        required: true
      - path: protocol
        simple: true
        enum:
          - HTTP
          - HTTPS
          - HTTP2
          - GRPC
          - MONGO
          - TCP
          - TLS
        required: true
        placeholder: Type or choose an option
      - path: targetPort
        simple: true
        placeholder: Enter the target port number
  - path: spec.ingress[].bind
    placeholder: Enter the IPv4 or IPv6
    simple: true
  - path: spec.ingress[].captureMode
    enum:
      - DEFAULT
      - IPTABLES
      - NONE
    simple: true
    placeholder: Type or choose an option
  - path: spec.ingress[].defaultEndpoint
    placeholder: For example, 127.0.0.1:PORT
    required: true
    simple: true
  - widget: FormGroup
    simple: true
    path: spec.ingress[].tls
    name: TLS
    visibility: $item.port.protocol = 'HTTPS'
    children:
      - path: mode
        name: TLS Mode
        simple: true
        visibility: $item.port.protocol = 'HTTPS'
        required: true
        placeholder: Type or choose an option
      - path: serverCertificate
        name: Server Certificate
        simple: true
        visibility: $item.port.protocol = 'HTTPS'
        placeholder: Enter the certificate path
      - path: privateKey
        name: Private Key
        simple: true
        visibility: $item.port.protocol = 'HTTPS'
        placeholder: Enter the private key path
      - path: caCertificates
        name: CA Certificate
        simple: true
        visibility: $item.port.protocol = 'HTTPS'
        placeholder: Enter the CA certificates path
  - widget: FormGroup
    path: spec.outboundTrafficPolicy
    name: Outbound Traffic Policy
    children:
      - path: mode
        name: Outbound Traffic Policy Mode
        enum:
          - REGISTRY_ONLY
          - ALLOW_ANY
        placeholder: Type or choose an option
general:
  resource:
    kind: Sidecar
    group: networking.istio.io
    version: v1beta1
  urlPath: sidecars
  category: Istio
  name: Sidecars
  scope: namespace
  description: >-
    {{[Sidecar](https://istio.io/latest/docs/reference/config/networking/sidecar/)}}
    manages the incoming and outgoing communication in a workload it is attached
    to.
list:
  - source: spec.outboundTrafficPolicy.mode
    name: Outbound Traffic Policy Mode
  - source: spec.workloadSelector.labels
    name: Workload Selector Labels
    widget: Labels
---
dataSources:
  relatedGateways:
    resource:
      kind: Gateway
      group: networking.istio.io
      version: v1beta1
      namespace: null
    filter: >-
      $filter($root.spec.gateways, function($g){$contains($g,'/') ?
      ($substringBefore($g,'/') = $item.metadata.namespace and
      $substringAfter($g, '/') = $item.metadata.name) : ($substringBefore($g,
      '.') = $item.metadata.name and $substringBefore($substringAfter($g, '.'),
      '.') = $item.metadata.namespace) }) 
  relatedServices:
    resource:
      kind: Service
      version: v1
      namespace: null
    filter: >-
      $filter($root.spec.http.route, function($r) { $filter($r.destination.host,
      function($h){($substringBefore($h, '.') = $item.metadata.name) and
      ($split($substringAfter($h, '.'),'.')[0] = $item.metadata.namespace)} ) })
details:
  resourceGraph:
    dataSources:
      - source: relatedGateways
      - source: relatedServices
  body:
    - widget: Table
      source: spec.gateways[]
      name: gateways
      visibility: $exists($value)
      children:
        - source: $item
          name: t-name
          widget: ResourceLink
          resource:
            kind: '"Gateway"'
            name: >-
              $contains($item,'/') ? $substringAfter($item, '/') :
              $substringBefore($item, '.')
            namespace: >-
              $contains($item,'/') ? $substringBefore($item, '/'):
              $substringBefore($substringAfter($item, '.'), '.') 
    - name: summary
      widget: Panel
      source: spec
      visibility: $boolean($exists($value.exportTo) or $exists($value.hosts))
      children:
        - name: exportTo
          source: exportTo
          widget: Labels
          visibility: $exists($value)
        - name: hosts
          source: hosts
          widget: JoinedArray
          visibility: $exists($value)
    - widget: Table
      source: spec.http
      name: http
      visibility: $exists($value)
      children:
        - source: name
          name: t-name
        - source: timeout
          name: timeout
        - source: mirrorPercentage.value
          name: mirrorPercentage
      collapsible:
        - source: match
          name: matches
          widget: Table
          visibility: $exists($value)
          children:
            - source: name
              name: t-name
            - source: uri
              name: uri
              widget: Labels
            - source: scheme
              name: scheme
              widget: Labels
            - source: method
              name: method
              widget: Labels
            - source: authority
              name: authority
              widget: Labels
            - source: headers
              name: headers
            - source: port
              name: port
            - source: sourceLabels
              name: sourceLabels
              widget: Labels
            - source: gateways
              name: gateways
              widget: JoinedArray
            - source: queryParams
              name: queryParams
            - source: ignoreUriCase
              name: ignoreUriCase
            - source: withoutHeaders
              name: withoutHeaders
            - source: sourceNamespace
              name: sourceNamespace
            - source: statPrefix
              name: statPrefix
        - source: route
          name: routes
          widget: Table
          visibility: $exists($value)
          children:
            - source: destination
              name: destination
              widget: Panel
              visibility: $exists($value)
              children:
                - source: host
                  name: host
                - source: subset
                  name: subset
                - source: port.number
                  name: port.number
            - source: weight
              name: weight
            - source: headers
              name: headers
              widget: Panel
              visibility: $exists($value)
              children:
                - source: request
                  name: request
                  widget: Panel
                  visibility: $exists($value)
                  children:
                    - source: set
                      name: set
                      widget: Labels
                    - source: add
                      name: add
                      widget: Labels
                    - source: remove
                      name: remove
                      widget: JoinedArray
                - source: response
                  name: response
                  widget: Panel
                  visibility: $exists($value)
                  children:
                    - source: set
                      name: set
                      widget: Labels
                    - source: add
                      name: add
                      widget: Labels
                    - source: remove
                      name: remove
                      widget: JoinedArray
        - source: redirect
          name: redirect
          widget: Panel
          visibility: $exists($value)
          children:
            - source: uri
              name: uri
            - source: authority
              name: authority
            - source: port
              name: port
            - source: derivePort
              name: derivePort
              widget: Labels
            - source: scheme
              name: scheme
            - source: redirectCode
              name: redirectCode
        - source: directResponse
          name: directResponse
          widget: Panel
          visibility: $exists($value)
          children:
            - source: status
              name: status
            - source: body
              name: body
              widget: Panel
              visibility: $exists($value)
              children:
                - source: string
                  name: string
                - source: bytes
                  name: bytes
        - source: delegate
          name: delegate
          widget: Panel
          visibility: $exists($value)
          children:
            - source: name
              name: t-name
            - source: namespace
              name: namespace
        - source: rewrite
          name: rewrite
          widget: Panel
          visibility: $exists($value)
          children:
            - source: uri
              name: uri
            - source: authority
              name: authority
        - source: retries
          name: retries
          widget: Panel
          visibility: $exists($value)
          children:
            - source: attempts
              name: attempts
            - source: perTryTimeout
              name: perTryTimeout
            - source: retryOn
              name: retryOn
            - source: retryRemoteLocalities
              name: retryRemoteLocalities
        - source: fault
          name: fault
          widget: Panel
          visibility: $exists($value)
          children:
            - source: delay
              name: delay
              widget: Panel
              visibility: $exists($value)
              children:
                - source: fixedDelay
                  name: fixedDelay
                - source: percentage.value
                  name: percentage.value
                - source: percent
                  name: percent
            - source: abort
              name: Abort
              widget: Panel
              visibility: $exists($value)
              children:
                - source: httpStatus
                  name: httpStatus
                - source: percentage.value
                  name: percentage.value
        - source: mirror
          name: Mirror
          widget: Panel
          visibility: $exists($value)
          children:
            - source: host
              name: host
            - source: subset
              name: subset
            - source: port.number
              name: port.number
        - source: corsPolicy
          name: corsPolicy
          widget: Panel
          visibility: $exists($value)
          children:
            - source: allowOrigins
              name: allowOrigins
            - source: allowMethods
              name: allowMethods
              widget: JoinedArray
            - source: allowHeaders
              name: allowHeaders
              widget: JoinedArray
            - source: exposeHeaders
              name: exposeHeaders
              widget: JoinedArray
            - source: maxAge
              name: maxAge
            - source: allowCredentials
              name: allowCredentials
        - source: headers
          name: headers
          widget: Panel
          visibility: $exists($value)
          children:
            - source: request
              name: request
              widget: Panel
              visibility: $exists($value)
              children:
                - source: set
                  name: set
                  widget: Labels
                - source: add
                  name: add
                  widget: Labels
                - source: remove
                  name: remove
                  widget: JoinedArray
            - source: response
              name: response
              widget: Panel
              visibility: $exists($value)
              children:
                - source: set
                  name: set
                  widget: Labels
                - source: add
                  name: add
                  widget: Labels
                - source: remove
                  name: remove
                  widget: JoinedArray
    - widget: Table
      source: spec.tcp
      name: tcp
      visibility: $exists($value)
      children:
        - source: match
          name: matches
          widget: Table
          visibility: $exists($value)
          children:
            - source: destinationSubnets
              name: destinationSubnets
              widget: JoinedArray
            - source: port
              name: port
            - source: sourceLabels
              name: sourceLabels
              widget: Labels
            - source: gateways
              name: gateways
              widget: JoinedArray
            - source: sourceNamespace
              name: sourceNamespace
      collapsible:
        - source: route
          name: routes
          widget: Table
          visibility: $exists($value)
          children:
            - source: destination
              name: destination
              widget: Panel
              visibility: $exists($value)
              children:
                - source: host
                  name: host
                - source: subset
                  name: subset
                - source: port.number
                  name: port
            - source: weight
              name: weight
    - widget: Table
      source: spec.tls
      name: tls
      visibility: $exists($value)
      children:
        - source: match
          name: matches
          widget: Table
          visibility: $exists($value)
          children:
            - source: sniHosts
              name: sniHosts
              widget: JoinedArray
            - source: destinationSubnets
              name: destinationSubnets
              widget: JoinedArray
            - source: port
              name: port
            - source: sourceLabels
              name: sourceLabels
              widget: Labels
            - source: gateways
              name: gateways
              widget: JoinedArray
            - source: sourceNamespace
              name: sourceNamespace
      collapsible:
        - source: route
          name: routes
          widget: Table
          visibility: $exists($value)
          children:
            - source: destination
              name: destination
              widget: Panel
              children:
                - source: host
                  name: host
                - source: subset
                  name: subset
                - source: port.number
                  name: port.number
            - source: weight
              name: weight
form:
  - path: spec.tls
    widget: GenericList
    name: tls
    children:
      - path: '[].match'
        widget: GenericList
        name: matches
        children:
          - path: '[].sniHosts'
            widget: SimpleList
            name: sniHosts
            children:
              - path: '[]'
          - path: '[].sourceNamespace'
            name: sourceNamespace
          - path: '[].port'
            name: port
          - path: '[].destinationSubnets'
            widget: SimpleList
            name: destinationSubnets
            children:
              - path: '[]'
          - path: '[].sourceLabels'
            widget: KeyValuePair
            name: sourceLabels
          - path: '[].gateways'
            widget: SimpleList
            name: gateways
            children:
              - path: '[]'
      - path: '[].route'
        widget: GenericList
        name: routes
        children:
          - path: '[].destination'
            widget: FormGroup
            name: destination
            children:
              - path: host
                name: host
              - path: subset
                name: subset
              - path: port.number
                name: port.number
          - path: '[].weight'
            name: weight
  - path: spec.tcp
    name: tcp
    widget: GenericList
    children:
      - path: '[].match'
        name: matches
        children:
          - path: '[].sourceNamespace'
            name: sourceNamespace
          - path: '[].port'
            name: port
          - path: '[].sniHosts'
            widget: SimpleList
            name: sniHosts
            children:
              - path: '[]'
          - path: '[].destinationSubnets'
            widget: SimpleList
            name: destinationSubnets
            children:
              - path: '[]'
          - path: '[].sourceLabels'
            name: sourceLabels
            widget: KeyValuePair
          - path: '[].gateways'
            widget: SimpleList
            name: gateways
            children:
              - path: '[]'
      - path: '[].route'
        name: routes
        children:
          - path: '[].destination'
            widget: FormGroup
            name: destination
            children:
              - path: host
                name: host
              - path: subset
                name: subset
              - path: port.number
                name: port.number
          - path: '[].weight'
            name: weight
  - path: spec.http
    simple: true
    name: http
    widget: GenericList
    children:
      - path: '[].match'
        simple: true
        name: matches
        widget: GenericList
        children:
          - path: '[].name'
            simple: true
            name: t-name
          - path: '[].uri'
            simple: true
            name: uri
            widget: KeyValuePair
            keyEnum:
              - prefix
              - exact
              - regex
          - path: '[].scheme'
            simple: true
            name: scheme
            widget: KeyValuePair
            keyEnum:
              - prefix
              - exact
              - regex
          - path: '[].method'
            simple: true
            name: method
            widget: KeyValuePair
            keyEnum:
              - prefix
              - exact
              - regex
          - path: '[].authority'
            simple: true
            name: authority
            widget: KeyValuePair
            keyEnum:
              - prefix
              - exact
              - regex
          - path: '[].headers'
            simple: true
            name: headers
            defaultExpanded: true
            widget: KeyValuePair
            value:
              type: object
              keyEnum:
                - prefix
                - exact
                - regex
          - path: '[].port'
            simple: true
            name: port
          - path: '[].sourceLabels'
            simple: true
            name: sourceLabels
            widget: KeyValuePair
          - path: '[].gateways'
            simple: true
            name: gateways
            widget: SimpleList
            children:
              - path: '[]'
          - path: '[].queryParams'
            simple: true
            name: queryParams
            widget: KeyValuePair
            value:
              type: object
              keyEnum:
                - prefix
                - exact
                - regex
          - path: '[].ignoreUriCase'
            simple: true
            name: ignoreUriCase
          - path: '[].withoutHeaders'
            simple: true
            name: withoutHeaders
            widget: KeyValuePair
            value:
              type: object
              keyEnum:
                - prefix
                - exact
                - regex
          - path: '[].sourceNamespace'
            simple: true
            name: sourceNamespace
          - path: '[].statPrefix'
            simple: true
            name: statPrefix
      - path: '[].route'
        simple: true
        name: routes
        children:
          - path: '[].destination'
            simple: true
            name: destination
            widget: FormGroup
            children:
              - path: host
                name: host
              - path: subset
                name: subset
              - path: port.number
                name: port.number
          - path: '[].weight'
            simple: true
            name: weight
          - path: '[].headers'
            simple: true
            name: headers
            widget: FormGroup
            children:
              - path: response
                simple: true
                name: response
                widget: FormGroup
                children:
                  - path: set
                    simple: true
                    name: set
                    widget: KeyValuePair
                  - path: add
                    simple: true
                    name: add
                    widget: KeyValuePair
                  - path: remove
                    simple: true
                    name: remove
                    widget: SimpleList
                    children:
                      - path: '[]'
                        simple: true
              - path: request
                simple: true
                name: request
                widget: FormGroup
                children:
                  - path: set
                    simple: true
                    name: set
                    widget: KeyValuePair
                  - path: add
                    simple: true
                    name: add
                    widget: KeyValuePair
                  - path: remove
                    simple: true
                    name: remove
                    widget: SimpleList
                    children:
                      - path: '[]'
                        simple: true
      - path: '[].redirect'
        simple: true
        name: redirect
        widget: FormGroup
        children:
          - path: uri
            simple: true
            name: uri
          - path: authority
            simple: true
            name: authority
          - path: port
            simple: true
            name: port
          - path: derivePort
            simple: true
            name: derivePort
          - path: scheme
            simple: true
            name: scheme
          - path: redirectCode
            simple: true
            name: redirectCode
      - path: '[].directResponse'
        simple: true
        name: directResponse
        widget: FormGroup
        children:
          - path: status
            simple: true
            name: status
          - path: body
            simple: true
            name: body
            widget: FormGroup
            children:
              - path: string
                simple: true
                name: string
              - path: bytes
                simple: true
                name: bytes
      - path: '[].delegate'
        simple: true
        name: delegate
        widget: FormGroup
        children:
          - path: name
            simple: true
            name: name
          - path: namespace
            simple: true
            name: namespace
      - path: '[].rewrite'
        simple: true
        name: rewrite
        widget: FormGroup
        children:
          - path: uri
            simple: true
            name: uri
          - path: authority
            simple: true
            name: authority
      - path: '[].timeout'
        simple: true
        name: timeout
      - path: '[].retries'
        simple: true
        name: retries
        widget: FormGroup
        children:
          - path: attempts
            simple: true
            name: attempts
          - path: perTryTimeout
            simple: true
            name: perTryTimeout
          - path: retryOn
            simple: true
            name: retryOn
          - path: retryRemoteLocalities
            simple: true
            name: retryRemoteLocalities
      - path: '[].fault'
        simple: true
        name: fault
        widget: FormGroup
        children:
          - path: delay
            simple: true
            name: delay
            widget: FormGroup
            children:
              - path: fixedDelay
                simple: true
                name: fixedDelay
              - path: percentage.value
                simple: true
                name: percentage.value
              - path: percent
                simple: true
                name: percent
          - path: abort
            simple: true
            name: abort
            widget: FormGroup
            children:
              - path: httpStatus
                simple: true
                name: httpStatus
              - path: grpcStatus
                simple: true
                name: grpcStatus
              - path: percentage.value
                simple: true
                name: percentage.value
      - path: '[].mirror'
        simple: true
        name: mirror
        widget: FormGroup
        children:
          - path: host
            simple: true
            name: host
          - path: subset
            simple: true
            name: subset
          - path: port.number
            simple: true
            name: port.number
      - path: '[].mirrorPercentage.value'
        simple: true
        name: mirrorPercentage
      - path: '[].corsPolicy'
        simple: true
        name: corsPolicy
        widget: FormGroup
        children:
          - path: allowCredentials
            simple: true
            name: allowCredentials
            type: boolean
          - path: allowMethods
            simple: true
            name: allowMethods
            widget: SimpleList
            placeholder: allowMethods.placeholder
            children:
              - path: '[]'
                simple: true
          - path: allowHeaders
            simple: true
            name: allowHeaders
            widget: SimpleList
            children:
              - path: '[]'
                simple: true
          - path: exposeHeaders
            simple: true
            name: exposeHeaders
            widget: SimpleList
            children:
              - path: '[]'
                simple: true
          - path: maxAge
            simple: true
            name: maxAge
            placeholder: maxAge.placeholder
      - path: '[].headers'
        simple: true
        name: headers
        widget: FormGroup
        children:
          - path: response
            simple: true
            name: response
            widget: FormGroup
            children:
              - path: set
                simple: true
                name: set
                widget: KeyValuePair
              - path: add
                simple: true
                name: add
                widget: KeyValuePair
              - path: remove
                simple: true
                name: remove
                widget: SimpleList
                children:
                  - path: '[]'
                    simple: true
          - path: request
            simple: true
            name: request
            widget: FormGroup
            children:
              - path: set
                simple: true
                name: set
                widget: KeyValuePair
              - path: add
                simple: true
                name: add
                widget: KeyValuePair
              - path: remove
                simple: true
                name: remove
                widget: SimpleList
                children:
                  - path: '[]'
                    simple: true
  - path: spec.hosts
    name: hosts
    widget: SimpleList
    children:
      - path: '[]'
  - path: spec.gateways
    name: gateways
    widget: SimpleList
    children:
      - path: '[]'
  - path: spec.exportTo
    name: exportTo
    widget: SimpleList
    children:
      - path: '[]'
general:
  resource:
    kind: VirtualService
    group: networking.istio.io
    version: v1beta1
  urlPath: virtualservices
  category: Istio
  name: Virtual Services
  scope: namespace
  description: >-
    {{[VirtualService](https://istio.io/latest/docs/reference/config/networking/virtual-service/)}}
    describes a configuration that affects traffic routing. .
list:
  - name: hosts
    source: spec.hosts
    widget: JoinedArray
  - name: gateways
    source: spec.gateways
    widget: JoinedArray
translations:
  en:
    t-name: Name
    gateways: Gateways
    hosts: Hosts
    exportTo: Export to
    summary: Summary
    http: HTTP
    tls: TLS
    tcp: TCP
    mirror: Mirror
    mirrorPercentage: Mirror Percentage
    timeout: Timeout
    matches: Matches
    uri: URI
    scheme: Scheme
    method: Method
    authority: Authority
    headers: Headers
    port: Port
    sourceLabels: Source Labels
    queryParams: Query Params
    ignoreUriCase: Ignore URI Case
    withoutHeaders: Without Headers
    sourceNamespace: Source Namespace
    statPrefix: Stat Prefix
    routes: Routes
    destination: Destination
    host: Host
    subset: Subset
    port.number: Port Number
    weight: Weight
    request: Request
    response: Response
    set: Set
    add: Add
    remove: Remove
    redirect: Redirect
    derivePort: Derive Port
    redirectCode: Redirect Code
    directResponse: Direct Response
    status: Status
    body: Body
    string: String
    bytes: Bytes
    delegate: Delegate
    namespace: Namespace
    rewrite: Rewrite
    retries: Retries
    attempts: Attempts
    perTryTimeout: Per Try Timeout
    retryOn: Retry On
    retryRemoteLocalities: Retry Remote Localities
    fault: Fault
    delay: Delay
    fixedDelay: Fixed Delay
    abort: Abort
    percentage.value: Percentage Value
    percent: Percent
    httpStatus: HTTP Status
    grpcStatus: GRPC Status
    corsPolicy: CORS Policy
    allowOrigins: Allow Origins
    allowMethods: Allow Methods
    allowMethods.placeholder: For example, GET
    allowHeaders: Allow Headers
    exposeHeaders: Expose Headers
    maxAge: Max Age
    maxAge.placeholder: For example, 24h
    allowCredentials: Allow Credentials
    destinationSubnets: Destination Subnets
    sniHosts: SNI Hosts
