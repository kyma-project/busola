dataSources: |-
  {
    "podSelector": {
      "resource": {
        "kind": "Pod",
        "version": "v1",
        "namespace": null
      },
      "filter": "$matchByLabelSelector($item, $root.spec.selector)"
    },
    "relatedVirtualServices": {
      "resource": {
          "kind": "VirtualService",
          "group": "networking.istio.io",
          "version": "v1beta1",
          "namespace": null
      },
      "filter": "$filter($item.spec.gateways, function($g){$contains($g,'/') ? ($substringBefore($g,'/') = $root.metadata.namespace and $substringAfter($g, '/') = $root.metadata.name) : ($substringBefore($g, '.') = $root.metadata.name and $substringBefore($substringAfter($g, '.'), '.') = $root.metadata.namespace) }) "
    }
  }
details: |
  {
    "header": [
      {
        "source": "spec.selector",
        "widget": "Labels",
        "name": "spec.selector"
      }
    ],
    "body": [     
      {
        "widget": "Table",
        "source": "spec.servers",
        "name": "spec.servers",
        "children": [
          { "source": "$item.port.name", "name": "spec.servers.port.name" },
          {
            "widget": "JoinedArray",
            "separator": 'break',
            "source": "$item.hosts", 
            "name": "spec.servers.hosts" 
          },
          { "source": "$item.port.number", "name": "spec.servers.port.number" },
          { "source": "$item.tls.mode", "name": "spec.servers.tls.mode" },
          {
            "widget": "ResourceLink", 
            "source": "$item.tls.credentialName", 
            "name": "spec.servers.tls.credentialName",
            "resource": {
              "name": "data",
              "namespace": "'istio-system'",
              "kind": "'Secret'"
            }
          }
        ]
      },
      {
        "widget": "Panel",
        "name": "spec.selector",
        "disablePadding": true,
        "children": [
          { 
            "source": "$podSelector()",
            "widget": "ResourceList",
            "disableCreate": true,
            "visibility": "$boolean($root.spec.selector)"
          },
          {
            "source": "spec.selector",
            "widget": "Panel",
            "name": "selector.matchesAllPods",
            "visibility": "$not($exists(*)) or $not($boolean(*))"
          }
        ],
        "header": [
          {
            "source": "spec.selector",
            "widget": "Labels",
            "name": "spec.selector",
            "visibility": "$boolean(*)"
          }
        ],
      }
    ],
    "resourceGraph": {
      "depth": 1,
      "colorVariant": 1,
      "dataSources": [
        {"source": "relatedVirtualServices"}
      ]
    }
  }
form: |-
  [
    {
      "path": "spec.selector", 
      "widget": "KeyValuePair", 
      "simple": true,
      "required": true
    },
    {
      "widget": "FormGroup",
      "simple": true,
      "path": "spec.servers[].port",
      "children": [
        { 
          "path": "number", 
          "simple": true,
          "required": true,
          "inputInfo": "inputInfo.spec.servers.port.number"
        },
        { 
          "path": "name", 
          "widget": "Name", 
          "inputInfo": null, 
          "simple": true ,
          "required": true
        },
        {
          "path": "protocol", 
          "simple": true,
          "enum": [
            "HTTP",
            "HTTPS",
            "HTTP2",
            "GRPC",
            "GRPC-WEB",
            "MONGO",
            "REDIS",
            "MYSQL",
            "TCP"
          ],
          "required": true,
          "placeholder": "placeholders.dropdown",
        },
        { "path": "targetPort", "simple": true },
      ]
    },
    {
      "widget": "FormGroup",
      "simple": true,
      "path": "spec.servers[].tls",
      "visibility": "$item.port.protocol = 'HTTP' or $item.port.protocol = 'HTTPS'",
      "children": [
        { "path": "httpsRedirect", "simple": true, "visibility": "$item.port.protocol = 'HTTP'" },
        { 
          "path": "mode", 
          "simple": true, 
          "visibility": "$item.port.protocol = 'HTTPS'",
          "required": true,
          "placeholder": "placeholders.dropdown"
        },
        { 
          "path": "credentialName", 
          "simple": true, 
          "widget": "Resource",
          "resource": {
            "kind": "Secret",
            "version": "v1",
            "namespace": "istio-system",
            "scope": "namespace",
          },
          "filter": "$item.type = 'kubernetes.io/tls' or ($item.type = 'Opaque' and $contains($item.data, 'key') and $contains($item.data, 'cert'))",
          "visibility": "$item.port.protocol = 'HTTPS'",
        },
        { 
          "path": "serverCertificate", 
          "simple": true, 
          "visibility": "$item.port.protocol = 'HTTPS'",
          "placeholder": "placeholders.serverCertificate"
        },
        { 
          "path": "privateKey", 
          "simple": true, 
          "visibility": "$item.port.protocol = 'HTTPS'",
          "placeholder": "placeholders.privateKey",
        },
        { 
          "path": "caCertificates", 
          "simple": true, 
          "visibility": "$item.port.protocol = 'HTTPS'",
          "placeholder": "placeholders.caCertificates",
        },
      ]
    },
    {
      "widget": "SimpleList",
      "path": "spec.servers[].hosts", 
      "required": true,
      "simple": true,
      "placeholder": "placeholders.hosts"
    }
  ]
general: |-
  {
    "resource": {
      "kind": "Gateway",
      "group": "networking.istio.io",
      "version": "v1beta1"
    },
    "urlPath": "ext-gateways",
    "category": "Istio",
    "name": "Ext Gateways",
    "scope": "namespace",
    "description": "{{[Gateways](https://istio.io/latest/docs/reference/config/networking/gateway/)}} describes a load balancer that operates at the edge of the mesh and receives incoming or outgoing HTTP/TCP connections."
  }
list: |-
  [
    { 
      "name": "spec.selector",
      "source": "spec.selector",
      "widget": "Labels"
    },
  ]
presets: |-
  [
    {
      "name": "Ingress Gateway",
      "value": {
        "metadata": {
          "name": "httpbin-gateway",
          "labels": {
            "app.kubernetes.io/name": "httpbin-gateway",
          },
        },
        "spec": {
          "selector": {
            "istio": "ingressgateway",
          },
          "servers": [
            {
              "port": {
                "number": 443,
                "name": "https",
                "protocol": "HTTPS",
              },
              "tls": {
                "mode": "SIMPLE",
                "credentialName": "",
              },
              "hosts": [],
            },
          ],
        }
      }
    }
  ]
translations: |
  en:
    spec.selector: Selector
    spec.gateways: Gateways
    spec.servers: Servers
    spec.servers.port: Port
    spec.servers.port.name: Port Name
    spec.servers.port.protocol: Protocol
    spec.servers.port.targetPort: Target Port
    spec.servers.port.number: Port Number
    spec.servers.tls: TLS
    spec.servers.tls.mode: TLS Mode
    spec.servers.tls.httpsRedirect: HTTP Redirect
    spec.servers.tls.credentialName: Credential Name
    spec.servers.tls.serverCertificate: Server Certificate
    spec.servers.tls.privateKey: Private Key
    spec.servers.tls.caCertificates: CA Certificate
    spec.servers.hosts: Hosts
    selector.matchesAllPods: Matches all Pods in the Namespace
    placeholders.dropdown: Type or choose an option
    placeholders.serverCertificate: Enter the certificate path
    placeholders.privateKey: Enter the private key path
    placeholders.caCertificates: Enter the CA certificates path
    placeholders.hosts: For example, *.api.mydomain.com
    inputInfo.spec.servers.port.number: Must be a on-negative number.
---
dataSources: |-
  {
    "relatedGateways":{
      "resource": {
        "kind": "Gateway",
        "group": "networking.istio.io",
        "version": "v1beta1",
        "namespace": null
      },
        "filter": "$filter($root.spec.gateways, function($g){$contains($g,'/') ? ($substringBefore($g,'/') = $item.metadata.namespace and $substringAfter($g, '/') = $item.metadata.name) : ($substringBefore($g, '.') = $item.metadata.name and $substringBefore($substringAfter($g, '.'), '.') = $item.metadata.namespace) }) "
    },
    "relatedServices":{
      "resource": {
        "kind": "Service",
        "version": "v1",
        "namespace": null
      },
      "filter": "$filter($root.spec.http.route, function($r) { $filter($r.destination.host, function($h){($substringBefore($h, '.') = $item.metadata.name) and ($split($substringAfter($h, '.'),'.')[0] = $item.metadata.namespace)} ) })"
    }
  }
details: |
  {
    "resourceGraph":{
      "dataSources": [
        {
          "source": "relatedGateways"
        },
        {
          "source": "relatedServices"
        }
      ]
    },
    "body":[
        {
          "widget": "Table",
          "source": "spec.gateways[]",
          "name": "gateways",
          "visibility": "$exists(*)",
          "children": [
          {
            "source": "$item",
            "name": "t-name",
            "widget": "ResourceLink",
            "resource":{
              "kind": "'Gateway'",
              "name": "$contains(data,'/') ? $substringAfter(data, '/') : $substringBefore(data, '.')",
              "namespace": "$contains(data,'/') ? $substringBefore(data, '/'): $substringBefore($substringAfter(data, '.'), '.') "
            }
          }
          ]
        },
        {
          "name": "summary",
          "widget": "Panel",
          "source": "spec",
          "visibility": "$boolean($exists(data.exportTo) or $exists(data.hosts))",
          "children": [
            { "name": "exportTo", "source": "$item.exportTo", "widget": "Labels", "visibility": "$exists(*)"},
            { "name": "hosts", "source": "$item.hosts", "widget": "JoinedArray", "visibility": "$exists(*)"}
          ]
        },
        {
          "widget": "Table",
          "source": "spec.http",
          "name": "http",
          "visibility": "$exists(*)",
          "children": [
            {
              "source": "$item.name", "name": "t-name"
            },
            {
                "source": "$item.timeout", "name": "timeout"
            },
            {
                "source": "$item.mirrorPercentage.value", "name": "mirrorPercentage"
            }
          ],
          "collapsible": [
            {
              "source": "$item.match", "name": "matches", "widget": "Table", 
              "visibility": "$exists(*)", "children":[
                {
                  "source": "$item.name", "name": "t-name",
                },
                {
                  "source": "$item.uri", "name": "uri", "widget": "Labels",
                },
                {
                  "source": "$item.scheme", "name": "scheme", "widget": "Labels",
                },
                {
                  "source": "$item.method", "name": "method", "widget": "Labels",
                },
                {
                  "source": "$item.authority", "name": "authority", "widget": "Labels",
                },
                {
                  "source": "$item.headers", "name": "headers"
                },
                {
                  "source": "$item.port", "name": "port"
                },
                {
                  "source": "$item.sourceLabels", "name": "sourceLabels", "widget": "Labels"
                },
                {
                  "source": "$item.gateways", "name": "gateways", "widget": "JoinedArray"
                },
                {
                  "source": "$item.queryParams", "name": "queryParams"
                },
                {
                  "source": "$item.ignoreUriCase", "name": "ignoreUriCase"
                },
                {
                  "source": "$item.withoutHeaders", "name": "withoutHeaders"
                },
                {
                  "source": "$item.sourceNamespace", "name": "sourceNamespace"
                },
                {
                  "source": "$item.statPrefix", "name": "statPrefix"
                },
              ]
            },
            {
              "source": "$item.route", "name": "routes", "widget": "Table", 
              "visibility": "$exists(*)", "children":[
                {
                  "source": "$item.destination", "name": "destination", "widget": "Panel", "visibility": "$exists(*)", "children": [
                    {
                      "source": "$item.host", "name": "host"
                    },
                    {
                        "source": "$item.subset", "name": "subset"
                    },
                    {
                      "source": "$item.port.number", "name": "port.number"
                    },
                  ] 
                },
                {
                  "source": "$item.weight", "name": "weight",
                },
                {
                  "source": "$item.headers", "name": "headers", "widget": "Panel", 
                  "visibility": "$exists(*)", children": [
                      {
                        "source": "$item.request", "name": "request", "widget": "Panel", 
                        "visibility": "$exists(*)", "children":[
                            {
                              "source": "$item.set", "name": "set", "widget": "Labels"
                            },
                            {
                              "source": "$item.add", "name": "add", "widget": "Labels"
                            },
                            {
                              "source": "$item.remove", "name": "remove", "widget": "JoinedArray"
                            }
                        ]
                      },
                      {
                      "source": "$item.response", "name": "response", "widget": "Panel", 
                      "visibility": "$exists(*)", "children": [
                            {
                              "source": "$item.set", "name": "set", "widget": "Labels"
                            },
                            {
                              "source": "$item.add", "name": "add", "widget": "Labels"
                            },
                            {
                              "source": "$item.remove", "name": "remove", "widget": "JoinedArray"
                            }
                        ]
                      },
                  ] 
                },
              ]
            },
            {
              "source": "$item.redirect", "name": "redirect", "widget": "Panel", 
              "visibility": "$exists(*)", "children": [
                {
                  "source": "$item.uri", "name": "uri"
                },
                {
                  "source": "$item.authority", "name": "authority"
                },
                {
                  "source": "$item.port", "name": "port"
                },
                {
                  "source": "$item.derivePort", "name": "derivePort", "widget": "Labels"
                },
                {
                  "source": "$item.scheme", "name": "scheme"
                },
                {
                  "source": "$item.redirectCode", "name": "redirectCode"
                },
              ]
            },
            {
              "source": "$item.directResponse", "name": "directResponse", "widget": "Panel",
              "visibility": "$exists(*)", "children": [
                {
                  "source": "$item.status", "name": "status"
                },
                {
                  "source": "$item.body", "name": "body", "widget": "Panel", 
                  "visibility": "$exists(*)", "children": [
                    {
                      "source": "$item.string", "name": "string"
                    },
                    {
                      "source": "$item.bytes", "name": "bytes"
                    },
                  ]
                }
              ]
            },
            {
              "source": "$item.delegate", "name": "delegate", "widget": "Panel", 
              "visibility": "$exists(*)", "children": [
                  {
                    "source": "$item.name", "name": "t-name"
                  },
                  {
                    "source": "$item.namespace", "name": "namespace"
                  },
              ]
            },
            {
              "source": "$item.rewrite", "name": "rewrite", "widget": "Panel", 
              "visibility": "$exists(*)", "children": [
                  {
                    "source": "$item.uri", "name": "uri"
                  },
                  {
                    "source": "$item.authority", "name": "authority"
                  },
              ]
            },
            {
              "source": "$item.retries", "name": "retries", "widget": "Panel", 
              "visibility": "$exists(*)", "children": [
                  {
                    "source": "$item.attempts", "name": "attempts"
                  },
                  {
                    "source": "$item.perTryTimeout", "name": "perTryTimeout"
                  },
                  {
                    "source": "$item.retryOn", "name": "retryOn"
                  },
                  {
                    "source": "$item.retryRemoteLocalities", "name": "retryRemoteLocalities"
                  },
              ]
            },
            {
              "source": "$item.fault", "name": "fault", "widget": "Panel", 
              "visibility": "$exists(*)", "children": [
                {
                  "source": "$item.delay", "name": "delay", "widget": "Panel", 
                  "visibility": "$exists(*)", "children": [
                    {
                      "source": "$item.fixedDelay", "name": "fixedDelay"
                    },
                    {
                      "source": "$item.percentage.value", "name": "percentage.value"
                    },
                    {
                      "source": "$item.percent", "name": "percent"
                    }
                  ]
                },
                {
                  "source": "$item.abort", "name": "Abort", "widget": "Panel", 
                  "visibility": "$exists(*)", "children": [
                    {
                      "source": "$item.httpStatus", "name": "httpStatus"
                    },
                    {
                      "source": "$item.percentage.value", "name": "percentage.value"
                    }
                  ]
                }
              ]
            },
            {
              "source": "$item.mirror", "name": "Mirror", "widget": "Panel", 
              "visibility": "$exists(*)", "children": [
                {
                  "source": "$item.host", "name": "host"
                },
                {
                  "source": "$item.subset", "name": "subset"
                },
                {
                  "source": "$item.port.number", "name": "port.number"
                },
              ]
            },
            {
              "source": "$item.corsPolicy", "name": "corsPolicy", "widget": "Panel", 
              "visibility": "$exists(*)", "children": [
                {
                  "source": "$item.allowOrigins", "name": "allowOrigins"
                },
                {
                  "source": "$item.allowMethods", "name": "allowMethods", "widget": "JoinedArray"
                },
                {
                  "source": "$item.allowHeaders", "name": "allowHeaders", "widget": "JoinedArray"
                },
                {
                  "source": "$item.exposeHeaders", "name": "exposeHeaders", "widget": "JoinedArray"
                },
                {
                  "source": "$item.maxAge", "name": "maxAge"
                },
                {
                  "source": "$item.allowCredentials", "name": "allowCredentials"
                }
              ]
            },
            {
              "source": "$item.headers", "name": "headers", "widget": "Panel", 
              "visibility": "$exists(*)", "children": [
                  {
                    "source": "$item.request", "name": "request", "widget": "Panel", 
                    "visibility": "$exists(*)", "children":[
                        {
                          "source": "$item.set", "name": "set", "widget": "Labels"
                        },
                        {
                          "source": "$item.add", "name": "add", "widget": "Labels"
                        },
                        {
                          "source": "$item.remove", "name": "remove", "widget": "JoinedArray"
                        }
                    ]
                  },
                  {
                  "source": "$item.response", "name": "response", "widget": "Panel", 
                  "visibility": "$exists(*)", "children": [
                        {
                          "source": "$item.set", "name": "set", "widget": "Labels"
                        },
                        {
                          "source": "$item.add", "name": "add", "widget": "Labels"
                        },
                        {
                          "source": "$item.remove", "name": "remove", "widget": "JoinedArray"
                        }
                    ]
                  },
              ] 
            },
          ]
        },        
        {
          "widget": "Table",
          "source": "spec.tcp",
          "name": "tcp",
          "visibility": "$exists(*)",
          "children": [
              {
              "source": "$item.match", "name": "matches", "widget": "Table", 
              "visibility": "$exists(*)", "children": [
                {
                  "source": "$item.destinationSubnets", "name": "destinationSubnets",
                  "widget": "JoinedArray"
                },
                {
                  "source": "$item.port", "name": "port"
                },
                {
                  "source": "$item.sourceLabels", "name": "sourceLabels", "widget": "Labels"
                },
                {
                  "source": "$item.gateways", "name": "gateways", "widget": "JoinedArray"
                },
                {
                  "source": "$item.sourceNamespace", "name": "sourceNamespace"
                }
              ]
            },
          ],
          "collapsible": [
            {
              "source": "$item.route", "name": "routes", "widget": "Table",
              "visibility": "$exists(*)", "children": [
                {
                  "source": "$item.destination", "name": "destination", "widget": "Panel", "visibility": "$exists(*)", "children": [
                    {
                      "source": "$item.host", "name": "host"
                    },
                    {
                        "source": "$item.subset", "name": "subset"
                    },
                    {
                      "source": "$item.port.number", "name": "port"
                    },
                  ] 
                },
                {
                  "source": "$item.weight", "name": "weight"
                }
              ]
            },
          ],
        },
        {
          "widget": "Table",
          "source": "spec.tls",
          "name": "tls",
          "visibility": "$exists(*)",
          "children": [
              {
              "source": "$item.match", "name": "matches", "widget": "Table", 
              "visibility": "$exists(*)", "children": [
                {
                  "source": "$item.sniHosts", "name": "sniHosts", "widget": "JoinedArray"
                },
                {
                  "source": "$item.destinationSubnets", "name": "destinationSubnets",
                  "widget": "JoinedArray"
                },
                {
                  "source": "$item.port", "name": "port"
                },
                {
                  "source": "$item.sourceLabels", "name": "sourceLabels", "widget": "Labels"
                },
                {
                  "source": "$item.gateways", "name": "gateways", "widget": "JoinedArray"
                },
                {
                  "source": "$item.sourceNamespace", "name": "sourceNamespace"
                }
              ]
            },
          ],
          "collapsible": [
            {
              "source": "$item.route", "name": "routes", "widget": "Table",
              "visibility": "$exists(*)", "children": [
                {
                  "source": "$item.destination", "name": "destination", "widget": "Panel", "children": [
                    {
                      "source": "$item.host", "name": "host"
                    },
                    {
                        "source": "$item.subset", "name": "subset"
                    },
                    {
                      "source": "$item.port.number", "name": "port.number"
                    },
                  ] 
                },
                {
                  "source": "$item.weight", "name": "weight"
                }
              ]
            }
          ],
        }
    ],
  }
form: |-
  [
    {
      "path": "spec.tls", "widget": "GenericList", "name": "tls", "children":[
        {
          "path": "[].match", "widget": "GenericList", "name": "matches", "children": [
            {
              "path": "[].sniHosts", "widget": "SimpleList", "name": "sniHosts", 
            },
            {
              "path": "[].sourceNamespace", "name": "sourceNamespace"
            },
            {
              "path": "[].port", "name": "port"
            },
            {
              "path": "[].destinationSubnets",  "widget": "SimpleList", "name": "destinationSubnets"
            },
            {
              "path": "[].sourceLabels",  "widget": "KeyValuePair", "name": "sourceLabels"
            },
            {
              "path": "[].gateways", "widget": "SimpleList", "name": "gateways"
            },

          ]
        },

        {
          "path": "[].route", "widget": "GenericList", "name": "routes", "children": [
            {
              "path": "[].destination", "widget": "FormGroup", "name": "destination", "children": [

                {
                  "path": "host", "name": "host", 
                },
                {
                  "path": "subset", "name": "subset"
                },
                {
                  "path": "port.number", "name": "port.number"
                }
              
              ]
            },
            {
              "path": "[].weight", "name": "weight"
            },

          ]
        },
      ]
    },

    {
      "path": "spec.tcp", "name": "tcp", "widget": "GenericList", "children": [

        {
          "path": "[].match", "name": "matches", "children": [

            {
              "path": "[].sourceNamespace", "name": "sourceNamespace"
            },
            {
              "path": "[].port", "name": "port"
            },
            {
              "path": "[].sniHosts", "widget": "SimpleList", "name": "sniHosts"
            },
            {
              "path": "[].destinationSubnets", "widget": "SimpleList", "name": "destinationSubnets"
            },
            {
              "path": "[].sourceLabels", "name":"sourceLabels", "widget": "KeyValuePair"
            },
            {
              "path": "[].gateways", "widget": "SimpleList", "name": "gateways"
            }

          ]
        },
        {
          "path": "[].route", "name": "routes", "children": [
            {
              "path": "[].destination", "widget": "FormGroup", "name": "destination","children": [
                {
                  "path": "host", "name": "host"
                },
                {
                  "path": "subset", "name": "subset"
                },
                {
                  "path": "port.number", "name": "port.number"
                }
              
              ]
            },
            {
              "path": "[].weight", "name": "weight"
            },

          ]
        },

      ]
    },

    {
      "path": "spec.http", "simple": true, "name": "http", "widget": "GenericList","children":[
        {
          "path": "[].match", "name": "matches", "widget": "GenericList", "children": [
            {
              "path": "[].name", "name": "t-name"
            },
            {
              "path": "[].uri", "name": "uri", "widget": "KeyValuePair", "keyEnum": ['prefix', 'exact', 'regex']
            },
            {
              "path": "[].scheme", "name": "scheme", "widget": "KeyValuePair", "keyEnum": ['prefix', 'exact', 'regex']
            },
            {
              "path": "[].method", "name": "method", "widget": "KeyValuePair", "keyEnum": ['prefix', 'exact', 'regex']
            },
            {
              "path": "[].authority", "name": "authority", "widget": "KeyValuePair", "keyEnum": ['prefix', 'exact', 'regex']
            },
            {
              "path": "[].headers", "name": "headers", "widget": "KeyValuePair", "value": {
                "type": "object", "keyEnum": ['prefix', 'exact', 'regex']
              }
            },
            {
              "path": "[].port", "name": "port"
            },
            {
              "path": "[].sourceLabels", "name": "sourceLabels", "widget": "KeyValuePair"
            },
            {
              "path": "[].gateways", "name": "gateways", "widget": "SimpleList"
            },
            {
              "path": "[].queryParams", "name": "queryParams", "widget": "KeyValuePair", "value": {
                "type": "object", "keyEnum": ['prefix', 'exact', 'regex']
              }
            },
            {
              "path": "[].ignoreUriCase", "name": "ignoreUriCase"
            },
            {
              "path": "[].withoutHeaders", "name": "withoutHeaders", "widget": "KeyValuePair", "value": {
                "type": "object", "keyEnum": ['prefix', 'exact', 'regex']
              }
            },
            {
              "path": "[].sourceNamespace", "name": "sourceNamespace"
            },
            {
              "path": "[].statPrefix", "name": "statPrefix"
            },
          ]
        },
        {
          "path": "[].route", "name": "routes", "children": [
            {
              "path": "[].destination", "name": "destination", "widget": "FormGroup", "children": [

                {
                  "path": "host", "name": "host"
                },
                {
                  "path": "subset", "name": "subset"
                },
                {
                  "path": "port.number", "name": "port.number"
                }
              
              ]
            },
            {
              "path": "[].weight", "name": "weight"
            },
            {
              "path": "[].headers", "name": "headers", "widget": "FormGroup", "children": [

                {
                  "path": "response", "name": "response", "widget": "FormGroup", "children": [
                  
                    {
                      "path": "set", "name": "set", "widget": "KeyValuePair" 
                    },
                    {
                      "path": "add", "name": "add", "widget": "KeyValuePair" 
                    },
                    {
                      "path": "remove", "name": "remove", "widget": "SimpleList" 
                    },

                  ]
                },
                {
                  "path": "request", "name": "request", "widget": "FormGroup", "children": [
                  
                    {
                      "path": "set", "name": "set", "widget": "KeyValuePair" 
                    },
                    {
                      "path": "add", "name": "add", "widget": "KeyValuePair" 
                    },
                    {
                      "path": "remove", "name": "remove", "widget": "SimpleList" 
                    },

                  ]
                }

              ]
            }
          ]
        },
          {
            "path": "[].redirect", "name": "redirect", "widget": "FormGroup", "children": [
              {
                "path": "uri", "name": "uri"
              },
              {
                "path": "authority", "name": "authority"
              },
              {
                "path": "port", "name": "port"
              },
              {
                "path": "derivePort", "name": "derivePort"
              },
              {
                "path": "scheme", "name": "scheme"
              },
              {
                "path": "redirectCode", "name": "redirectCode"
              }
            ]
          },
          {
            "path": "[].directResponse", "name": "directResponse", "widget": "FormGroup", "children": [
              {
                "path": "status", "name": "status"
              },
              {
                "path": "body", "name": "body", "widget": "FormGroup", "children": [
                  {
                    "path": "string", "name": "string"
                  },
                  {
                    "path": "bytes", "name": "bytes"
                  }
                ]
              }
            ]
          },
          {
            "path": "[].delegate", "name": "delegate", "widget": "FormGroup", "children": [
              {
                "path": "name", "name": "name"
              },
              {
                "path": "namespace", "name": "namespace"
              }
            ]
          },
          {
            "path": "[].rewrite", "name": "rewrite", "widget": "FormGroup", "children": [
              {
                "path": "uri", "name": "uri"
              },
              {
                "path": "authority", "name": "authority"
              }
            ]
          },
          {
            "path": "[].timeout", "name": "timeout"
          },
          {
            "path": "[].retries", "name": "retries", "widget": "FormGroup", "children": [
              {
                "path": "attempts", "name": "attempts"
              },
              {
                "path": "perTryTimeout", "name": "perTryTimeout"
              },
              {
                "path": "retryOn", "name": "retryOn"
              },
              {
                "path": "retryRemoteLocalities", "name": "retryRemoteLocalities"
              }
            ]
          },
          {
            "path": "[].fault", "name": "fault", "widget": "FormGroup", "children": [
              {
                "path": "delay", "name": "delay", "widget": "FormGroup", "children": [
                  {
                    "path": "fixedDelay", "name": "fixedDelay", 
                  },
                  {
                    "path": "percentage.value", "name": "percentage.value"
                  },
                  {
                    "path": "percent", "name": "percent"
                  },
                ]
              },
              {
                "path": "abort", "name": "abort", "widget": "FormGroup", "children": [
                  {
                    "path": "httpStatus", "name": "httpStatus"
                  },
                  {
                    "path": "grpcStatus", "name": "grpcStatus"
                  },
                  {
                    "path": "percentage.value", "name": "percentage.value"
                  },
                ]
              },
            ]
          },
          {
            "path": "[].mirror", "name": "mirror", "widget": "FormGroup", "children": [
              {
                "path": "host", "name": "host"
              },
              {
                "path": "subset", "name": "subset"
              },
              {
                "path": "port.number", "name": "port.number"
              }
            ]
          },
          {
            "path": "[].mirrorPercentage.value", "name": "mirrorPercentage"
          },
          {
            "path": "[].corsPolicy", "name": "corsPolicy", "widget": "FormGroup", "children": [
              {
                "path": "allowCredentials", "name": "allowCredentials", "type": "boolean"
              }, 
              {
                "path": "allowMethods", "name": "allowMethods", "widget": "SimpleList", "placeholder": "allowMethods.placeholder"
              },
              {
                "path": "allowHeaders", "name": "allowHeaders", "widget": "SimpleList"
              },
              {
                "path": "exposeHeaders", "name": "exposeHeaders", "widget": "SimpleList"
              },
              {
                "path": "maxAge", "name": "maxAge", "placeholder": "maxAge.placeholder"
              }
            ]
          },
          {
            "path": "[].headers", "name": "headers", "widget": "FormGroup", "children": [

              {
                "path": "response", "name": "response", "widget": "FormGroup", "children": [
                
                  {
                    "path": "set", "name": "set", "widget": "KeyValuePair" 
                  },
                  {
                    "path": "add", "name": "add", "widget": "KeyValuePair" 
                  },
                  {
                    "path": "remove", "name": "remove", "widget": "SimpleList" 
                  },

                ]
              },
              {
                "path": "request", "name": "request", "widget": "FormGroup", "children": [
                
                  {
                    "path": "set", "name": "set", "widget": "KeyValuePair" 
                  },
                  {
                    "path": "add", "name": "add", "widget": "KeyValuePair" 
                  },
                  {
                    "path": "remove", "name": "remove", "widget": "SimpleList" 
                  },

                ]
              }
            ]
          }
      ] 
    },


    {
      "path": "spec.hosts", "name": "hosts", "widget": "SimpleList"
    },
    {
      "path": "spec.gateways", "name": "gateways", "widget": "SimpleList"
    },
    {
      "path": "spec.exportTo", "name": "exportTo", "widget": "SimpleList"
    },
  ]
general: |-
  {
    "resource": {
      "kind": "VirtualService",
      "group": "networking.istio.io",
      "version": "v1beta1"
    },
    "urlPath": "ext-virtualservices",
    "category": "Istio",
    "name": "Ext VirtualServices",
    "scope": "namespace",
    "description": "{{[VirtualService](https://istio.io/latest/docs/reference/config/networking/virtual-service/)}} describes a configuration that affects traffic routing. ."
  }
list: |-
  [
    { 
      "name": "hosts",
      "source": "spec.hosts",
      "widget": "JoinedArray"
    },
    { 
      "name": "gateways",
      "source": "spec.gateways",
      "widget": "JoinedArray"
    },
  ]
translations: |
  en:
    t-name: Name
    gateways: Gateways
    hosts: Hosts
    exportTo: Export to
    summary: Summary
    http: HTTP
    tls: TLS
    tcp: TCP
    mirror: Mirror
    mirrorPercentage: Mirror Percentage
    timeout: Timeout
    matches: Matches
    uri: URI
    scheme: Scheme
    method: Method
    authority: Authority
    headers: Headers
    port: Port
    sourceLabels: Source Labels
    queryParams: Query Params
    ignoreUriCase: Ignore URI Case
    withoutHeaders: Without Headers
    sourceNamespace: Source Namespace
    statPrefix: Stat Prefix
    routes: Routes
    destination: Destination
    host: Host
    subset: Subset
    port.number: Port Number
    weight: Weight
    request: Request
    response: Response
    set: Set
    add: Add
    remove: Remove
    redirect: Redirect
    derivePort: Derive Port
    redirectCode: Redirect Code
    directResponse: Direct Response
    status: Status
    body: Body
    string: String
    bytes: Bytes
    delegate: Delegate
    namespace: Namespace
    rewrite: Rewrite
    retries: Retries
    attempts: Attempts
    perTryTimeout: Per Try Timeout
    retryOn: Retry On
    retryRemoteLocalities: Retry Remote Localities
    fault: Fault
    delay: Delay
    fixedDelay: Fixed Delay
    abort: Abort
    percentage.value: Percentage Value
    percent: Percent
    httpStatus: HTTP Status
    grpcStatus: GRPC Status
    corsPolicy: CORS Policy
    allowOrigins: Allow Origins
    allowMethods: Allow Methods
    allowMethods.placeholder: For example, GET
    allowHeaders: Allow Headers
    exposeHeaders: Expose Headers
    maxAge: Max Age
    maxAge.placeholder: For example, 24h
    allowCredentials: Allow Credentials
    destinationSubnets: Destination Subnets
    sniHosts: SNI Hosts
