addons:
  addons-status: Addons Status
  description: <0>Addons Configuration</0> defines Namespace-scoped addons that provide all information required to convert Helm charts into Service Classes in Service Catalog.
  errors:
    cannot-create: Cannot create the Addons Configuration.
  headers:
    url: URL
  messages:
    created: Addons Configuration {{name}} created.
  repository-urls: Repository URLs
  title: Addons
  urls: URLs
api-rules:
  access-strategies:
    buttons:
      add: Add Access Strategy
    labels:
      access-strategy: Access Strategy
      allow: Allow
      handler: Handler
      jwt: JWT
      methods: Methods
      noop: noop
      oauth2_introspection: OAuth2
      path: Path
      required-scope: Required Scope
      types: Types
    messages:
      one-method: This access strategy requires at least one method.
      one-strategy-required: At least one strategy is required.
    title: Access Strategies
    tooltips:
      path: Path can contain alphanumeric characters and  '/', '.', '*', '?', '!', '-', '(', and ')'.
  buttons:
    create: Create API Rule
    edit: Edit API Rule "{{apiRuleName}}"
    expose: Expose {{type}}
  description: <0>API Rule</0> allows for exposing a service externally.
  form:
    gateway: Gateway
    host: Host
    hostname: Hostname
    subdomain: Subdomain
    subdomain-placeholder: Subdomain will replace the '*' part of the $t(api-rules.form.hostname) value.
  general-settings:
    title: General settings
  jwt:
    idp-presets: IDP Presets
    jwks-uri: JWKs URI
    trusted-issuer: Trusted issuer URL
  list:
    headers:
      host: Host
      service-name: Service Name
      status: Status
  messages:
    create-failed: Failed to create the API Rule.
    created: API Rule created.
    description: Expose Services outside the cluster with API Rules.
    not-matching-results: Couldn't find API Rules matching this query.
    one-rule-required: At least one API Rule is required.
    updated: API Rule updated.
    will-be-available-at: API Rule will be available at {{address}}.
  name_singular: API Rule
  oauth:
    required-scope: Required scope
  placeholders:
    path: Enter the path.
    subdomain: Subdomain part of API Rule address.
  rule: Rule
  rules: Rules
  services:
    error-load: Couldn't load service list.
    loading: Loading services...
    ns-no-services: No Services in this Namespace.
    placeholder: Choose the service to expose.
  title: API Rules
applications:
  aria:
    namespace: Choose Namespace
  bindings: Bindings
  buttons:
    close: Close
    connect: Connect Application
    create: $t(applications.subtitle.create-binding)
    create-app: $t(applications.subtitle.create-app)
    select-all: Select all
  description: <0>Application</0> represents an external solution connected to Kyma.
  headers:
    access-label: Access Label
    apis: APIs
    central-gateway-url: Central Gateway URL
    description: Description
    events: Events
    service: Service
    service-and-event: Service and Event Bindings
  labels:
    applications-and-events: Applications and Events
    description: Description
    namespace: Namespace
  messages:
    app-created: Application {{applicationName}} created.
    binding-deleted: Binding deleted.
    binding-not-found: No bindings.
    cannot-create: Cannot create the Application.
    copy-url: 'Copy the following URL and use it at the external system that you would like to connect to:'
    create-failed: Failed to create the Binding.
    created: Binding created.
    dont-expose: This Application doesn't expose any Services or events.
    no-apis: There are no APIs.
    no-bound-service: No bound services found.
    no-events: There are no events.
    no-matches-text: No Namespaces to bind.
    service-not-found: No services.
    show-namespaces: Show Namespaces.
    some-apis: There are some APIs.
    some-events: There are some events.
  placeholders:
    description: Specify a description for your Application.
    name: Specify a name for your Application.
    namespace: Choose Namespace.
  subtitle:
    bound-to: Services and events bound to '{{namespace}}'.
    connect-app: Connect Application
    create-app: Create Application
    create-binding: Create Namespace Binding
    edit-binding: Edit ServiceClass Binding in '{{namespace}}'.
    namespace-bindings: Namespace Bindings
    provided-services: Provided Services and events
  title: Applications
brokers:
  description: <0>Service Broker</0> provides a set of managed services that a third party offers and maintains.
  headers:
    url: URL
  title: Brokers
btp-instances:
  description: ' <0>BTP Service Instance</0> makes the functionality of a service available for consumption.'
  external-name: External Name
  instance-data: Service Instance Data
  instance-id: Instance ID
  messages:
    params-invalid: Invalid parameters. Provide a valid JSON object.
  name_singular: BTP Service Instance
  offering-name: Offering Name
  parameters: Instance Parameters
  placeholders:
    external-name: Defaults to the instance name if empty.
    offering-name: SAP BTP service offering name.
    plan-name: The plan name to use for the Service Instance.
  plan-name: Plan Name
  resource-type: Service Instance
  title: BTP Service Instances
  tooltips:
    offering-name: You find the name of the SAP BTP service offering in the BTP Cockpit in the Service Marketplace.
    plan-name: You find the plan to be used for the service instance in the BTP Cockpit in the Service Marketplace.
btp-service-bindings:
  binding-id: Binding ID
  data: Binding Data
  description: <0>BTP Service Binding</0> provides access details for an existing service instance.
  external-name: External Name
  instance-id: Instance ID
  instance-name: Service Instance Name
  messages:
    duplicate-ref: This ref already exists.
    invalid-ref: Ref is invalid.
    params-invalid: Parameters must be an object.
    value-must-be-json-object: Secret data value must be a JSON object.
  name_singular: BTP Service Binding
  parameters: Parameters
  parameters-from: Parameters from Secrets
  placeholders:
    choose-secret: Choose a Secret
    choose-secret-first: Choose the Secret first
    choose-secret-key: Choose a Secret key
    empty-secret: This Secret has no data
    external-name: Defaults to the Service Binding name if empty
    secret: Credentials Secret name
  resource-type: Service Binding
  secret: Secret
  title: BTP Service Bindings
  tooltips:
    parameters-from: Secret references to populate the parameters.
    secret: The name of the secret where the credentials are stored, defaults to the Service Binding name if not specified.
    secret-not-found: This Secret doesn't exist.
catalog:
  description: <0>Service Catalog</0> provides an easy way to access services that the Service Brokers manage, and to use them in an application.
  menu-title: Catalog
  subtitle: Enrich your experience with additional services that are installed outside the cluster.
  title: Service Catalog
certificates:
  common-name: Common Name
  create:
    messages:
      failure: Failed to create the certificate.
      success: Certificate created.
  csr: CSR
  description: <0>Certificate</0> provides a definition of a certificate that is then processed by the indicated issuer.
  dns-names: DNS Names
  existing-secret: Use the existing Secret
  expiration-date: Expiration Date
  issuer: Issuer
  messages:
    decode-error: 'Failed to decode the CSR: {{message}}.'
  name_singular: Certificate
  placeholders:
    common-name: Certificate CN (max 64 characters)
    csr: Plain text Certificate Signing Request
    dns-names: Additional domain names, one per line
    encoded-csr: Base64-encoded Certificate Signing Request
    name: Certificate name
    secret-name: Requested Secret name
  refs: References
  renew: Renew
  secret-name: Secret name
  secret-ref: Secret to use
  state: Status
  title: Certificates
  tooltips:
    common-name: Common Name is the primary domain name of the certificate.
    csr: Certificate Signing Request is an alternative way to provide common name, DNS names, and other information.
    dns-names: DNS Names are the optional additional domain names of the certificate.
    existing-secret: Use an existing Secret for storing the certificate if enabled. Otherwise a new Secret will be created.
    issuer: Certificate issuer. If no issuer is given, the default issuer is used.
    renew: Trigger a certificate renewal if enabled.
    secret-name: Name of the Secret object to use for storing the certificate.
    secret-ref: Reference of the existing Secret object to use for storing the certificate.
    with-csr: Enable to use a Certificate Signing Request instead of providing domain names manually.
  with-csr: Use a CSR
cluster-addons:
  description: <0>Cluster Addons Configuration</0> defines cluster-wide addons that provide all information required to convert Helm charts into Service Classes in Service Catalog.
  title: Cluster Addons
cluster-role-bindings:
  description: <0>Cluster Role Binding</0> assigns the permissions defined in a Cluster Role to a user.
  name_singular: Cluster Role Binding
  title: Cluster Role Bindings
cluster-roles:
  description: <0>Cluster Role</0> is a set of cluster-level resources and permissions that can be assigned to a user.
  name_singular: Cluster Role
  title: Cluster Roles
clusters:
  add:
    errors:
      failed-to-add-cluster: Failed to add a cluster
    title: Add a Cluster
  buttons:
    apply-configuration: Apply Configuration
    apply-kubeconfig: Apply kubeconfig
    next-step: Next Step
    previous-step: Previous Step
    verify-and-add: Add Cluster
  common:
    api-server-address: API server address
    download-kubeconfig: Download Kubeconfig
    kubeconfig-download-error: Failed to download the kubeconfig
    kubeconfig-not-present: Kubeconfig is missing on the Cluster
  empty:
    go-to-btp-cockpit: To view your clusters, go to
    subtitle: Let's add one now!
    title: Looks like there aren't any clusters yet.
  labels:
    client-id: Client ID
    issuer-url: Issuer URL
    scopes: Scopes
  list:
    no-clusters-found: No clusters found
    outdated:
      tooltip: Outdated parameter version may cause errors. Delete and re-add your cluster.
  messages:
    error-kubeconfig: Error reading the kubeconfig.
    missing-configuration-data: Configuration included properly. Fill the remaining required data.
    upload-paste-kubeconfig: Upload or paste your kubeconfig file.
    wrong-configuration: Cannot apply the configuration.
  overview:
    title-all-clusters: Clusters Overview
    title-current-cluster: Cluster Overview
    version: Version
  storage:
    changed-message: The chosen storage type has been overwritten by the cluster configuration from {{originalStorage}} to {{targetStorage}}.
    choose-storage:
      label: Storage type configuration
    descriptions:
      inMemory: Cluster data is cleared when you leave or refresh the page.
      localStorage: Cluster data is persisted between browser reloads.
      sessionStorage: Cluster data is cleared when the page session ends.
      unknown: Unknown storage type
    info: |
      Now you can choose where we store your cluster configuration. Based on your kubeconfig type, we recomment the pre-selected storage mode. Of course, you can choose whateer you prefer for convenience and security. None of the options stores information on the server.
    labels:
      inMemory: In memory
      localStorage: Local storage
      sessionStorage: Session storage
      unknown: Unknown
    title: Storage Type
  wizard:
    auth:
      client-id: Client ID
      issuer-url: Issuer URL
      scopes: Scopes
      token: Token
    context: Current context
    editor-label: 'or paste your kubeconfig here:'
    incomplete: We couldn't find enough authentication information in your kubeconfig. You can enter it manually.
    intro: To add a cluster, all you have to do is provide the cluster configuration – called “kubeconfig” in the Kubernetes world.
    kubeconfig: Provide Kubeconfig
    not-an-object: kubeconfig is not an object
    storage: Privacy Options
    storage-info: |
      Don't worry, we don't store your kubeconfig file on the server. The information stays in your browser.
      You can choose your privacy options in the last step.
    token-info: If you don't know how to get your token, ask your authentication provider.
    update: Provide Authentication
common:
  buttons:
    add: Add
    add-new: Add New
    cancel: Cancel
    copy: Copy
    create: Create
    delete: Delete
    edit: Edit
    edit-yaml: Edit YAML
    ok: OK
    save: Save
    update: Update
    view-yaml: View YAML
  create-form:
    choose-preset: Select a Preset
    editor-error: 'Parse error: {{error}}, previous valid input will be used.'
    messages:
      create-failure: 'Failed to create the {{resourceType}}: {{error}}.'
      create-success: '{{resourceType}} created.'
      patch-failure: 'Failed to update the {{resourceType}}: {{error}}.'
      patch-success: '{{resourceType}} updated.'
    modes:
      advanced: Advanced
      simple: Simple
    object-required: An object is required
  delete-dialog:
    delete-confirm: Don't ask this again.
    information: You've switched off removal confirmations for all resources. You can switch them back on in Preferences.
    message: Are you sure you want to delete {{type}} {{name}}?
    title: Delete {{name}}.
  errors:
    error: Error
    no-permissions: You don't have enough permissions to view this content.
    no-permissions-header: Not enough permissions.
    no-permissions-message: Contact your administrator to grant you access.
    no-permissions-no-role: You have no role assigned.
  headers:
    annotations: Annotations
    created: Created
    labels: Labels
    loading: Loading...
    logs: Logs
    name: Name
    owner: Controlled By
    resources: Resources
    status: Status
  labels:
    data: Data
    default-preset: Default
    hostname: Hostname
    issuer: Issuer
    name: Name
    namespace: Namespace
    protocol: Protocol
    read-only: Read-only mode
    resource: Resource
    resource-name: '{{resource}} $t(common.labels.name)'
    resource-namespace: '{{resource}} $t(common.labels.namespace)'
    secret: Secret
    service: Service
    version: Version
  lowercase:
    name: name
  messages:
    cannot-load: 'Cannot load {{value}}: {{error.message}}.'
    choose: Choose {{value}}.
    click-to-select: Select {{value}} from the list.
    doesnt-exist: doesn't exist.
    entry-not-found: Entry not found
    error: 'Error: {{error}}'
    fill-required-data: Fill the remaining required data.
    loading-name: Loading name...
    no-instances-found: No matching {{value}} found.
    no-instances-found-namespace: No matching {{value}} found in this Namespace.
    parse-error: Parse error, previous valid input will be used.
    resource-name-error: Requested resource with this name not found in the selected Namespace.
    resource-namespace-error: Requested Namespace not found.
    type-to-select: Start typing to select {{value}} from the list.
    validation-error: Validation error.
  placeholders:
    secret-ref-name: Select name
    secret-ref-namespace: Select Namespace
  tooltips:
    copy-to-clipboard: Copy to clipboard
    download: Download
    duplicate-key: Duplicate key
    error: 'Error: '
    k8s-name-input: "Name must consist of lowercase alphanumeric characters, can contain '-' (e.g.: 'my-name1')."
    key: Key must start and end with an alphanumeric character, can contain '-', '_' or '.'.
    key-value: key=value, must start and end with an alphanumeric character, can contain '-', '_' or '.'.
    read-file: Read file content as a single value, with file name as a key.
    resource-ref-name: Unique name within a Namespace to refer to a {{resource}} resource.
    resource-ref-namespace: Namespace defines the space within which the {{resource}} name must be unique.
    save: Save
    search: Search
    secret-ref-name: Unique name within a Namespace to refer to a Secret resource.
    secret-ref-namespace: Namespace defines the space within which the secret name must be unique.
    value: Value must start and end with an alphanumeric character, can contain '-', '_' or '.'
  'yes': 'yes'
components:
  dropdown:
    empty-list: No resources available
  error-panel:
    error: An error occured. The component cannot be rendered.
  file-input:
    drag-file: Drag file here
  generic-list:
    acion-header:
      messages:
        confirmation: Are you sure you want to delete {{resourceType}} "{{name}}"?
        failure: 'Failed to delete the {{resourceType}}: {{error}}'
        success: '{{resourceType}} deleted'
      title: Delete {{resourceType}}
    messages:
      no-search-results: Couldn't find resources matching this query.
      not-found: No entries found
  k8s-name-input:
    placeholder: '{{resourceType}} Name'
  key-value-field:
    enter-key: Enter Key
    enter-value: Enter Value
  key-value-form:
    add-entry: Add data entry
    key: Key
    read-value: Read value from file
    value: Value
  label-selector-input:
    click-to-delete: Click to delete
    enter-key-value: Enter {{type}} key=value
  modal:
    confirm-text: Confirm
    title: Modal
  resource-details:
    edit: Edit
    messages:
      failure: 'Failed to update the {{resourceType}}: {{error}}'
      success: '{{resourceType}} updated'
  resource-not-found:
    messages:
      not-found: Such {{resource}} doesn't exist
  resources-list:
    create: Create {{resourceType}}
    messages:
      delete:
        failure: 'Failed to delete the {{resourceType}}: {{error}}'
        success: '{{resourceType}} deleted'
      update:
        failure: 'Failed to update the {{resourceType}}: {{error}}'
        success: '{{resourceType}} updated'
  string-input:
    placeholder: Enter multiple values separated by comma
    remove: Click to remove
config-maps:
  buttons:
    update: Update
  description: <0>Config Map</0> is an object that allows for storing non-sensitive data in key-value pairs.
  errors:
    cannot-create: Cannot create the Config Map.
    cannot-update: Cannot update the Config Map.
  messages:
    created: Config Map created.
    updated: Config Map updated.
  name_singular: Config Map
  subtitle:
    edit-config-map: Edit Config Map
  title: Config Maps
configuration:
  title: Configuration
cron-jobs:
  concurrency-policy:
    descriptions:
      allow: Allow concurrent executions.
      forbid: No concurrent executions, skip the new run if the previous one hasn't finished yet.
      replace: No concurrent executions, replace the previous run with the new one.
    title: Concurrency Policy
  create-modal:
    day-of-month: Day of Month
    day-of-week: Day of Week
    hour: Hour
    labels:
      concurrency-policy: Concurrency Policy
      restart-policy: Restart Policy
    minute: Minute
    month: Month
    parse-error: Error parsing CRON expression.
    presets:
      daily: Daily
      hourly: Hourly
      monthly: Monthly
      weekly: Weekly
      yearly: Yearly
    schedule-description: You can specify ranges (like 1-4), multiple values (1, 2, 5), wildcard (*) or run the job every nth interval (*/3 for every 3rd interval).
    tooltips:
      day-of-month: 1 to 31 or three-letter month abbreviations (like JAN, FEB)
      day-of-week: 0 to 7 (0 and 7 represent Sunday) or three-letter day abbreviations (like MON, TUE)
      hour: 0 to 23 (always UTC)
      minute: 0 to 59
      month: 1 to 12
      starting-deadline: Optional deadline in seconds for starting the job if it misses the scheduled time.
      suspend: 'If true, the controller suspends subsequent executions (default: false). It does not apply to started executions.'
  description: <0>Cron Job</0> is a job that is run according to a specified schedule.
  docker-image: Docker Image
  failed-jobs-history-limit: Failed Jobs History Limit
  image-pull-policy: Image Pull Policy
  last-job-execution: Last Job execution
  last-schedule-time: Last schedule time
  name_singular: Cron Job
  not-scheduled-yet: None scheduled yet
  schedule: Schedule
  title: Cron Jobs
custom-resource-definitions:
  description: <0>Custom Resource Definition</0> is an object used to define a custom resource that allows you to extend the Kubernetes API for use cases that are not directly covered by core Kubernetes.
  headers:
    description: Description
    json-path: JSON Path
    kind: Kind
    list-kind: List Kind
    plural: Plural
    scope: Scope
    short-names: Short Names
    singular: Singular
    type: Type
    value: Value
  messages:
    no-entries: No entries found because the version is not served.
  status:
    not-served: Not served
    served: Served
    storage: Storage
  subtitle:
    additional-columns: Additional Printer Columns
    names: Names
    schema: Schema
    version: Version
  title: Custom Resource Definitions
daemon-sets:
  description: <0>Daemon Set</0> ensures that replicated Pods are running across a set of available nodes.
  images: Images
  node-selector: Node Selector
  pods: $t(pods.title)
  title: Daemon Sets
  tolerations:
    effect: Effect
    key: Key
    operator: Operator
    title: Tolerations
    toleration-seconds: Seconds
deployments:
  create-modal:
    advanced:
      add-container: Add Container
      container-header: Container {{name}}
      containers: Containers
      cpu-limits: CPU Limits
      cpu-requests: CPU Requests
      expose-service: Expose a separate Service
      image: Image
      memory-limits: Memory Limits
      memory-requests: Memory Requests
      one-container-required: At least one container is required.
      port: Port
      port-placeholder: Enter the port exposed by the Service.
      runtime-profile: Runtime Profile
      service: Service
      target-port: Target Port
      target-port-placeholder: Enter the target port of the container.
    messages:
      deployment-ok-service-bad: 'Deployment created, failed to create the Service: {{error}}.'
    simple:
      docker-image: Docker Image
      docker-image-placeholder: Enter the Docker image tag, for example, bitnami/nginx.
      image-pull-secret: Image Pull Secret
      image-pull-secret-tooltip: The secret for authorization to the private Docker repository.
    title: Create Deployment
  description: <0>Deployment</0> is a Kubernetes object that represents a replicated application running on your cluster.
  headers:
    images: Images
    pods: $t(pods.title)
  name_singular: Deployment
  title: Deployments
discovery-and-network:
  title: Discovery and Network
dnsentries:
  description: <0>DNS Entry</0> is an object that represents the request to create an external DNS record.
  headers:
    dns-name: DNS Name
    provider: Provider
    provider-type: Provider Type
    spec: Specification
    status: $t(common.headers.status)
    targets: Targets
    ttl: TTL
  labels:
    dns-name: DNS Name
    target: Target
    targets: Targets
    text: Text
    ttl: TTL
    use-cname: Use CNAME
  messages:
    cannot-create: 'Failed to create the DNS Entry:'
    created: DNS Entry created
  name_singular: DNS Entry
  placeholders:
    dns-name: Enter the DNS Name.
    target-a: Enter the A record target.
    target-cname: Enter the CNAME record target.
    ttl: Enter the time to live.
  title: DNS Entries
  tooltips:
    target: Target must be an A record, or a CNAME record. Provide either target or text.
    text: Text record must be a string. Provide either target or text.
    use-a: Switch to A record.
    use-cname: Switch to CNAME record.
  use-cname: Use CNAME
dnsproviders:
  description: <0>DNS Provider</0> is used to specify and manage the configuration for the external DNS services.
  domains: Domains
  headers:
    exclude: Excluded Domains
    include: Included Domains
    status: $t(common.headers.status)
    type: Type
  labels:
    default-ttl: Default TTL
    secret-reference: Secret Reference
    type: Type
  messages:
    cannot-create: 'Failed to create the DNS Provider:'
    created: DNS Provider created
  name_singular: DNS Provider
  placeholders:
    default-ttl: Enter the default time to live.
    provider-type: Choose Provider Type
  title: DNS Providers
  tooltips:
    excluded-domains: The selection of forbidden domains (by default, all zones and domains in those zones are served), $t(domains.example).
    included-domains: The selection of allowed domains (by default, all zones and domains in those zones are served), $t(domains.example).
domains:
  example: for example, *.api.mydomain.com
  exclude:
    label: Exclude Domains
    placeholder: Domain that is forbidden
  include:
    label: Include Domains
    placeholder: Domain that is allowed
event-subscription:
  create:
    labels:
      application-name: Application name
      calculate-event-type: Calculate Event type
      calculate-from-cmp: Calculate from components
      enter-event-type: Enter Event type
      event-name: Event name
      event-type: Event type
      event-version: Event version
    notifications:
      created: Subscription created
      failed: Failed to create the Subscription
      failed-delete: Failed to delete the Subscription
      removed: Subscription removed
    title: Add Event Subscription
  errors:
    invalid: The eventType field must have a proper value.
    not-matching-search-query: Couldn't find Event Subscriptions matching this query.
    server: Server error. Contact your cluster admin.
    subscriptions-not-found: There are no Event Subscriptions yet.
  title: Event Subscriptions
functions:
  buttons:
    connected-repositories: Connected Repositories
    create-function: Create Function
  create-view:
    buttons:
      confirm: Create
      create: Create a Function
    errors:
      cpu-default: This value must be a fixed-point number or in millicpu. For example, 0.1, 1, or 100m.
      cpu-limits-too-low: This value must be equal to or greater than the equivalent value for Requests.
      cpu-request-too-high: This value must be equal to or lower than the equivalent value for Limits.
      cpu-too-low: This value is too low. The minimum value is {{minValue}}.
      empty-source: Source cannot be empty.
      invalid: At least one field is empty or incorrectly formatted.
      invalid-deps: Dependencies must be specified in a valid JSON format.
      max-replicas-positive: Maximum replicas must be a positive integer.
      max-replicas-too-low: Maximum number of replicas has to be equal or greater than minimum.
      memory-default: 'This value must be a fixed-point number in one of the following units: Gi, G, Mi, M, Ki, or K. For example, 50Mi, 1000.5Ki, or 0.1G.'
      memory-limits-too-low: This value must be equal to or greater than the equivalent value for Requests.
      memory-request-too-high: This value must be equal to or lower than the equivalent value for Limits.
      memory-too-low: This value is too low. The minimum value is {{minValue}}.
      min-replicas-positive: Minimum number of replicas must be a positive integer.
      min-replicas-too-high: Minimum number of replicas has to be equal to or lower than maximum.
      no-changes: No changes made.
      no-repository-found: There are no Repositories available. Create a Repository.
      one-field-empty: At least one field is empty.
      one-field-invalid: At least one field is invalid.
      req-base-dir: Base Directory is required.
      req-reference: Reference is required.
      required-name: Function name is required.
      too-long: Function name cannot be longer than 63 characters.
    inline-help:
      base-directory: Directory with your Function's code and dependencies
      reference: Reference to the Function's source. Select a branch name or commit revision.
      source-type: Provide code and dependencies as plain text with inline editor, or fetch them from a Git repository
    labels:
      base-directory: Base Directory
      git-repository: Git Repository
      inline-editor: Inline Editor
      reference: Reference
      repository: Repository
    title: Create Function
  description: <0>Function</0> is a simple code snippet that you can run without provisioning or managing servers.
  details:
    buttons:
      diff_toggle: Diff
      edit-configuration: Edit Configuration
    descriptions:
      build-job: Choose one of the predefined values for build Job's resources or set your own values ​​by selecting the "Custom" option.
      limits: Maximum amount of compute resources allowed.
      maximum-replicas: Maximum number of running Replicas. Set it to 0 to disable the function.
      minimum-replicas: Minimum number of running Replicas.
      requests: Minimum amount of compute resources required.
      runtime-profile: Choose one of the predefined values for Function's resources or set your own values ​​by selecting the "Custom" option.
    errors:
      req-reference: Reference is required.
    inline-help:
      function-reference: Reference to the Function's source. Select a branch name or commit revision.
    title:
      build-job: Build Job Profile
      code: Code
      configuration: Configuration
      cpu: CPU
      dependencies: Dependencies
      limits: Limits
      maximum-replicas: Maximum Replicas
      memory: Memory
      minimum-replicas: Minimum Replicas
      requests: Requests
      resources: Resources
      resources-replicas: Resources and Replicas
      runtime-profile: Runtime Profile
      scaling-options: Scaling Options
  errors:
    server: Server error. Contact your cluster admin.
  headers:
    runtime: Runtime
    source-type: Source Type
  name_singular: Function
  pod-list:
    buttons:
      view-logs: View Logs
    title: Replicas of the Function
  repository:
    title: Repository Configuration
  statuses:
    building: Building
    deploying: Deploying
    failed: Failed
    failed-message: Function couldn't be processed.
    initializing: Initializing
    new-revision-error: New Revision Error
    running: Running
    unhealthy: Unhealthy
  title: Functions
  variable:
    buttons:
      add: Add Environment Variable
      open:
        config-map: Config Map Variable
        custom: Custom Variable
        secret: Secret Variable
    create-modal:
      title:
        config-map: Create Config Map Variable
        custom: Create Custom Variable
        secret: Create Secret Variable
    edit-modal:
      title:
        config-map: Edit Config Map Variable
        custom: Edit Custom Variable
        secret: Edit Secret Variable
    errors:
      duplicate-multiple-names: 'Some of the variables duplicate the existing names: {{names}}.'
      duplicated: Duplicated variable name.
      empty: Variable is empty.
      invalid: Variable name must consist of alphanumeric characters, can contain '_', no blank spaces.
      invalid-config: Select the Config Map name and key.
      invalid-secret: Select the Secret name and key.
      restricted: This variable name is restricted and cannot be used. Try a different name.
    form:
      all-keys: <All keys>
      config-map: $t(functions.variable.type.config-map)
      key: $t(functions.variable.header.key)
      name: Name
      secret: $t(functions.variable.type.secret)
      take-all-description: Multiple single variables will be created with "Name" as a common prefix.
      value: $t(functions.variable.header.value)
    header:
      key: Key
      name: Variable Name
      owner: Source Controlled By
      source: Source
      value: Value
    not-found: This Function doesn't have any environment variables yet.
    not-match: Couldn't find environment variables matching this query.
    placeholders:
      name: Variable name
      value: Variable value
    popup-error: At least one variable has an incorrect name format, is restricted, duplicated, or empty.
    title:
      environment-variables: Environment Variables
      injected-variables: Environment variables injected by the Service Bindings
    tooltip:
      config-map: This variable comes from the "{resourceName}" Config Map.
      custom: This variable was provided by the user.
      secret: This variable comes from the "{resourceName}" Secret.
      service-binding: This variable was injected by the Service Binding referencing Service Instance "{serviceInstanceName}".
      text: This variable comes from a resource. To get the value, follow the link.
    type:
      config-map: Config Map
      custom: Custom
      secret: Secret
      service-binding: Service Binding
    warnings:
      override: This variable name is identical to the variable injected by the Service Binding. Continue if you intend that they can override each other. Otherwise, choose another name.
      sbu-can-be-overridden:
        by-both: This variable can be overridden by one of the custom variables or a variable injected by one of the Service Bindings.
        by-custom-env: This variable can override or be overridden by one of the custom variables.
        by-sbu: This variable can override or be overridden by a variable injected by one of the Service Bindings.
      text: Warning
      variable-can-override-sbu: This variable can override or be overridden by a variable injected by one of the created Service Bindings.
gateways:
  create-modal:
    advanced:
      add-server: Add server
      delete-server: Delete server
      enable-tls: Enable TLS
      hosts: Hosts
      mode-tooltip: Indicates whether connections to the port are secured using TLS.
      placeholders:
        hosts: Enter the hosts, $t(domains.example).
        port:
          name: Enter the name.
          number: Enter the port number.
          protocol: Enter the protocol.
          target-port: Enter the target port.
        tls:
          ca-certificates: Enter the CA certificates path.
          mode: Select TLS Mode
          private-key: Enter the private key path.
          server-certificate: Enter the certificate path.
      port:
        name: Name
        number: Number
        ports: Ports
        protocol: Protocol
        target-port: Target port
      tls:
        ca-certificates: CA Certificate
        credentialName: Credential Name
        disabled-for-non-https: TLS settings are not available for a non-HTTPS protocol.
        http-redirect: HTTP Redirect
        http-redirect-description: Enable 301 redirect for all HTTP connections.
        max-protocol-version: Max Protocol Version
        messages:
          invalid-tls-warning: TLS Server of mode SIMPLE or MUTUAL needs either credential name, or private key and server certificate pair.
        min-protocol-version: Min Protocol Version
        mode: TLS Mode
        private-key: Private Key
        server-certificate: Server Certificate
        tls: TLS
    at-least-one-server-required: Gateway must have at least one server.
    simple:
      selector: Selector
      server: Server
      servers: Servers
    title: Create Gateway
    tooltips:
      ca-certificates: The path to a file containing certificate authority (CA) certificates, which verify a presented client-side certificate.
      credential-name: The name of the Secret. Required properties are key and cert; for mutual TLS (mTLS), caceert is also required. Alternatively, you can use a Secret of type tls for server certificates along with a ca.crt key for CA certificates.
      hosts: At least one host exposed by the gateway, in FQDN format with optional wildcard character in the left-most component.
      private-key: The path to the file holding the server’s private key.
      protocol: The protocol exposed on the port. TLS implies that the connection is routed based on the SNI header to the destination, without terminating the TLS connection.
      selector: One or more labels that indicate a set of pods on which the gateway configuration is applied. By default, workloads are searched across all namespaces based on label selectors.
      server-certificate: The path to the file holding the server-side TLS certificate you want to use.
      target-port: The port number on the endpoint where the traffic is received.
  description: ' <0>Gateway</0> describes a load balancer that operates at the edge of the mesh and receives incoming or outgoing HTTP/TCP connections.'
  name_singular: Gateway
  selector: Selector
  servers:
    hosts: Hosts
    name: Name
    port: Port
    secret: TLS Secret
    title: Servers
    tls: TLS Mode
  title: Gateways
generic-list:
  no-entries-found: No entries found
git-repositories:
  auth:
    basic: Basic
    public: Public
    ssh-key: SSH Key
  description: <0>Git Repository</0> is used to define and manage Git repositories that store the Function's source code and dependencies.
  errors:
    invalid-url: Invalid Repository URL. The URL must start with the "http(s)", "git", or "ssh" prefix and end with the ".git" suffix.
  labels:
    auth: Authentication
    create: Connect Repository
    secret: Secret
    url: Repository URL
  name_singular: Git Repository
  placeholders:
    secret: Enter a Secret name with credentials
    url: Enter the URL address of your Git repository
  title: Git Repositories
  tooltips:
    auth: 'Basic: token or password / SSH key: authentication key / Public: no authentication.'
    secret: The name of the Secret with credentials used by the Function Controller to authenticate to the Git repository in order to fetch the Function's source code and dependencies.
    url: URL must be a valid Git repository address that starts with the "http(s)", "git", or "ssh" prefix.
instances:
  description: <0>Service Instance</0> is a provisioned instance of a service that can be consumed by an application.
  no-specific-plan-parameters:
    tooltip: The service provider did not define specific parameters for the selected plan. Refer to the documentation to learn about the required parameters, and define them as a JSON in the editor.
  title: Instances
integration:
  title: Integration
issuers:
  acme: ACME
  auto-registration: Auto registration
  ca: CA
  create:
    messages:
      failure: Failed to create the issuer.
      success: Issuer created.
  description: <0>Issuer</0> is a Namespace resource responsible for provisioning of certificates.
  domains:
    excluded: Excluded domains
    included: Included domains
    title: Domains
  email: E-mail
  external-account:
    key-id: CA key ID
    secret: Symmetric MAC Secret
    title: External account binding
  name_singular: Issuer
  placeholders:
    email: Email address for user registration
    key-id: ID of the CA that the external account is bound to
    name: Issuer Name
    requests-per-day: Daily requests quota
    server: ACME Server URL
    type: Select issuer type
  private-key: Private key Secret
  requests-per-day: Daily requests quota
  server: Server
  skip-dns: Skip DNS challenge validation
  state: Status
  title: Issuers
  tooltips:
    email: The email address to use for user registration.
    excluded-domains: The domains (including subdomains) for which certificate requests are forbidden, $t(domains.example).
    external-account-binding: ACMEExternalAccountBinding is a reference to a CA external account of the ACME server.
    included-domains: The domains (including subdomains) for which certificate requests are allowed, $t(domains.example).
    issuer-type: Certification authority used
    key-secret-ref: keySecretRef is the secret ref to the Secret that holds the symmetric MAC key of the External Account Binding with data key 'hmacKey'. The secret key stored in the Secret **must** be un-padded, base64 URL encoded data.
    requests: RequestsPerDayQuota is the maximum number of certificate requests per days allowed for this issuer
    secret-ref-acme: PrivateKeySecretRef is the secret ref to the ACME private key.
    secret-ref-ca: PrivateKeySecretRef is the secret ref to the CA secret.
    server: Server is the URL of the ACME server.
    skip-dns: SkipDNSChallengeValidation marks that this issuer does not validate DNS challenges. In this case, no DNS entries/records are created for a DNS Challenge, and DNS propagation is not checked.
  type: Issuer Type
jobs:
  completion-time: Completion Time
  completions: Completions
  conditions:
    last-probe: Last Probe
    last-transition: Last Transition
    status: Status
    title: Conditions
    type: Type
  create-modal:
    at-least-one-container-required: Cron Job must have at least one container.
    container: Container
    containers: Containers
    containers-readonly-in-edit: After a Job is created, the containers are read-only.
    labels:
      args: Args
      command: Command
      docker-image: Docker Image
      failed-jobs-history-limit: Failed Jobs History Limit
      image-pull-policy: Image Pull Policy
      parallelism: Parallelism
      starting-deadline: Starting Deadline
      successful-jobs-history-limit: Successful Jobs History Limit
      suspend: Suspend
    placeholders:
      args: Arguments to the ENTRYPOINT.
      command: Command to run in a container.
      docker-image: Enter the Docker image tag, for example, 'busybox'.
      failed-jobs-history-limit: 'The number of failed finished jobs to retain (default: 1).'
      parallelism: 'The maximum number of Pods the job should run at any given time (default: 1).'
      starting-deadline: Optional deadline in seconds.
      successful-jobs-history-limit: 'The number of successful finished jobs to retain (default: 3).'
    tooltips:
      args: Docker image CMD is used if arguments are not provided. Provide either args or command.
      command: The Docker image's ENTRYPOINT is used if this is not provided. Provide either args or command.
      starting-deadline: Optional deadline in seconds for starting the job if it misses the scheduled time.
      suspend: 'If true, the controller suspends subsequent executions (default: false). It does not apply to started executions.'
  description: <0>Job</0> creates and supervises Pods until their successful termination.
  name-singular: Job
  start-time: Start Time
  title: Jobs
kubeconfig-id:
  error: "Couldn't load kubeconfig ID; configuration not changed (Error: ${{error}})."
  must-be-an-object: Kubeconfig must be a JSON or YAML object.
legal:
  copyright: Copyright
  legal-disclosure: Legal Disclosure
  privacy: Privacy
  trademark: Trademark
limit-ranges:
  headers:
    default: Default
    default-request: Default Request
    max: Max
  title: Limit Ranges
machine-info:
  architecture-cpus: Architecture and CPUs
  cpu-m: CPU (m)
  cpu-usage: 'CPU usage:'
  cpus: CPUs
  gib: GiB
  kube-proxy-version: Kube proxy version
  kubelet-version: Kubelet version
  memory: Memory
  memory-gib: Memory (GiB)
  memory-usage: 'Memory usage:'
  operating-system: Operating system
  pods-capacity: Pods capacity
  title: Machine info
namespaces:
  create-modal:
    apply-limits: Apply limits per container
    apply-memory-quotas: Apply total memory quotas
    disable-sidecar: Disable sidecar injection
  description: <0>Namespace</0> helps to maintain and divide resources in a cluster.
  events:
    headers:
      created: Created
      message: Message
      object: Object
      object-type: Object Type
    title: Warnings
  overview:
    back: Back to Namespaces
    resources:
      error: Error while loading memory consumption data.
      limits: Memory limits
      requests: Memory requests
      title: Resource Consumption
    title: Overview
    workloads:
      deploy-new: Deploy a new workload
      deployments: $t(deployments.title)
      error: 'Error while loading {{title}} data due to: {{message}}'
      pods: $t(pods.title)
      title: Healthy Resources
  title: Namespaces
  tooltips:
    container-memory-limit: Define memory constraints for individual containers in your Namespace.
    create: Select this option to disable Istio to mediate all communication between the Pods in your Namespace.
    healthy-resources: '{{value}}/{{total}} {{resourceType}} are healthy.'
    memory-examples: 'Use plain value in bytes (128974848) or equivalent suffixes (e.g.: 129e6, 129M, 123Mi).'
    no-resources: There are no {{resourceType}} in this Namespace.
    total-memory-limit: Define constraints that limit total memory consumption in your Namespace.
    usage-of-memory-limits: This Namespace uses {{valueText}} of {{maxText}} its memory limits.
    usage-of-memory-requests: This Namespace uses {{valueText}} of {{maxText}} its memory requests.
no-permissions:
  title: No Permissions
node-details:
  internal-ip: Internal IP
  involved-object: Involved Object
  message: Message
  name: Cluster Overview - Nodes
  pod-cidr: Pod CIDR
  timestamp: Timestamp
  title-warnings: Warnings
oauth2-clients:
  auth-methods:
    client_secret_basic: Client Secret / Basic
    client_secret_post: Client Secret / POST
    none: None
    private_key_jwt: Private Key / JWT
  description: <0>OAuth2 Client</0> allows an application to acquire an OAuth2 token to access protected resources.
  grant-types:
    authorization_code: Authorization Code
    client_credentials: Client Credentials
    implicit: Implicit
    refresh_token: Refresh Token
  headers:
    secret: Secret
  labels:
    audience: Audience
    auth-method: Token Endpoint Authentication Method
    client-name: Client Name
    grant-types: Grant Types
    post-logout-redirect-uris: Post-Logout Redirect URIs
    redirect-uris: Redirect URIs
    response-types: Response Types
    scope: Scope
    secret: Secret
    secret-name: Secret Name
    uris: URIs
  name_singular: OAuth2 Client
  placeholders:
    scope: OAuth2 scope
  response-types:
    code: Code
    id_token: ID Token
    token: Token
  secret: OAuth2 Client Credentials
  title: OAuth2 Clients
  tooltips:
    audience: Audience is a whitelist defining the audiences this client is allowed to request tokens for.
    client-name: Client name is the human-readable string name of the client to be presented to the end-user during authorization.
    secret-name: Secret name points to the Kubernetes Secret that contains the client's ID and password.
observability:
  title: Observability
pods:
  buttons:
    view-logs: View Logs
  description: <0>Pod</0> is the smallest and simplest Kubernetes object that represents a set of containers running on your cluster.
  headers:
    pod-ip: Pod IP
    type: Type
    volume-name: Volume Name
  labels:
    constainers: Containers
    filter-timeframe: 'Filter timeframe by:'
    image: Image
    image-pull-policy: Image Pull Policy
    init-constainers: Init Containers
    ports: Ports
    reverse-logs: Reverse logs
    save-to-file: Save to a file
    show-timestamps: Show Timestamps
    volumes: Volumes
  message:
    failed-to-download: Failed to download the logs.
    no-logs-available: No logs avaliable for the '{{containerName}}' container.
    type-not-found: '{{type}} not found.'
  node: Node
  restarts: Restarts
  title: Pods
preferences:
  title: Preferences
replica-sets:
  cpu: CPU
  create-modal:
    labels:
      min-ready-seconds: Minimum ready seconds
      replicas: Replicas
    placeholders:
      min-ready-seconds: Minimum number of seconds
      replicas: Replicas
    tooltips:
      min-ready-seconds: Minimum number of seconds for which a newly created Pod should be ready without any of its containers crashing in order to be considered available.
      replicas: Replicas is the number of desired replicas.
  description: <0>Replica Set</0> maintains a number of replica Pods running at any given time.
  headers:
    images: Images
    limits: Limits
    replicas: Ready Replicas
    requests: Requests
  memory: Memory
  name_singular: Replica Set
  title: Replica Sets
resource-quotas:
  headers:
    limits: Limits
    requests: Requests
  title: Resource Quotas
role-bindings:
  create-modal:
    api-group: API Group
    at-least-one-subject-required: '{{resource}} must have at least one subject.'
    group-name: Group Name
    kind: Kind
    role: Role
    subject: Subject
    subjects: Subjects
    tooltips:
      kind: Being part of the JWT token, you must set User and Groups at the OIDC level if you use an OIDC provider.
    user-name: User Name
  description: <0>Role Binding</0> assigns the permissions defined in a Role to a user.
  headers:
    kind: Kind
    role-ref: Role Reference
    subjects: Subjects
  labels:
    annotations: Annotations
    service-account: Service Account
  name_singular: Role Binding
  placeholders:
    api-group: API Group
    group:
      name: User group
    user:
      name: User name
  title: Role Bindings
roles:
  description: <0>Role</0> is a set of permissions within a Namespace that can be assigned to a user.
  headers:
    api-groups: API Groups
    custom: Custom
    non-resource-urls: Non-resource URLs
    resource-names: Resource Names
    resources: Resources
    rule: Rule
    rules: Rules
    verbs: Verbs
  messages:
    invalid: Rules cannot apply to both regular resources and non-resource URLs.
  name_singular: Role
  title: Roles
secrets:
  buttons:
    collapse: Collapse All
    decode: Decode
    encode: Encode
    expand: Expand All
  create-modal:
    messages:
      decoding-failure: 'Failed to decode the Secret data: {{error}}.'
      failure: 'Failed to create the Secret: {{error}}.'
      success: Secret created.
    title: Create Secret
  data: Data
  description: <0>Secret</0> is an object that stores sensitive data in key-value pairs.
  edit-modal:
    messages:
      failure: 'Failed to update the Secret: {{error}}.'
      success: Secret updated.
  headers:
    type: Type
  labels:
    annotations: Annotations
    type: Secret Type
  metadata: Metadata
  name_singular: Secret
  placeholders:
    type: Type of Secret
  title: Secrets
  title-edit-secret: Edit Secret
  type: Type
  updated: Secret updated
service-accounts:
  auto-mount-token:
    descriptions:
      disabled: For security reasons, don't enable automount if you don't need it.
      enabled: For security reasons, don't use automount if you don't need it.
    disabled: disabled
    enabled: enabled
  create-modal:
    at-least-one-secret-required: '{{resource}} must have at least one secret.'
    tooltips:
      auto-mount-token: When set to true, it automatically mounts the service account token within each container of a given pod. For security reasons, don't enable automount if you don't need it.
      image-pull-secrets: Image Pull Secrets is a list of references to Secrets in the same Namespace to use for pulling any images in Pods that reference this Service Account. Image Pull Secrets are distinct from Secrets because Secrets can be mounted in a Pod, but Image Pull Secrets are only accessed by the kubelet.
      secrets: Secrets is the list of Secrets allowed to be used by running Pods using this Service Account.
  description: <0>Service Account</0> enables processes to run on a Pod to communicate and authenticate to the API server.
  headers:
    auto-mount-token: Automount Token
    download-kubeconfig: Download Kubeconfig
    image-pull-secrets: Image Pull Secrets
    secret: Secret
    secrets: Secrets
  name_singular: Service Account
  service-account: Service Account
  title: Service Accounts
service-management:
  title: Service Management
services:
  cluster-ip: Cluster IP
  description: <0>Service</0> enables access to an application running on a set of Pods.
  external-ips: External IPs
  labels:
    service: Service
  name_singular: Service
  ports: Ports
  title: Services
  type: Service Type
settings:
  clusters:
    confirmations: Confirmations
    description: Cluster interaction
    dontConfirmDelete: Delete without confirmation
    showHiddenNamespaces: Show hidden Namespaces
    title: Clusters
  interface:
    description: Theme, language
    themes:
      dark:
        description: Use in dimmed environments
        title: Dark
      hcb:
        description: Optimized contrast and accessibility for bright environments
        title: High-Contrast Black
      hcw:
        description: Optimized contrast and accessibility for dark environments
        title: High-Contrast White
      light:
        description: Use in default office environments
        title: Light
      light_dark:
        description: Automatically matches your system settings
        title: Light / Dark
    title: Interface
  language: Language
  theme: Theme
stateful-sets:
  description: <0>Stateful Set</0> is used for the management of Pods' deployment and scaling.
  replicas: Replicas
  title: Stateful Sets
top-nav:
  profile:
    preferences: $t(preferences.title)
workloads:
  docker-image:
    tooltip: Enter a valid Docker image registry path.
  title: Workloads
