apiVersion: v1
kind: Namespace
metadata:
  name: commerce-mock
  labels:
    env: 'true'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: commerce-mock
  namespace: commerce-mock
  labels:
    app: commerce-mock
spec:
  selector:
    matchLabels:
      app: commerce-mock
  strategy:
    rollingUpdate:
      maxUnavailable: 1
  replicas: 1
  template:
    metadata:
      labels:
        app: commerce-mock
    spec:
      containers:
        - image: ghcr.io/sap-samples/xf-application-mocks/commerce-mock:latest
          imagePullPolicy: Always
          name: mock
          ports:
            - name: http
              containerPort: 10000
          env:
            - name: DEBUG
              value: 'true'
            - name: RENEWCERT_JOB_CRON
              value: '00 00 */12 * * *'
          volumeMounts:
            - mountPath: '/app/keys'
              name: mock-volume
          resources:
            requests:
              memory: '150Mi'
              cpu: '50m'
            limits:
              memory: '250Mi'
              cpu: '100m'
      volumes:
        - name: mock-volume
          persistentVolumeClaim:
            claimName: commerce-mock
---
apiVersion: v1
kind: Service
metadata:
  name: commerce-mock
  namespace: commerce-mock
  labels:
    app: commerce-mock
spec:
  ports:
    - name: http
      port: 10000
  selector:
    app: commerce-mock
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: commerce-mock
  namespace: commerce-mock
  labels:
    app: commerce-mock
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: gateway.kyma-project.io/v1alpha1
kind: APIRule
metadata:
  labels:
    app: commerce-mock
  name: commerce-mock
  namespace: commerce-mock
spec:
  gateway: kyma-gateway.kyma-system.svc.cluster.local
  service:
    name: commerce-mock
    port: 10000
    host: commerce
  rules:
    - path: /.*
      methods: ['GET', 'POST', 'PUT', 'DELETE', 'HEAD']
      accessStrategies:
        - handler: allow
