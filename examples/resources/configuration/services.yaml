kind: ConfigMap
apiVersion: v1
metadata:
  name: services
  namespace: resource
  labels:
    app.kubernetes.io/name: services
    busola.io/extension: resource
    busola.io/extension-version: '0.5'
data:
  details: |-
    {
      "header": [
        {
          "source": "metadata.ownerReferences",
          "widget": "ControlledBy"
        },
        {
          "source": "spec.type",
        },
        {
          "source": "spec.clusterIP",
        },
        {
          "name": "ports",
          "source": "$count(spec.ports) ? $map(spec.ports, function($value) {$value.port = $value.targetPort ? [$string($value.port), '/', $string($value.protocol)] ~> $join('') : [$string($value.port), ':', $string($value.targetPort), '/', $string($value.protocol)] ~> $join('') }) ~> $join(', ')  : '-'"
        },
        {
          "name": "External IPs",
          "source": "$count(status.loadBalancer.ingress) ? $map(status.loadBalancer.ingress, function($value) {$value.ip ? $value.ip : $value.hostname}) ~> $join(', '): ($count(data.spec.externalIPs) ? data.spec.externalIPs ~> $join(', '): '-')"
        }
      ],
      "body": [
        {
          "widget": "ResourceList",
          "source": "$subscriptions",
          "name": "Subscription"
        },
        {
          "widget": "ResourceList",
          "source": "$apirules",
          "name": "API Rule"
        }
      ]
    }
  form: '[]'
  list: |-
    [
      {
        "source": "metadata.ownerReferences",
        "widget": "ControlledBy",
        "kindOnly": true,
      },
      {
        "source": "spec.type",
      },
      {
        "source": "spec.clusterIP",
      },
      {
        "name": "ports",
        "source": "$count(spec.ports) ? $map(spec.ports, function($value) {$value.port = $value.targetPort ? [$string($value.port), '/', $string($value.protocol)] ~> $join('') : [$string($value.port), ':', $string($value.targetPort), '/', $string($value.protocol)] ~> $join('') }) ~> $join(', ')  : '-'"
      },
      {
        "name": "External IPs",
        "source": "$count(status.loadBalancer.ingress) ? $map(status.loadBalancer.ingress, function($value) {$value.ip ? $value.ip : $value.hostname}) ~> $join(', '): ($count(data.spec.externalIPs) ? data.spec.externalIPs ~> $join(', '): '-')"
      }
    ]
  dataSources: |-
    {
      "apirules":{
        "resource": {
          "kind": "APIRule",
          "group": "gateway.kyma-project.io",
          "version": "v1alpha1"
        },
        "filter": "$item.spec.service.name = $root.metadata.name"
      },
      "subscriptions":{
        "resource": {
          "kind": "Subscription",
          "group": "eventing.kyma-project.io",
          "version": "v1alpha1"
        },
        "filter": "$substringAfter($substringBefore($item.spec.sink, '.'), '://') = $root.metadata.name"
      }
    }
  general: |-
    {
      "resource": {
        "kind": "Service",
        "version": "v1",
      },
      "urlPath": "example-services",
      "scope": "namespace",
    }
  translations: |-
    {
      "en": {
        "name": "Services",
        "category": "Custom Resources",
        "metadata.annotations": "Annotations",
        "metadata.labels": "Labels",
        "metadata.ownerReferences": "Controlled  By",
        "ports": "Ports",
        "spec.clusterIP": "Cluster IP",
        "spec.type": "Service Type"
      }
    }
