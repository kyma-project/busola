kind: ConfigMap
apiVersion: v1
metadata:
  name: subscriptions
  namespace: kube-public
  labels:
    app.kubernetes.io/name: subscriptions.eventing.kyma-project.io
    busola.io/extension: resource
    busola.io/extension-version: '0.5'
data:
  general: |-
    resource:
      kind: Subscription
      group: eventing.kyma-project.io
      version: v1alpha1
    name: Cherry Subscriptions
    category: Cherry
    scope: namespace
    description: '{{[Subscription](https://kyma-project.io/docs/kyma/latest/05-technical-reference/00-custom-resources/evnt-01-subscription#documentation-content)}} is used to subscribe to events.'
    urlPath: cherry-subscriptions
  details: |-
    header: 
      - name: Status
        source: status.ready
        widget: Badge
      - name: Sink
        source: spec.sink
      - source: '$substringBefore($substring(spec.sink, 7), ".")'
        # widget: ControlledBy
        placeholder: '-'
    body: 
      - source: status.conditions
        widget: Table
        name: Condidtions
        children:
          - source: '$item.status'
            name: Status
          - source: '$item.reason'
            name: Reason
          - source: '$readableTimestamp($item.lastTransitionTime)'
            name: Last Transition
      - source: spec.filter.filters
        widget: Table
        name: Filters
        disablePadding: true
        showHeader: false
        collapsibleTitle: '"Filter #" & $string($index + 1) & " " & ($item.eventType.value)'
        collapsible:
          - source: '$parent.eventType'
            widget: Panel
            name: Event Type
            children:
              - source: '$parent.property'
                name: Property
              - source: '$parent.type'
                name: Type
              - source: '$parent.value'
                name: Value
          - source: '$parent.eventSource'
            widget: Panel
            name: Event Source
            children:
              - source: '$parent.property'
                name: Property
              - source: '$parent.type'
                name: Type
              - source: '$parent.value = "" ? "Handled by the NATS backend" : $parent.value'
                name: Value
      - widget: EventList
        filter: '$matchEvents($item, $root.kind, $root.metadata.name)'
        name: Events
        defaultType: NORMAL
        hideInvolvedObjects: true
      - source: spec
        widget: CodeViewer
    # {
    #   "header": [],
    #   "body": [
    #     {
    #       "name": "Summary",
    #       "widget": "Panel",
    #       "children": [
    #         {
    #           "name": "id",
    #           "source": "spec.id"
    #         },
    #         {
    #           "name": "protocol",
    #           "source": "spec.protocol"
    #         },
    #         {
    #           "name": "sink",
    #           "source": "spec.sink"
    #         },
    #         {
    #           "name": "Ready",
    #           "source": "status.ready"
    #         },
    #         {
    #           "name": "Age",
    #           "source": "metadata.creationTimestamp"
    #         },
    #         {
    #           "name": "Clean Event Types",
    #           "source": "status.cleanEventTypes"
    #         }
    #       ]
    #     },
    #     {
    #       "source": "spec",
    #       "widget": "CodeViewer"
    #     }
    #   ]
    # }
  form: |-
    - simple: true
      path: spec.sink
      name: Sink
      required: true
    - simple: true
      path: spec.filter.filters[].eventType.value
      name: Event Type
      placeholder: placeholder.eventType
      required: true
    - simple: true
      path: spec.filter.filters[].eventSource.value
      name: Event Source
      required: false
  list: |-
    - name: Status
      source: status.ready
      widget: Badge
    - name: Event Types
      source: spec.filter.filters.eventType.value
      widget: Labels
  translations: |-
    en:
      placeholder.eventType: Enter the event type, for example, sap.kyma.custom.test-app.order.cancelled.v1
